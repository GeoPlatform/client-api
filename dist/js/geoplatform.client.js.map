{"version":3,"file":"geoplatform.client.js","sources":["../../src/shared/polyfills.js","../../src/shared/config.js","../../src/http/jq.js","../../src/http/ng.js","../../src/http/node.js","../../src/shared/types.js","../../src/shared/uri-factory.js","../../src/services/item.js","../../src/services/dataset.js","../../src/services/map.js","../../src/services/layer.js","../../src/shared/parameters.js","../../src/shared/classifiers.js","../../src/shared/query.js","../../src/services/service.js","../../src/services/gallery.js","../../src/services/utils.js","../../src/services/agol.js","../../src/services/proxies/base.js","../../src/services/proxies/item.js","../../src/services/proxies/service.js","../../src/services/proxies/layer.js","../../src/services/proxies/dataset.js","../../src/services/proxies/map.js","../../src/services/proxies/gallery.js","../../src/services/proxies/utils.js","../../src/services/proxies/agol.js","../../src/shared/kg-query.js","../../src/services/kg.js","../../src/shared/query-factory.js","../../src/services/factory.js","../../src/services/tracking.js"],"sourcesContent":["if (typeof Object.assign != 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign(target, varArgs) { // .length of function is 2\n      'use strict';\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n\n\nexport default {};\n","export default {\n\n    ualUrl: 'https://ual.geoplatform.gov',\n    //appId: '...',\n\n    configure: function(options) {\n        Object.assign(this, options);\n    }\n};\n","\nimport Q from 'q';\nimport Config from '../shared/config';\n\nclass JQueryHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options) {\n        options = options || {};\n        this.setTimeout(options.timeout||Config.timeout||30000);\n        this.setAuthToken(options.token);\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true)\n            opts.dataType = 'json';\n\n        if(options.params) {\n            opts.data = options.params;\n            opts.processData = true;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n            opts.processData = options.processData || false;\n            opts.contentType = 'application/json';\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n\n    execute(opts) {\n\n        if(typeof(jQuery) === 'undefined') {\n            throw new Error(\"jQuery is not available. Ensure it is included in your application\");\n        }\n        let d = Q.defer();\n        opts.success = function(data) { d.resolve(data); };\n        opts.error = function(xhr, status, message) {\n            let err = new Error(message);\n            if(xhr.responseText) {\n                try {\n                    let json = JSON.parse(xhr.responseText);\n                    if(json) {\n                        err = new Error(json.message);\n                        err.error = json.error; //label\n                        err.status = json.status; //code\n                    }\n                } catch(e) {\n                    console.log(\"JQHttpClient.execute() - Failed to parse JSON from error message: \" + e.message);\n                }\n            }\n            d.reject(err);\n        };\n        jQuery.ajax(opts);\n        return d.promise;\n    }\n\n}\n\nexport default JQueryHttpClient;\n","\nimport Q from 'q';\nimport Config from '../shared/config';\n\nclass NGHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     * @param {Object} options.$http - angular $http service instance\n     */\n    constructor(options) {\n        if(typeof(angular) === 'undefined')\n            throw new Error(\"Angular not defined\");\n\n        options = options || {};\n        this.setTimeout(options.timeout||Config.timeout||30000);\n        this.setAuthToken(options.token);\n\n        if(options.$http)\n            this.$http = options.$http;\n\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true || 'json' === options.responseType)\n            opts.dataType = 'json';\n        else if('text' === options.responseType)\n            opts.dataType = 'text';\n\n        if(options.params) {\n            opts.params = options.params;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n        }\n\n        //set authorization token if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n                opts.useXDomain = true;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n    execute(opts) {\n\n        if(typeof(angular) === 'undefined')\n            throw new Error(\"Angular is not defined, ensure you have included it as a dependency in your application\");\n\n        let $http = this.$http || angular.injector(['ng']).get('$http');\n        return Q.resolve( $http )\n        .then($http => {\n            if(typeof($http) === 'undefined')\n                throw new Error(\"Angular $http not resolved\");\n\n            // console.log(opts);\n            return $http(opts);\n        })\n        .then(response=>response.data)\n        .catch(response=>Q.reject(response.data));\n    }\n\n}\n\nexport default NGHttpClient;\n","\nimport Q from 'q';\nimport Config from '../shared/config';\n\nclass NodeHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options) {\n        options = options || {};\n        this.setTimeout(options.timeout||Config.timeout||30000);\n        this.setAuthToken(options.token);\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            json: false !== options.json,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.params) {\n            opts.qs = options.params;\n        }\n\n        if(options.file) {\n            const fs = require('fs');\n            if(!fs) throw new Error(\"Module 'fs' not available\");\n            opts.formData = {\n                file: {\n                    value:  fs.createReadStream(options.file.path),\n                    options: {\n                        filename: options.file.originalFilename\n                    }\n                }\n            };\n            Object.assign(opts.formData, options.data||{});\n\n        } else if(options.data) {\n            if(options.formData) {\n                opts.formData = options.data;\n            } else {\n                opts.body = options.data;\n            }\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.auth = { 'bearer': token };\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        // console.log(JSON.stringify(opts));\n\n        return opts;\n    }\n\n\n\n    /**\n     *\n     */\n    execute(options) {\n        let deferred = Q.defer();\n\n        const request = require('request');\n        if(!request) {\n            throw new Error(\"Module 'request' not available\");\n        }\n        // require('request-debug')(request);\n\n        request(options, (error, response, body) => {\n            this.checkAndHandleError(error, response)\n            .then( () =>  {\n                if(options.json === false)\n                    deferred.resolve( response );\n                else\n                    deferred.resolve( body );\n            })\n            .catch( e => deferred.reject(e) );\n        });\n        return deferred.promise;\n    }\n\n\n    /**\n     *\n     */\n    checkAndHandleError (error, response) {\n\n        let props = {\n            message: null,\n            error: null,    //error type\n            status: 200\n        };\n\n        if(error) {\n            // Logger.debug(\"Error generated by request library: \" + error.code);\n\n            if(error.code === 'ETIMEDOUT' || error.code === 'ESOCKETTIMEDOUT') {\n\n                props.status = 500;\n                props.error = \"Connection Timeout\";\n                props.message = \"The response from the service took too long to read\";\n\n                if(error.connect === true) {\n                    props.message = \"Unable to establish a connection to the service\";\n                }\n\n            } else {\n                return Q.reject(error);\n            }\n\n        } else if(response.statusCode < 200 || response.statusCode > 204) {\n\n            // Logger.debug('Error returned by remote endpoint (' + response.statusCode + ')');\n            // Logger.debug(JSON.stringify(response));\n\n            props.status = response.statusCode;\n\n            if(response.body && typeof(response.body) === 'object') {\n                props = response.body;\n                props.status = props.status || response.statusCode;\n                props.message = props.message || \"An error occurred communicating with service\";\n\n                if(response.statusCode === 409) {\n                    let sidx = response.body.message.indexOf(\" \");\n                    let eidx = response.body.message.indexOf(' already exists');\n                    if(sidx >= 0 && eidx > sidx) {\n                        props.item = response.body.message.substring(sidx+1, eidx);\n                    }\n                }\n\n            } else {\n\n                switch(response.statusCode) {\n                    case 404 :\n                        props.error = \"Not Found\";\n                        props.message = response.request.uri.pathname + \" cannot be found\";\n                        break;\n                    case 401 :\n                        props.error = \"Unauthenticated\";\n                        props.message = \"You are not authenticated\";\n                        break;\n                    case 403 :\n                        props.error = \"Unauthorized\";\n                        props.message = \"You are not authorized to access \" + response.request.uri.pathname;\n                        break;\n                    case 409 :\n                        props.error = \"Conflict\";\n                        props.message = \"Item already exists\";\n\n                        // pattern received is: { ..., message: 'Resource <identifier> already exists', ... }\n                        try {\n                            let json = JSON.parse(response.body);\n                            let sidx = json.message.indexOf(\" \");\n                            let eidx = json.message.indexOf(' already exists');\n                            if(sidx >= 0 && eidx > sidx) {\n                                props.item = json.message.substring(sidx+1, eidx);\n                            }\n                        } catch( e ) {\n                            message += '.  Unable to extract existing identifier from service response';\n                        }\n                        break;\n\n                    default:\n\n                        try {\n                            let json = JSON.parse(response.body);\n                            props = json;\n                            props.status = response.statusCode;\n                            // Logger.debug(\"PARSED ERROR: \" + JSON.stringify(props));\n\n                        } catch (e) {\n                            props.error = \"Server Error\";\n                            props.message = response.body;\n                            // Logger.debug(\"DEFAULTED ERROR: \" + JSON.stringify(props));\n                        }\n                }\n\n            }\n\n        }\n\n        if( props.status < 200 || props.status > 204 ) {\n\n            props.error = props.error || \"Server Error\";\n            props.status = props.status || response.statusCode;\n            props.message = props.message || \"An error occurred communicating with service\";\n\n            let err = new Error(props.message);\n            Object.assign(err, props);\n\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err);\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + JSON.stringify(err));\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err.message);\n            return Q.reject(err);\n        }\n\n        return Q.resolve();\n    }\n\n}\n\n\nexport default NodeHttpClient;\n","\n\nconst ItemTypes = {\n    DATASET         : \"dcat:Dataset\",\n    SERVICE         : \"regp:Service\",\n    LAYER           : \"Layer\",\n    MAP             : \"Map\",\n    GALLERY         : \"Gallery\",\n    COMMUNITY       : 'Community',\n    APPLICATION     : 'Application',\n    TOPIC           : 'Topic',\n    WEBSITE         : 'WebSite',\n    ORGANIZATION    : \"org:Organization\",\n    CONTACT         : \"vcard:VCard\",\n    PERSON          : \"foaf:Person\",\n    CONCEPT         : \"skos:Concept\",\n    CONCEPT_SCHEME  : \"skos:ConceptScheme\",\n    STANDARD        : 'dct:Standard',\n    RIGHTS_STATEMENT: 'dct:RightsStatement'\n};\n\nconst ItemTypeLabels = {};\nItemTypeLabels[ItemTypes.DATASET]          = \"Dataset\";\nItemTypeLabels[ItemTypes.SERVICE]          = \"Service\";\nItemTypeLabels[ItemTypes.LAYER]            = \"Layer\";\nItemTypeLabels[ItemTypes.MAP]              = \"Map\";\nItemTypeLabels[ItemTypes.GALLERY]          = \"Gallery\";\nItemTypeLabels[ItemTypes.COMMUNITY]        = 'Community';\nItemTypeLabels[ItemTypes.APPLICATION]      = 'Application';\nItemTypeLabels[ItemTypes.TOPIC]            = 'Topic';\nItemTypeLabels[ItemTypes.WEBSITE]          = 'WebSite';\nItemTypeLabels[ItemTypes.ORGANIZATION]     = \"Organization\";\nItemTypeLabels[ItemTypes.CONTACT]          = \"Contact\";\nItemTypeLabels[ItemTypes.PERSON]           = \"Person\";\nItemTypeLabels[ItemTypes.CONCEPT]          = \"Concept\";\nItemTypeLabels[ItemTypes.CONCEPT_SCHEME]   = \"Concept Scheme\";\nItemTypeLabels[ItemTypes.STANDARD]         = 'Standard';\nItemTypeLabels[ItemTypes.RIGHTS_STATEMENT] = 'Rights Statement';\n\n\n\nexport {\n    ItemTypes as default,\n    ItemTypes,\n    ItemTypeLabels\n};\n","\nimport ItemTypes from './types';\n\n\n\nconst URI_BASE = 'http://www.geoplatform.gov';\n\nconst ESRI_TYPES = [\n    \"http://www.geoplatform.gov/spec/esri-feature-rest\",\n    \"http://www.geoplatform.gov/spec/esri-image-rest\",\n    \"http://www.geoplatform.gov/spec/esri-map-rest\",\n    \"http://www.geoplatform.gov/spec/esri-tile-rest\"\n];\n\n\n\n\nfunction formatReference(ref) {\n    if(ref === null) return '';\n    if(typeof(ref) === 'string')\n        return ref.toLowerCase().replace(/\\s/g,'');\n    else if(typeof(ref) === 'object') {\n        var result = '';\n        for(var prop in ref) {\n            if(ref.hasOwnProperty(prop)) {\n                var value = ref[prop];\n                if(value !== null && typeof(value) !== 'undefined') {\n                    //TODO catch non-string-able values\n                    result += (value+'').toLowerCase().replace(/\\s/g,'');\n                }\n            }\n        }\n        return result;\n    }\n    return '';\n}\n\n/**\n * Adjusts service access url to ignore certain patterns that can affect\n * how URI uniqueness is.\n * @param {object} service - GP Service instance\n * @return {string} access url adjusted for URI generation needs\n */\nfunction fixServiceHref(service) {\n    stripLayerFromServiceHref(service);\n    let url = service.accessURL || service.href;\n    if(!url || !url.length) return null;\n\n    //ensure case sensitivity is not an issue\n    // and that any surrounding whitespace is ignored\n    url = (url + '').trim().toLowerCase();\n\n    url = url.replace(/http(s)?:\\/\\//,'');    //ignore protocol for URI purposes\n\n    url = url.replace(/&?request=[A-Za-z]+/i,'')\n             .replace(/&?service=(WMS|WFS|WCS|CSW)/i,'')\n             .replace(/&?version=[0-9\\.]*/i,'')\n             .replace(/&?layers=[A-Za-z0-9\\-\\:_,]*/i, '')\n             .replace(/&?srs=[A-Za-z0-9\\:]*/i, '')\n             .replace(/&?crs=[A-Za-z0-9\\:]*/i, '')\n             .replace(/&?format=[A-Za-z\\/]*/i, '')\n             .replace(/&?bbox=[0-9,\\.]*/i, '');\n\n    let lastChar = url[url.length-1];\n    if( '/' === lastChar || '?' === lastChar) { //ignore empty querystring or trailing slashes\n        url = url.substring(0, url.length-1);\n    }\n    return url;\n}\n\n\n/**\n * ESRI services sometimes have layer information baked into their URL\n * which needs to be removed before the service can be used.\n * @param service - GP Service object\n */\nfunction stripLayerFromServiceHref(service) {\n\n    if(!service) return;\n    let type = service.serviceType || service.conformsTo;\n    if(!type) return;\n\n    //if ESRI service, make sure it doesn't have a layer id on the href\n    if( ESRI_TYPES.indexOf(type.uri) >= 0 ) {\n\n        let href = service.href || service.accessURL;\n        let matches = href.match(/(Map|Feature|Image)(Server\\/\\d+)/i);\n        if(matches && matches.length > 2) {\n            // 0 < full string match (ie, 'MapServer/1')\n            // 1 < server type match (ie, 'Map' or 'Feature')\n            // 2 < bit we care about (ie, 'Server/1')\n            href = href.replace(matches[2], 'Server/');\n\n            if(service.href) service.href = href;\n            if(service.accessURL) service.accessURL = href;\n        }\n    }\n}\n\n\n\n\n/**\n * @see https://geoplatform.atlassian.net/wiki/display/DT/Common+Object+Identifier+Scheme\n */\nconst URIFactory = {\n\n    factories : {},\n\n    register : function (type, factory) {\n        this.factories[type] = factory;\n    },\n\n    create : function(object, md5Fn) {\n        if(!object || !object.type) return null;\n        if( typeof(md5Fn) !== 'function' ) {\n            throw new Error(\"Must specify a MD5 function when using URIFactory\");\n        }\n        let factory = this.factories[object.type];\n        if(!factory) return null;\n        return factory(object, md5Fn);\n    }\n};\n\n\n\n\nURIFactory.register(ItemTypes.DATASET, function(dataset, md5) {\n    let pubName = (dataset.publisher||dataset.publishers||[])\n        .map( pub => { return pub.label||\"\"; }).join('');\n    let ref = formatReference({\n        title: dataset.title,\n        pub: pubName\n    });\n    return URI_BASE + '/id/dataset/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.SERVICE, function(service, md5) {\n    let url = fixServiceHref(service);\n    let ref = formatReference(url);\n    return URI_BASE + '/id/service/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.LAYER, function(layer, md5) {\n\n    let svcUrl = '';\n    let services = layer.servicedBy || layer.services;\n    if(services && services.length)\n        svcUrl = services[0].accessURL || services[0].href || '';\n    let lyrUrl = layer.accessURL || layer.href || '';\n    let lyrName = layer.layerName || '';\n\n    //not recommended based upon following example:\n    //  http://services.nationalmap.gov/.../MapServer/WMSServer?request=GetCapabilities&service=WMS/layer/1\n    // return url + '/layer/' + layer.layerName;\n\n    let args = svcUrl + lyrName + lyrUrl;\n    if(!args.length) return null;   //nothing was provided\n\n    //ALTERNATE URI PATTERN\n    let ref = formatReference(args);\n    return URI_BASE + '/id/layer/' + md5(ref);\n\n});\n\n/**\n * Uses the map title, createdBy, and all third-party identifiers associated with the map\n * @param {object} map - GP Map object\n * @return {string} uri unique to this object\n */\nURIFactory.register(ItemTypes.MAP, function(map, md5) {\n    let author = map.createdBy || map._createdBy || \"\";\n    let identifiers = (map.identifiers || map.identifier || []).join('');\n    let ref = formatReference({title: map.title, author: author, identifiers: identifiers});\n    return URI_BASE + '/id/map/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.GALLERY, function(gallery, md5) {\n    let author = gallery.createdBy || gallery._createdBy || \"\";\n    let ref = formatReference({title: gallery.title, author: author});\n    return URI_BASE + '/id/gallery/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.COMMUNITY, function(community, md5) {\n    let ref = formatReference({title: community.title});\n    return URI_BASE + '/id/community/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.ORGANIZATION, function(org, md5) {\n    let ref = formatReference(org.label || org.name);\n    return URI_BASE + '/id/organization/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.PERSON, function(person, md5) {\n    let ref = formatReference(person.name);\n    return URI_BASE + '/id/person/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.CONTACT, function(vcard, md5) {\n    let ref = {};\n    if(vcard.email || vcard.hasEmail)\n        ref.email = vcard.email || vcard.hasEmail; //email\n    if(vcard.tel)\n        ref.tel = vcard.tel; //tel\n    if(vcard.orgName || vcard['organization-name'])\n        ref.orgName = vcard.orgName || vcard['organization-name']; //orgName\n    if(vcard.positionTitle)\n        ref.positionTitle = vcard.positionTitle; //positionTitle\n    ref = formatReference(ref);\n    return URI_BASE + '/id/contact/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.CONCEPT, function(object, md5) {\n    let scheme = object.inScheme || object.scheme;\n    let schemeLabel = scheme ? (scheme.label || scheme.prefLabel) : '';\n    let schemeRef = formatReference(schemeLabel);\n    let ref = formatReference( object.label || object.prefLabel );\n    return URI_BASE + '/id/metadata-codelists/' + md5(schemeRef) + '/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.CONCEPT_SCHEME, function(object, md5) {\n    let ref = formatReference(object.label || object.prefLabel);\n    return URI_BASE + '/id/metadata-codelists/' + md5(ref);\n});\n\n\nURIFactory.register(ItemTypes.APPLICATION, function(object, md5) {\n    if(!object || !object.title) return null;\n    let author = object.createdBy || object._createdBy || \"\";\n    let ref = formatReference({title: object.title, author: author});\n    return URI_BASE + '/id/application/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.TOPIC, function(object, md5) {\n    if(!object || !object.title) return null;\n    let author = object.createdBy || object._createdBy || \"\";\n    let ref = formatReference({title: object.title, author: author});\n    return URI_BASE + '/id/topic/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.WEBSITE, function(item, md5) {\n    if(!item || !item.landingPage) return null;\n    let ref = formatReference(item.landingPage);\n    return URI_BASE + '/id/website/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.DOCUMENT, function() { return null; });\n\n\nfunction factoryFn(md5Fn) {\n    if( typeof(md5Fn) !== 'function' ) {\n        throw new Error(\"Must specify a MD5 function when using URIFactory\");\n    }\n    return function(object) {\n        return URIFactory.create(object, md5Fn);\n    };\n}\n\n\n\nexport {\n    factoryFn as default,\n    factoryFn as URIFactory\n};\n","\nimport Q from 'q';\nimport Config from '../shared/config';\n\n/**\n * ItemService\n * service for working with the GeoPlatform API to\n * retrieve and manipulate items.\n *\n * Ex Searching Items\n *      let params = { q: 'test' };\n *      itemService.search(params).then(response=>{\n *          console.log(response.results.length + \" of \" + response.totalResults);\n *      }).catch(e=>{...});\n *\n * Ex Fetch Item:\n *      itemService.get(itemId).then(item=>{...}).catch(e=>{...});\n *\n * Ex Saving Item:\n *      itemService.save(item).then(item=>{...}).catch(e=>{...});\n *\n * Ex Deleting Item:\n *      itemService.remove(itemId).then(()=>{...}).catch(e=>{...});\n *\n * Ex Patching Item:\n *      itemService.patch(itemId,patch).then(item=>{...}).catch(e=>{...});\n *\n */\nclass ItemService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = Config.timeout || 30000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/items';\n    }\n\n    /**\n     * @param {number} milliseconds - override environment variable timeout\n     */\n    setTimeout(milliseconds) {\n        this.timeout = milliseconds;\n    }\n\n    /**\n     * @param {number} milliseconds - override environment variable timeout\n     */\n    timeout(milliseconds) {\n        this.setTimeout(milliseconds);\n        return this;\n    }\n\n    /**\n     * @param {Logger} logger - log service\n     */\n    setLogger(logger) {\n        this.logger = logger;\n    }\n\n    /**\n     * @param {Error} e - error to log (if logger specified)\n     */\n    logError(e) {\n        if(this.logger && this.logger.error) {\n            this.logger.error(e);\n        }\n    }\n\n    /**\n     * @param {string} msg - message to log as debug\n     */\n    logDebug(msg) {\n        if(this.logger && this.logger.debug) {\n            this.logger.debug(msg);\n        }\n    }\n\n\n\n\n    /**\n     * @param {string} id - identifier of item to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    get (id, options) {\n\n        let url = this.baseUrl + '/' + id;\n        if(options && options.version) {\n            url += '/versions/' + options.version;\n            // this.logDebug(\"Client.get requesting version: \" + options.version);\n        }\n        return Q.resolve( url )\n        .then( url => {\n            let opts = this.buildRequest({ method:\"GET\", url:url, options:options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.get() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {Object} itemObj - item to create or update\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    save (itemObj, options) {\n\n        return Q.resolve( itemObj )\n        .then( item => {\n\n            let method = 'POST',\n                url = this.baseUrl;\n            if(item.id) {\n                method = \"PUT\";\n                url += '/' + item.id;\n            } else {\n                //if item is being created and has no URI already defined\n                // attempt to create one using the API's method for doing so\n                // and then attempt the actual item creation\n                if(!item.uri) {\n                    return this.getUri(item, options)\n                    .then( uri => {\n                        item.uri = uri;\n                        let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n                        return this.execute(opts);\n                    });\n                }\n            }\n\n            let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`Error saving item: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.save() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of item to delete\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving true if successful or an error\n     */\n    remove (id, options) {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:\"DELETE\", url: url, options: options\n            });\n            return this.execute(opts);\n        })\n        .then(response => true)\n        .catch(e => {\n            let err = new Error(`Error deleting item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.remove() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of item to patch\n     * @param {Object} patch - HTTP-PATCH compliant set of properties to patch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    patch (id, patch, options) {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method: \"PATCH\", url: url, data: patch, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error patching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.patch() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of item to patch\n     * @param {Object} overrides - object specifying changes to apply to the clone\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    clone (id, overrides, options) {\n\n        return Q.resolve( this.baseUrl + '/' + id + '/clone' )\n        .then( url => {\n            let opts = this.buildRequest({\n                method: \"POST\", url: url, data: overrides, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error cloning item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.clone() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or GeoPlatform.Query instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    search (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl, params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error searching items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.search() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     *\n     * @param {string} arg - URL to metadata document or File to upload\n     * @param {string} format - metadata format of specified document\n     * @return {Promise} resolving GeoPlatform Item\n     */\n    import (arg, format, options) {\n\n        return Q.resolve( true )\n        .then( () => {\n            if(arg===null || arg === undefined) {\n                throw new Error(\"Must provide a valid URL or File\");\n            }\n            let isFile = typeof(arg) !== 'string';\n            let ro = {\n                method:\"POST\",\n                url: this.apiBase + '/api/import',\n                processData: true,  //for jQuery\n                formData: true,     //for Node (RequestJS)\n                options: options\n            };\n            if(isFile) {\n                ro.file = arg;\n                ro.data = { format: format };\n            } else {\n                ro.formData = false;    //must be false for data to not be multi-part formdata\n                ro.data = { url: arg, format: format };\n            }\n            if(options && options.overwrite) {\n                ro.data.overwrite = (!!options.overwrite)+'';\n                delete options.overwrite;\n            }\n            let opts = this.buildRequest(ro);\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`Error importing item: ${e.message}`);\n            Object.assign(err, e);\n            if(e.status === 409 || ~e.message.indexOf('Item already exists')) err.status = 409;\n            if(e.item) err.item = e.item;\n            this.logError('ItemService.import() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {string} id - identifier of the item to export\n     * @param {format} format - string mime type to export\n     * @return {Promise} resolving HTTP response object for enabling attachment downloading\n     */\n    export (id, format, options) {\n\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/export';\n            let opts = this.buildRequest({\n                method: \"GET\", url: url,\n                params: {format:format},\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let msg = e.message;\n            //https://github.com/GeoPlatform/client-api/issues/1\n            if(e.statusCode && e.statusCode===406 || e.statusCode==='406') {\n                msg = `Unsupported export format specified '${format}'`;\n            }\n            let err = new Error(`Error exporting item: ${msg}`);\n            Object.assign(err, e);\n            this.logError('ItemService.export() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} object - GP object definition to generate a URI for\n     * @param {Object} options - optional request options\n     * @return {Promise} resolving string URI\n     */\n    getUri (object, options) {\n\n        return Q.resolve( object )\n        .then( obj => {\n            if(!obj || !obj.type)\n                throw new Error(\"Must provide an object with a type property\");\n            let url = this.apiBase + '/api/utils/uri';\n            options = options || {};\n            options.responseType = 'text';  //to ensure plaintext is expected\n            let opts = this.buildRequest({\n                method: \"POST\", url: url, data: obj, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`Error getting URI for item: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.getUri() - ' + err.message);\n            return Q.reject(err);\n        });\n\n    }\n\n\n    /**\n     * @param {Array} ids - list of identifiers to fetch objects for\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving list of matching items or an error\n     */\n    getMultiple (ids, options) {\n\n        return Q.resolve( ids )\n        .then( identifiers => {\n\n            let method = 'POST',\n                url = this.apiBase + '/api/fetch';\n\n            let opts = this.buildRequest({method:method, url:url, data:identifiers, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.getMultiple() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Array} uris - list of URIs to retrieve objects for\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving list containing uri-item association where exists\n     */\n    exists(uris, options) {\n        return Q.resolve(uris)\n        .then( uris => {\n            let method = 'POST', url = this.apiBase + '/api/utils/exists';\n            let opts = this.buildRequest({method:method, url:url, data:uris, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error resolving items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.exists() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    like(item, options) {\n        return Q.resolve(item.id)\n        .then( id => {\n            let method = 'PUT', url = this.apiBase + '/api/items/' + id + '/likes';\n            let opts = this.buildRequest({method:method, url:url, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error liking item ${item.id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.like() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    view(item, options) {\n        return Q.resolve(item.id)\n        .then( id => {\n            let method = 'PUT', url = this.apiBase + '/api/items/' + id + '/views';\n            let opts = this.buildRequest({method:method, url:url, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error incrementing views for item ${item.id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.like() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {string} id - identifier of item to fetch associations for\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving array of associated items of the item in question\n     */\n    associations (id, params, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/associations';\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url:url,\n                params: params || {},\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching associations for item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.associations() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of item to fetch version info for\n     * @param {object} params - optional set of query parameters to constrain list of versions\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving array of available versions of the item\n     */\n    versions (id, params, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/versions';\n            let opts = this.buildRequest({ \n                method:\"GET\",\n                url:url,\n                params: params,\n                options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching versions for item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.versions() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout || Config.timeout || 30000;\n\n        let opts = this.createRequestOpts(options);\n\n        return opts;\n    }\n\n    createRequestOpts(options) {\n        let request = this.client.createRequestOpts(options);\n        this.logDebug(\"ItemService.createRequestOpts() - \" + JSON.stringify(request));\n        return request;\n    }\n\n    execute(opts) {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"ItemService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport default ItemService;\n","\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass DatasetService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/datasets';\n    }\n\n\n}\n\nexport default DatasetService;\n","\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass MapService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/maps';\n    }\n\n\n}\n\nexport default MapService;\n","\n\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass LayerService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/layers';\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving style JSON object\n     */\n    style (id, options) {\n        return Q.resolve( id )\n        .then( (id) => {\n\n            let url = this.baseUrl + '/' + id + '/style';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching style: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.style() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} req identifying extent, x, y\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving feature JSON object\n     */\n    describe( id, req, options ) {\n\n        return Q.resolve( req )\n        .then( (req) => {\n\n            if(!req) {\n                throw new Error(\"Must provide describe parameters to use\");\n            }\n\n            let keys = ['bbox', 'height', 'width', 'x', 'y'];\n            let missing = keys.find(key => !req[key]);\n            if(missing) {\n                throw new Error(`Must specify ${missing} in describe req`);\n            }\n\n            let params = {\n                srs         : 'EPSG:4326',\n                bbox        : req.bbox,\n                height      : req.height,\n                width       : req.width,\n                info_format : 'text/xml',\n                x           : req.x,\n                y           : req.y,\n                i           : req.x, //WMS 1.3.0\n                j           : req.y  //WMS 1.3.0\n            };\n\n            let url = this.baseUrl + '/' + id + '/describe';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error describing layer feature: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.describe() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} params describing layer request to validate\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving empty if successful or a message if failed\n     */\n    validate(id, params, options) {\n\n        return Q.resolve( params )\n        .then( params => {\n\n            if(!params) {\n                throw new Error(\"Must provide parameters to use in layer validation\");\n            }\n\n            let url = this.baseUrl + '/' + id + '/validate';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error validating layer request: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.describe() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default LayerService;\n","\n\nexport default {\n    ALTERNATE_TITLE  : 'alternateTitles',\n    BEGINS           : 'startDate.min',\n    CLASSIFIERS      : 'classifiers',\n    CREATED          : 'created',\n    CREATED_BEFORE   : 'created.max',\n    CREATED_AFTER    : 'created.min',\n    CREATED_BY       : 'createdBy',\n    CREATOR          : 'creator.id',\n    CONTRIBUTED_BY   : 'contributedBy',\n    ENDS             : 'endDate.max',\n    EXTENT           : 'extent',\n    IDENTIFIERS      : 'identifiers',\n    KEYWORDS         : 'keywords',\n    LAST_MODIFIED_BY : 'lastModifiedBy',\n    MODIFIED         : 'modified',\n    MODIFIED_BEFORE  : 'modified.max',\n    MODIFIED_AFTER   : 'modified.min',\n    PUBLISHERS_ID    : 'publisher.id',\n    PUBLISHERS_LABEL : 'publisher.label',\n    PUBLISHERS_URI   : 'publisher.uri',\n    CONTACTS_ID      : 'contacts.id',\n    CONTACTS_LABEL   : 'contacts.label',\n    CONTACTS_URI     : 'contacts.uri',\n    QUERY            : 'q',\n    SCHEMES_ID       : 'scheme.id',\n    SCHEMES_LABEL    : 'scheme.label',\n    SCHEMES_URI      : 'scheme.uri',\n    SIMILAR_TO       : 'similarTo',\n    STATUS           : 'status',\n    SERVICE_TYPES    : 'serviceType.id',\n    THEMES_ID        : 'theme.id',\n    THEMES_LABEL     : 'theme.label',\n    THEMES_URI       : 'theme.uri',\n    TOPICS_ID        : 'topic.id',\n    TOPICS_LABEL     : 'topic.label',\n    TOPICS_URI       : 'topic.uri',\n    TYPES            : 'type',      //TODO change to 'types'\n    URI              : 'uri',\n    USED_BY_ID       : 'usedBy.id',\n    USED_BY_LABEL    : 'usedBy.label',\n    USED_BY_URI      : 'usedBy.uri',\n    VISIBILITY       : 'visibility',\n    RESOURCE_TYPE    : 'resourceType',\n    DATASET          : 'dataset',\n    LANDING_PAGE     : 'landingPage',\n    PURPOSE          : 'purpose',\n\n    //statistics parameters\n    RELIABILITY      : 'reliability',\n    RELIABILITY_MIN  : 'reliability.min',\n    RELIABILITY_MAX  : 'reliability.max',\n    ONLINE           : 'online',\n    COMPLIANT        : 'compliant',\n    SPEED            : 'speed',\n    SPEED_MIN        : 'speed.min',\n    SPEED_MAX        : 'speed.max',\n    LIKES            : 'likes',\n    LIKES_MIN        : 'likes.min',\n    LIKES_MAX        : 'likes.max',\n    VIEWS            : 'views',\n    VIEWS_MIN        : 'views.min',\n    VIEWS_MAX        : 'views.max',\n\n    //type-specific parameters\n    HREF             : 'href',           //service-specific\n    LAYER_TYPE       : 'layerType',     //layer-specific\n    LAYER_NAME       : 'layerName',     //...\n    PARENT_LAYER     : 'parentLayer',   //...\n    SUB_LAYER        : 'subLayer',      //...\n    SERVICE          : 'service',       //...\n    MAP_LAYER        : 'mapLayer',      //map-specific\n    GALLERY_ITEM     : 'galleryItem',   //gallery-specific\n\n    //meta-parameters\n    FACETS           : 'includeFacets',  //TODO change to 'facets'\n    FIELDS           : 'fields',\n    SORT             : 'sort',\n    PAGE             : 'page',\n    PAGE_SIZE        : 'size',\n\n    //recommender service-specific\n    FOR_TYPES        : 'for'\n};\n","\n\n\nexport default  {\n    PURPOSE             : 'purpose',\n    FUNCTION            : 'function',\n    TOPIC_PRIMARY       : 'primaryTopic',\n    TOPIC_SECONDARY     : 'secondaryTopic',\n    SUBJECT_PRIMARY     : 'primarySubject',\n    SUBJECT_SECONDARY   : 'secondarySubject',\n    COMMUNITY           : 'community',\n    AUDIENCE            : 'audience',\n    PLACE               : 'place',\n    CATEGORY            : 'category'\n};\n","\nimport Parameters from './parameters';\nimport Classifiers from './classifiers';\n\nconst Fields = {\n    ACCESS_RIGHTS       : 'rights',\n    ALTERNATE_TITLES    : 'alternateTitles',\n    ANNOTATIONS         : 'annotations',\n    CLASSIFIERS         : 'classifiers',\n    CONCEPT_SCHEME      : 'scheme',\n    CONTACTS            : 'contacts',\n    CREATED             : 'created',\n    CREATED_BY          : 'createdBy',\n    DATASETS            : 'datasets',\n    DESCRIPTION         : 'description',\n    DISTRIBUTIONS       : 'distributions',\n    EXTENT              : 'extent',\n    GALLERY_ITEMS       : 'items',\n    HREF                : 'href',\n    IDENTIFIERS         : 'identifiers',\n    KEYWORDS            : 'keywords',\n    LABEL               : 'label',\n    LAST_MODIFIED_BY    : 'lastModifiedBy',\n    LAYERS              : 'layers',\n    LAYER_TYPE          : 'layerType',\n    LAYER_NAME          : 'layerName',\n    LEGEND              : 'legend',\n    MODIFIED            : 'modified',\n    PARENT_LAYER        : 'parentLayer',\n    PUBLISHERS          : 'publishers',\n    RESOURCE_TYPES      : 'resourceTypes',\n    SERVICE_TYPE        : 'serviceType',\n    SERVICES            : 'services',\n    SPATIAL             : 'spatial',\n    STATISTICS          : 'statistics',\n    STATUS              : 'status',\n    SUB_LAYERS          : 'subLayers',\n    TEMPORAL            : 'temporal',\n    THEMES              : 'themes',\n    THUMBNAIL           : 'thumbnail',\n    TOPICS              : 'topics',\n    USED_BY             : 'usedBy',\n    VISIBILITY          : 'visibility',\n    LANDING_PAGE        : 'landingPage'\n};\n\nconst FIELDS_DEFAULT = [\n    Fields.CREATED, Fields.MODIFIED, Fields.CREATED_BY,\n    Fields.PUBLISHERS, Fields.THEMES, Fields.DESCRIPTION\n];\n\n/* --------------------------------------------------------- */\n\nconst Facets = {\n    ALTERNATE_TITLES    : 'alternateTitles',\n    CONCEPT_SCHEMES     : 'schemes',\n    CREATED_BY          : 'createdBy',\n    HREF                : 'href',\n    IDENTIFIERS         : \"identifiers\",\n    LAYER_TYPE          : 'layerType',\n    LAYER_NAME          : 'layerName',\n    LIKES               : 'likes',\n    ONLINE              : 'online',\n    PUBLISHERS          : 'publishers',\n    CONTACTS            : 'contacts',\n    RELIABILITY         : 'reliability',\n    SERVICE_TYPES       : 'serviceTypes',\n    SPEED               : 'speed',\n    STATUS              : 'status',\n    THEMES              : 'themes',\n    TOPICS              : 'topics',\n    TYPES               : 'type',   //TODO change to 'types'\n    USED_BY             : 'usedBy',\n    VIEWS               : 'views',\n    VISIBILITY          : 'visibility'\n};\n\nconst FACETS_DEFAULT = [\n    Facets.TYPES,\n    Facets.PUBLISHERS,\n    Facets.SERVICE_TYPES,\n    Facets.CONCEPT_SCHEMES,\n    Facets.VISIBILITY,\n    Facets.CREATED_BY\n];\n\n\n/*\n    Map facet keys to parameters so clients can set\n    query params using faceted results\n\n    //TODO remove these and their function below\n */\nconst FacetToParam = {};\nFacetToParam[Facets.TYPES]           = Parameters.TYPES;\nFacetToParam[Facets.THEMES]          = Parameters.THEMES_ID;\nFacetToParam[Facets.TOPICS]          = Parameters.TOPICS_ID;\nFacetToParam[Facets.PUBLISHERS]      = Parameters.PUBLISHERS_ID;\nFacetToParam[Facets.CONTACTS]        = Parameters.CONTACTS_ID;\nFacetToParam[Facets.CONCEPT_SCHEMES] = Parameters.SCHEMES_ID;\nFacetToParam[Facets.USED_BY]         = Parameters.USED_BY_ID;\n\n\n\n/* --------------------------------------------------------- */\n\n\nconst SORT_OPTIONS_DEFAULT = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nconst BBOX_REGEX = /^\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?$/;\n\n\nfunction toArray(value) {\n    let result = value;\n    //if given a non-array value, wrap in array\n    if(result !== null && typeof(result.push) === 'undefined') result = [result];\n    //if array value is empty, nullify the result\n    if(result !== null && !result.length) result = null;\n    return result;\n}\n\n\n\n/**\n * Query\n *\n * Specify the \"default\" query constraints to use by passing in 'options.defaults = {...}';\n *\n * @constructor\n */\nclass Query {\n\n    /**\n     * @param {Object} options - set of initial constraints\n     */\n    constructor(options) {\n        this.defaultQuery = { };\n        this.defaultQuery[Parameters.PAGE] = 0;\n        this.defaultQuery[Parameters.PAGE_SIZE] = 10;\n        this.defaultQuery[Parameters.SORT] = \"modified,desc\";\n        this.defaultQuery[Parameters.FIELDS] = FIELDS_DEFAULT.slice(0);\n        this.defaultQuery[Parameters.FACETS] = FACETS_DEFAULT.slice(0);\n        if(options && options.defaults) {\n            Object.assign(this.defaultQuery, options.defaults);\n            delete options.defaults;\n        }\n        this.query = JSON.parse(JSON.stringify(this.defaultQuery));\n        if(options) {\n            this.applyParameters(options);\n        }\n    }\n\n\n    /**\n     * @return {object} containing request-ready parameters/values\n     */\n    getQuery() {\n        let result = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n    /**\n     * @return {Query}\n     */\n    clone() {\n        let result = new Query();\n        let json = JSON.parse(JSON.stringify(this.query));\n        result.applyParameters(json);\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     * @param {string} name\n     * @param {any} value\n     * @return {Query} this\n     */\n    parameter(name, value) {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    /**\n     * @param {string} name\n     * @param {any} value\n     */\n    setParameter (name, value) {\n        if(\n            //if no value was provide\n            value === null || value === undefined ||\n            //or empty array\n            (typeof(value.push) !== 'undefined' && !value.length)\n        ) {\n            this.clearParameter(name);\n        }\n        else this.query[name] = value;\n    }\n\n    /**\n     * @param {string} name - name of parameter to remove existing value for\n     */\n    clearParameter(name) {\n        delete this.query[name];\n    }\n\n    /**\n     * @param {string} key - name of parameter\n     * @return {string} value of parameter\n     */\n    getParameter (key) {\n        return this.query[key];\n    }\n\n    /**\n     * @param {object} obj - set of parameter/values to apply to this query\n     */\n    applyParameters (obj) { \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n    /**\n     * @param {string} facet - name of facet to set the value for as a parameter\n     * @param {string} value - value of the facet to use as the parameter's value\n     */\n     //TODO remove this function\n    setFacetParameter (facet, value) {\n        let param = FacetToParam[facet];\n        if(!param) {\n            console.log(\"WARN : Query.applyFacetParameter() - \" +\n                \"unable to map facet to known parameter '\" + facet + \"', using \" +\n                \"as direct parameter which may not operate as intended\");\n        }\n        this.setParameter(param||facet, value);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     * @param {string} text\n     * @return {Query} this\n     */\n    q(text) { this.setQ(text); return this; }\n    /** @param {string} text - free text query */\n    setQ (text) { this.setParameter(Parameters.QUERY, text); }\n    /** @return {string} */\n    getQ() { return this.getParameter(Parameters.QUERY); }\n\n\n    // -----------------------------------------------------------\n\n\n    keywords(text) {\n        this.setKeywords(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setKeywords (text) {\n        this.setParameter(Parameters.KEYWORDS, toArray(text));\n    }\n\n    getKeywords() {\n        return this.getParameter(Parameters.KEYWORDS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    uri (uri) {\n        this.setUri(uri);\n        return this;\n    }\n\n    setUri(uri) {\n        this.setParameter(Parameters.URI, uri);\n    }\n\n    getUri() {\n        return this.getParameter(Parameters.URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    types(types) {\n        this.setTypes(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - name of class(es) to request\n     */\n    setTypes (types) {\n        this.setParameter(Parameters.TYPES, toArray(types));\n    }\n\n    getTypes () {\n        return this.getParameter(Parameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    createdBy(user) {\n        this.setCreatedBy(user);\n        return this;\n    }\n\n    /** @param {string} user - username */\n    setCreatedBy (user) {\n        this.setParameter(Parameters.CREATED_BY, user);\n    }\n\n    /** @return {string} username */\n    getCreatedBy () {\n        return this.getParameter(Parameters.CREATED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    lastModifiedBy(user) {\n        this.setLastModifiedBy(user);\n        return this;\n    }\n\n    /** @param {string} user - username */\n    setLastModifiedBy (user) {\n        this.setParameter(Parameters.LAST_MODIFIED_BY, user);\n    }\n\n    /** @return {string} username */\n    getLastModifiedBy () {\n        return this.getParameter(Parameters.LAST_MODIFIED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.THEMES_LABEL or Parameters.THEMES_URI\n     * respectively.\n     * @param {array[string]} themes - string or array of strings containing theme constraint\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    themes(themes, parameter) {\n        this.setThemes(themes, parameter);\n        return this;\n    }\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.THEMES_LABEL or Parameters.THEMES_URI\n     * respectively.\n     * @param {array[string]} themes - theme or themes to constrain by\n     */\n    setThemes (themes, parameter) {\n\n        //clear existing\n        this.setParameter(Parameters.THEMES_ID, null);\n        this.setParameter(Parameters.THEMES_LABEL, null);\n        this.setParameter(Parameters.THEMES_URI, null);\n\n        let param = parameter || Parameters.THEMES_ID;\n        this.setParameter(param, toArray(themes));\n    }\n\n    getThemes () {\n        return this.getParameter(Parameters.THEMES_ID) ||\n            this.getParameter(Parameters.THEMES_LABEL) ||\n            this.getParameter(Parameters.THEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Topic or set of Topics to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.TOPIC_LABEL or Parameters.TOPIC_URI\n     * respectively.\n     * @param {array[string]} topics - string or array of strings containing theme constraint\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    topics(topics, parameter) {\n        this.setTopics(topics, parameter);\n        return this;\n    }\n\n\n    /**\n     * Specify a Topic or set of Topics to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.TOPIC_LABEL or Parameters.TOPIC_URI\n     * respectively.\n     * @param {array[string]} topics - theme or topics to constrain by\n     */\n    setTopics (topics, parameter) {\n\n        //clear existing\n        this.setParameter(Parameters.TOPICS_ID, null);\n        this.setParameter(Parameters.TOPICS_LABEL, null);\n        this.setParameter(Parameters.TOPICS_URI, null);\n\n        let param = parameter || Parameters.TOPICS_ID;\n        this.setParameter(param, toArray(topics));\n    }\n\n    getTopics () {\n        return this.getParameter(Parameters.TOPICS_ID) ||\n            this.getParameter(Parameters.TOPICS_LABEL) ||\n            this.getParameter(Parameters.TOPICS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be identifiers. If using labels or uris,\n     * specify the optional second parameter to be either\n     * Parameters.PUBLISHERS_LABEL or Parameters.PUBLISHERS_URI respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    publishers(publishers, parameter) {\n        this.setPublishers(publishers, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be identifiers. If using labels or uris,\n     * specify the optional second parameter to be either\n     * Parameters.PUBLISHERS_LABEL or Parameters.PUBLISHERS_URI respectively.\n     * @param {array[string]} publishers - publishing orgs to constrain by\n     */\n    setPublishers (publishers, parameter) {\n\n        //clear existing\n        this.setParameter(Parameters.PUBLISHERS_ID, null);\n        this.setParameter(Parameters.PUBLISHERS_LABEL, null);\n        this.setParameter(Parameters.PUBLISHERS_URI, null);\n\n        let param = parameter || Parameters.PUBLISHERS_ID;\n        this.setParameter(param, toArray(publishers));\n    }\n\n    getPublishers () {\n        return this.getParameter(Parameters.PUBLISHERS_ID) ||\n            this.getParameter(Parameters.PUBLISHERS_LABEL) ||\n            this.getParameter(Parameters.PUBLISHERS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Point of Contact or set of Contacts to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter to be either\n     * Parameters.CONTACTS_LABEL or Parameters.CONTACTS_URI respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    contacts(contacts, parameter) {\n        this.setContacts(contacts, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Contact or set of Contacts to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter to be either\n     * Parameters.CONTACTS_LABEL or Parameters.CONTACTS_URI respectively.\n     * @param {array[string]} contacts - publishing orgs to constrain by\n     */\n    setContacts (contacts, parameter) {\n\n        //clear existing\n        this.setParameter(Parameters.CONTACTS_ID, null);\n        this.setParameter(Parameters.CONTACTS_LABEL, null);\n        this.setParameter(Parameters.CONTACTS_URI, null);\n\n        let param = parameter || Parameters.CONTACTS_ID;\n        this.setParameter(param, toArray(contacts));\n    }\n\n    getContacts () {\n        return this.getParameter(Parameters.CONTACTS_ID) ||\n            this.getParameter(Parameters.CONTACTS_LABEL) ||\n            this.getParameter(Parameters.CONTACTS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.USED_BY_LABEL or Parameters.USED_BY_URI\n     * respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    usedBy(ids, parameter) {\n        this.setUsedBy(ids, parameter);\n        return this;\n    }\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.USED_BY_LABEL or Parameters.USED_BY_URI\n     * respectively.\n     * @param {array[string]} ids - publishing orgs to constrain by\n     */\n    setUsedBy (ids, parameter) {\n\n        //clear existing\n        this.setParameter(Parameters.USED_BY_ID, null);\n        this.setParameter(Parameters.USED_BY_LABEL, null);\n        this.setParameter(Parameters.USED_BY_URI, null);\n\n        let param = parameter || Parameters.USED_BY_ID;\n        this.setParameter(param, toArray(ids));\n    }\n\n    getUsedBy () {\n        return this.getParameter(Parameters.USED_BY_ID) ||\n            this.getParameter(Parameters.USED_BY_LABEL) ||\n            this.getParameter(Parameters.USED_BY_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.SCHEMES_LABEL or Parameters.SCHEMES_URI\n     * respectively.\n     * @param {array[string]} schemes - schemes to constrain by\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    schemes(schemes, parameter) {\n        this.setSchemes(schemes, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.SCHEMES_LABEL or Parameters.SCHEMES_URI\n     * respectively.\n     * @param {array[string]} schemes - schemes to constrain by\n     * @param {string} parameter - optional, to indicate the parameter to use\n     */\n    setSchemes (schemes, parameter) {\n\n        //clear existing\n        this.setParameter(Parameters.SCHEMES_ID, null);\n        this.setParameter(Parameters.SCHEMES_LABEL, null);\n        this.setParameter(Parameters.SCHEMES_URI, null);\n\n        let param = parameter || Parameters.SCHEMES_ID;\n        this.setParameter(param, toArray(schemes));\n    }\n\n    getSchemes() {\n        return this.getParameter(Parameters.SCHEMES_ID) ||\n            this.getParameter(Parameters.SCHEMES_LABEL) ||\n            this.getParameter(Parameters.SCHEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     *\n     */\n    serviceTypes(types) {\n        this.setServiceTypes(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - ids\n     */\n    setServiceTypes (types) {\n        this.setParameter(Parameters.SERVICE_TYPES, toArray(types));\n    }\n\n    getServiceTypes () {\n        return this.getParameter(Parameters.SERVICE_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    visibility(vis) {\n        this.setVisibility(vis);\n        return this;\n    }\n\n    /**\n     * @param {string} visibility - one of 'public' or 'private'\n     */\n    setVisibility (visibility) {\n        this.setParameter(Parameters.VISIBILITY, visibility);\n    }\n\n    getVisibility () {\n        return this.getParameter(Parameters.VISIBILITY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    status(value) {\n        this.setStatus(value);\n        return this;\n    }\n\n    /**\n     * @param {string} status - current status of Item\n     */\n    setStatus (value) {\n        this.setParameter(Parameters.STATUS, value);\n    }\n\n    getStatus () {\n        return this.getParameter(Parameters.STATUS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    extent(bbox) {\n        this.setExtent(bbox);\n        return this;\n    }\n\n    /**\n     * @param {string} bboxStr - form of \"minx,miny,maxx,maxy\"\n     */\n    setExtent (bbox) {\n        if(bbox) {\n            if(typeof(bbox.toBboxString) !== 'undefined') {\n                //Leaflet Bounds instance\n                bbox = bbox.toBboxString();\n\n            } else if(typeof(bbox.push) !== 'undefined' && bbox.length &&\n                //Nested array (alternate Leaflet representation):\n                // [ [minLat,minLong], [maxLat,maxLong] ]\n                typeof(bbox[0].push) !== 'undefined') {\n                bbox = bbox[0][1]+','+bbox[0][0]+','+bbox[1][1]+','+bbox[1][0];\n\n            } else if(typeof(bbox) === 'string') {\n                if(!BBOX_REGEX.test(bbox)) {\n                    throw new Error(\"Invalid argument: bbox string must be \" +\n                        \"in form of 'minx,miny,maxx,maxy'\");\n                }\n            } else {\n                throw new Error(\"Invalid argument: bbox must be one of \" +\n                    \"Leaflet.Bounds, nested array, or bbox string\");\n            }\n        }\n        this.setParameter(Parameters.EXTENT, bbox);\n    }\n\n    /**\n     * @return {string} bbox string or null if not set\n     */\n    getExtent () {\n        return this.getParameter(Parameters.EXTENT);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Ex.\n     *  const { KGClassifiers, Query } from 'geoplatform.client';\n     *  let purposeId = '...';\n     *  let query = new Query();\n     *  query.classifier( KGClassifiers.PURPOSE, purposeId );\n     *\n     * @param {string} classifier - string name of classifier to use\n     * @param {string} value - id or array of ids of concepts to use\n     * @return Query\n     */\n    classifier(classifier, value) {\n        this.setClassifier(classifier, value);\n        return this;\n    }\n\n    /**\n     * Ex.\n     *  const { KGClassifiers, Query } from 'geoplatform.client';\n     *  let purposeId = '...';\n     *  let query = new Query();\n     *  query.setClassifier( KGClassifiers.PURPOSE, purposeId );\n     *\n     * @param {string} classifier - string name of classifier to use\n     * @param {string} value - id or array of ids of concepts to use\n     */\n    setClassifier(classifier, value) {\n        let arr = toArray(value);\n        this.setParameter(Parameters.CLASSIFIERS + \".\" + classifier, arr);\n    }\n\n    /**\n     * @param {string} classifier - name of classifier constraint in use\n     * @return {array} of concept ids\n     */\n    getClassifier(classifier) {\n        return this.getParameter(Parameters.CLASSIFIERS + \".\" + classifier) || [];\n    }\n\n    /**\n     * Ex.\n     *  const { KGClassifiers, Query } from 'geoplatform.client';\n     *  let purposeId = '...',\n     *      functionIds = ['...','...'];\n     *  let query = new Query();\n     *  query.classifiers({\n     *       KGClassifiers.PURPOSE: purposeId,\n     *       KGClassifiers.FUNCTION: functionIds\n     *  });\n     *\n     * @param {string} value - object defining classifiers\n     * @return Query instance\n     */\n    classifiers(value) {\n        this.setClassifiers(value);\n        return this;\n    }\n\n    /**\n     * @param {string} value - object defining classifiers\n     */\n    setClassifiers (value) {\n        const classes = Object.keys(Classifiers).map(k=>Classifiers[k]);\n        if(!value || typeof(value) !== 'object' || Array.isArray(value)) {\n            classes.forEach( classifier => {\n                this.clearParameter( Parameters.CLASSIFIERS + \".\" + classifier, null ); \n            });\n            return;\n        }\n        Object.keys(value).forEach( classifier => {\n            if(~classes.indexOf(classifier)) {\n                this.setClassifier( classifier, value[classifier] );\n            }\n        });\n    }\n\n    /**\n     * @return classifiers used in the query\n     */\n    getClassifiers () {\n        let result = {};\n        Object.keys(Classifiers).map(k=>Classifiers[k]).forEach( classifier => {\n            result[classifier] = this.getClassifier(classifier);\n        });\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    modified(date, beforeOrAfter) {\n        this.setModified(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param {Date} date - date to compare against\n     * @param {boolean} beforeOrAfter - flag specifying which boundary condition (true = before, false = after) flag specifying whether to trigger update automatically\n     */\n    setModified (date, beforeOrAfter) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(Parameters.MODIFIED_BEFORE, null);\n            this.setParameter(Parameters.MODIFIED_AFTER, null);\n            return;\n        }\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? Parameters.MODIFIED_BEFORE : Parameters.MODIFIED_AFTER;       //property being set\n        let oppProp = dir ? Parameters.MODIFIED_AFTER : Parameters.MODIFIED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getModified () {\n        let value = this.getParameter(Parameters.MODIFIED_BEFORE) ||\n            this.getParameter(Parameters.MODIFIED_AFTER);\n        if(value && typeof(value) === 'number') {\n            value = new Date(value);\n        }\n        return value;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    created(date, beforeOrAfter) {\n        this.setCreated(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param {Date} date - date to compare against\n     * @param {boolean} beforeOrAfter - flag specifying which boundary condition (true = before, false = after) flag specifying whether to trigger update automatically\n     */\n    setCreated (date, beforeOrAfter) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(Parameters.CREATED_BEFORE, null);\n            this.setParameter(Parameters.CREATED_AFTER, null);\n            return;\n        }\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? Parameters.CREATED_BEFORE : Parameters.CREATED_AFTER;       //property being set\n        let oppProp = dir ? Parameters.CREATED_AFTER : Parameters.CREATED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getCreated () {\n        let value = this.getParameter(Parameters.CREATED_BEFORE) ||\n            this.getParameter(Parameters.CREATED_AFTER);\n        if(value && typeof(value) === 'number') {\n            value = new Date(value);\n        }\n        return value;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    begins(date) {\n        this.setBeginDate(date);\n        return this;\n    }\n\n    setBeginDate (date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(Parameters.BEGINS, date);\n    }\n\n    getBeginDate () {\n        let date = this.getParameter(Parameters.BEGINS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    ends(date) {\n        this.setEndDate(date);\n        return this;\n    }\n\n    setEndDate (date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(Parameters.ENDS, date);\n    }\n\n    getEndDate () {\n        let date = this.getParameter(Parameters.ENDS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    between(begin, end) {\n        this.setBetween(begin, end);\n        return this;\n    }\n\n    setBetween(begin, end) {\n        this.begins(begin);\n        this.ends(end);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    resourceTypes(types) {\n        this.setResourceTypes(types);\n        return this;\n    }\n\n    setResourceTypes(types) {\n        this.setParameter(Parameters.RESOURCE_TYPE, toArray(types));\n    }\n\n    getResourceTypes() {\n        return this.getParameter(Parameters.RESOURCE_TYPE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    facets(names) {\n        this.setFacets(names);\n        return this;\n    }\n\n    /*\n     * @param {array[string]} names - names of facets\n     */\n    setFacets (names) {\n        this.setParameter(Parameters.FACETS, toArray(names));\n    }\n\n    getFacets() {\n        return this.getParameter(Parameters.FACETS);\n    }\n\n    /**\n     * @param {string} name - name of facet to add\n     */\n    addFacet(name) {\n        let facets = this.getFacets() || [];\n        facets.push(name);\n        this.setFacets(facets);\n    }\n\n    /**\n     * @param {string} name - name of facet to remove\n     */\n    removeFacet(name) {\n        let facets = this.getFacets() || [];\n        let idx = facets.indexOf(name);\n        if(idx>=0) {\n            facets.splice(idx, 1);\n            this.setFacets(facets);\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    fields(fields) {\n        this.setFields(fields);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} fields - list of field names to request for each search result\n     */\n    setFields (fields) {\n        this.setParameter(Parameters.FIELDS, toArray(fields));\n    }\n\n    getFields() {\n        return this.getParameter(Parameters.FIELDS);\n    }\n\n    /**\n     * @param {string} field - name of field to remove\n     */\n    addField(field) {\n        let fields = this.getFields() || [];\n        fields.push(field);\n        this.setFields(fields);\n    }\n\n    /**\n     * @param {string} field - name of field to remove\n     */\n    removeField(field) {\n        let fields = this.getFields() || [];\n        let idx = fields.indexOf(name);\n        if(idx>=0) {\n            fields.splice(idx, 1);\n            this.setFields(fields);\n        }\n    }\n\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this.setParameter(Parameters.PAGE, page*1);\n    }\n\n    getPage() {\n        return this.getParameter(Parameters.PAGE);\n    }\n\n    nextPage() {\n        this.setPage(this.getPage()+1);\n    }\n\n    previousPage() {\n        this.setPage(this.getPage()-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this.setParameter(Parameters.PAGE_SIZE, size*1);\n    }\n\n    getPageSize() {\n        return this.getParameter(Parameters.PAGE_SIZE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.setParameter(Parameters.SORT, sort);\n    }\n\n    getSort() {\n        return this.getParameter(Parameters.SORT);\n    }\n\n    getSortField() {\n        let value = this.getSort();\n        return value && value.length ? value.split(',')[0] : null;\n    }\n\n    getSortOrder() {\n        let value = this.getSort();\n        return value && value.length ? value.split(',')[1] : null;\n    }\n\n    /**\n     * @return {array} list of key-value pairs of sort options\n     */\n    getSortOptions() {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = JSON.parse(JSON.stringify(this.defaultQuery));\n    }\n}\n\nexport {\n    Query as default,\n    Query,\n    Fields,\n    Facets\n};\n","\n\nimport Q from 'q';\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport Query from '../shared/query';\n\n/**\n * GeoPlatform Service service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate service objects.\n *\n * @see ItemService\n */\n\nclass ServiceService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/services';\n    }\n\n\n    /**\n     * Fetch metadata from the specified GeoPlatform Service's\n     * web-accessible implementation using either GetCapabilities\n     * or ESRI documentInfo.\n     * @param {Object} service - GeoPlatform Service object\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving service metadata\n     */\n    about( service, options ) {\n\n        return Q.resolve( service )\n        .then( svc => {\n            if(!svc)\n                throw new Error(\"Must provide service to get metadata about\");\n            let opts = this.buildRequest({\n                method:'POST', url:this.baseUrl + '/about', data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error describing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.about() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service types\n     */\n    types (options) {\n\n        let query = new Query()\n        .types(ItemTypes.STANDARD)\n        .resourceTypes('ServiceType')\n        .pageSize(50)\n        .getQuery();\n\n        return Q.resolve( query )\n        .then( (params) => {\n            let url = this.apiBase + '/api/items';\n            let opts = this.buildRequest({\n                method:'GET', url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response => response.results)\n        .catch(e => {\n            let err = new Error(`Error fetching service types: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.types() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} service - GP Service definition\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving imported service\n     */\n    import (service, options) {\n\n        return Q.resolve( service )\n        .then( svc => {\n            let url = this.baseUrl + '/import';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error importing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.import() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {string} id - identifier of GP service to harvest layers for\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service layers\n     */\n    harvest (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/harvest';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error harvesting layers from service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.harvest() - ' + err.message);\n            return Q.reject(err);\n        });\n\n    }\n\n    /**\n     * @param {string} id - identifier of GP service to live test\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service statistics\n     */\n    liveTest (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/test';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error testing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.liveTest() - '  + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of GP service to fetch statistics about\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service statistics\n     */\n    statistics (id, options) {\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/statistics';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error getting service statistics: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.statistics() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default ServiceService;\n","\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass GalleryService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/galleries';\n    }\n\n    addItem (galleryId, itemObj, options) {\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + galleryId + '/items';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data: itemObj, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(\"Error adding item: \" + e.message);\n            Object.assign(err, e);\n            this.logError('GalleryService.addItem() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    removeItem( galleryId, itemId, options) {\n        return Q.resolve( this.baseUrl + '/' + galleryId + '/items/' + itemId )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:'DELETE', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response=>true)\n        .catch(e => {\n            let err = new Error(\"Error adding item: \" + e.message);\n            Object.assign(err, e);\n            this.logError('GalleryService.addItem() - '+ err.message);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default GalleryService;\n","\nimport Q from 'q';\nimport Config from '../shared/config';\n\nclass UtilsService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = Config.timeout || 30000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.baseUrl = baseUrl;\n    }\n\n    /**\n     * @param {Logger} logger - log service\n     */\n    setLogger(logger) {\n        this.logger = logger;\n    }\n\n    /**\n     * @param {Error} e - error to log (if logger specified)\n     */\n    logError(e) {\n        if(this.logger && this.logger.error) {\n            this.logger.error(e);\n        }\n    }\n\n    /**\n     * @param {string} msg - message to log as debug\n     */\n    logDebug(msg) {\n        if(this.logger && this.logger.debug) {\n            this.logger.debug(msg);\n        }\n    }\n\n\n    /**\n     * @param {string} property - optional capa property to specifically request\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving capabilities object\n     */\n    capabilities (property, query, options) {\n\n        let url = this.baseUrl + '/api/capabilities';\n        if(property)\n            url += '/' + property;\n\n        return Q.resolve( url )\n        .then( (url) => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query||{}, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error getting capabilities: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.capabilities() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {File} file\n     * @param {string} format\n     * @param {Object} options\n     * @return {Promise}\n     */\n    parseFile (file, format, options) {\n\n        var url = this.baseUrl + '/api/utils/parse';\n\n        return Q.resolve( url )\n        .then( url => {\n\n            let opts = this.buildRequest({\n                method:\"POST\",  url:url,\n                data: { format: format },\n                file: file,\n                formData: true,   //NodeJS (RequestJS)\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then( response => response )\n        .catch(e => {\n            let err = new Error(`Error parsing file: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.parseFile() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * Geolocate the specified argument to a set of candidate locations.\n     * @param {Object} value - text string to geolocate (name or lat,lng)\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving an array of geocoded results\n     */\n    locate(value, options) {\n\n        var url = this.baseUrl + '/api/utils/gazetteer';\n        return Q.resolve(url)\n        .then( url => {\n            let opts = this.buildRequest({\n                method: 'GET',\n                url: url,\n                params: { location: value }\n            });\n            return this.execute(opts);\n        })\n        .then(response => response)\n        .catch(e => {\n            let err = new Error(`Error resolving location: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.locate() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout || Config.timeout || 30000;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"UtilsService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport default UtilsService;\n","\n\nimport Q from 'q';\nimport ItemTypes from '../shared/types';\nimport Config from '../shared/config';\n\nclass AgolQuery {\n\n    constructor() {\n        this._query = {\n            page: 0,\n            size: 10\n        };\n    }\n\n    getQuery() {\n        let result = {};\n        for(let prop in this._query) {\n            let value = this._query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n    // ---------------------------------------\n\n    q(value) { this.setQ(value); return this; }\n    setQ(value) { this._query.q = value; }\n    getQ() { return this._query.q; }\n\n    // ---------------------------------------\n\n    types(value) { this.setTypes(value); return this; }\n    setTypes(value) {\n        if(value && typeof(value.push) !== 'undefined')\n            value = value.join(',');\n        this._query.types = value;\n    }\n    getTypes() { return this._query.types; }\n\n    // ---------------------------------------\n\n    groups(value) { this.setGroups(value); return this; }\n    setGroups(value) {\n        if(value && typeof(value.push) !== 'undefined')\n            value = value.join(',');\n        this._query.groups = value;\n    }\n    getGroups() { return this._query.groups; }\n\n    // ---------------------------------------\n\n    orgs(value) { this.setOrgs(value); return this; }\n    setOrgs(value) {\n        if(value && typeof(value.push) !== 'undefined')\n            value = value.join(',');\n        this._query.orgs = value;\n    }\n    getOrgs() { return this._query.orgs; }\n\n    // ---------------------------------------\n\n    extent(value) { this.setExtent(value); return this; }\n    setExtent(value) { this._query.bbox = value; }\n    getExtent() { return this._query.bbox; }\n\n    // ---------------------------------------\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) { this.setSort(sort, order); return this; }\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this._query.sort = sort;\n    }\n    getSort() { return this._query.sort; }\n    getSortField() { return this._query.sort.split(',')[0]; }\n    getSortOrder() { return this._query.sort.split(',')[1] === 'asc'; }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this._query.page = page*1;\n    }\n\n    getPage() {\n        return this._query.page;\n    }\n\n    nextPage() {\n        this.setPage(this._query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this._query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this._query.size = size*1;\n    }\n\n    getPageSize() {\n        return this._query.size;\n    }\n\n}\n\n\n\n\nclass AgolService {\n\n\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = Config.timeout || 30000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.baseUrl = baseUrl + '/api/agol';\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL ORGS METHODS\n\n\n    /**\n     * @param {string} id - identifier of AGOL organization to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    getOrg (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/orgs/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getOrg() - Error fetching org ${id}: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or Query instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    searchOrgs (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl + '/orgs', params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchOrgs() - Error searching orgs: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL GROUPS METHODS\n\n\n    /**\n     * @param {string} id - identifier of AGOL group to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    getGroup (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/groups/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getGroup() - Error fetching group ${id}: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or AgolQuery instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    searchGroups (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl + '/groups', params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchGroups() - Error searching groups: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL ITEMS METHODS\n\n    /**\n     * @param {string} id - identifier of AGOL item to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    getItem (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/items/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getItem() - Error fetching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or AgolQuery instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    searchItems (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl + '/items', params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchItems() - Error searching items: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /* --------------------------- */\n\n    getAgolId (obj) {\n        if(!obj) return null;\n\n        if(!obj.type) return null;\n\n        if(ItemTypes.ORGANIZATION === obj.type || 'Group' === obj.type) {\n            return obj.id;\n        }\n\n        if(!obj.identifiers || !obj.identifiers.length) return null;\n        let ids = obj.identifiers.filter(id => ~id.indexOf('agol:'));\n        if(!ids.length) return null;\n        return ids[0].replace('agol:','');\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout || Config.timeout || 30000 ;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"AGOLService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport {\n    AgolService as default,\n    AgolService,\n    AgolQuery\n};\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport Config from '../../shared/config';\nimport ItemService from \"../item\";\n\n\n\nconst ServiceProxy = {\n\n    /**\n     * @param {Router} router - ExpressJS router instance\n     * @param {array[object]} routes - list of routes to map to the router\n     * @param {object} options - additional configuration needed\n     */\n    bindRoutes: function(router, routes, options) {\n\n        options = options || {};\n        let paths = options.paths || {};\n        let auths = options.auth || {};\n\n        routes.forEach( route => {\n\n            if(paths[route.key] === false) return;  //disabled endpoint\n            if(!paths[route.key] && !route.path) return; //something is wrong with route\n\n            //newer route override...\n            // {\n            //   'create': {\n            //     'path': 'custom/path',\n            //     'auth': true,\n            //     'respFn': function(result, res, next) { }\n            //   }\n            // }\n            let overrides = options[route.key] || {};\n\n            //look for overriden paths in either new override structure or older key:path format\n            let path = '/' + ( overrides.path || paths[route.key] || route.path );\n            //look for authentication override in either new structure or older format\n            let needsAuth = overrides.auth || auths[route.key] || route.auth;\n\n            // console.log(`Binding Service Route [${route.method}] ${path}`)\n            router[route.method]( path, (req, res, next) => {\n                // console.log(`Executing Service Route [${route.method}] ${path}`)\n                // console.log(JSON.stringify(req.params));\n                // console.log(\" \");\n                let svc = this.getService(req, needsAuth, options);\n                let promise = route.execFn(svc, req)\n                promise.then( result => {\n                    let respFn = overrides.respFn || route.respFn;\n                    if(respFn) respFn(result, res, next);\n                    else res.json(result)\n                })\n                .catch( (err) => {\n                    if(options.onError)\n                        options.onError(route.key, err);\n                    next(err);\n                })\n                .finally( () => {\n                    if(options.onFinish)\n                        options.onFinish(route.key, req, res);\n                });\n            })\n        });\n\n    },\n\n    /**\n    * @param {HttpRequest} req - incoming http request being proxied\n    * @param {boolean} needsAuth - flag indicating if the request must provide an authentication token\n    * @param {object} options - additional configuration options\n    * @return {HttpClient} client to use to make requests to GeoPlatform API endpoint\n    */\n    getClient: function(req, needsAuth, options) {\n\n        let token = req.accessToken || null;\n        if(needsAuth) {\n            if(!token && options.logger)\n                options.logger.warn(\"ServiceProxy.getClient() - No Access Token was provided on incoming request header!\");\n\n            else if(!!options.debug && options.logger) {\n                options.logger.debug(`ServiceProxy.getClient() - Token: ${token}`);\n                options.logger.debug(`ServiceProxy.getClient() - JWT: ${req.jwt}`);\n            }\n        }\n\n        return new NodeHttpClient({\n            timeout: Config.timeout,\n            token: needsAuth ? token : null\n        });\n    },\n\n\n    /**\n     * @param {HttpRequest} req - incoming http request being proxied\n     * @param {boolean} needsAuth - flag indicating if request requires authorization token\n     * @param {object} options - additional configuration options\n     */\n    getService: function(req, needsAuth, options) {\n        let client = this.getClient(req, needsAuth, options);\n        let svcClass = options.serviceClass || ItemService;\n        let service = new svcClass(Config.ualUrl, client);\n        if(options.logger) {\n            service.setLogger(options.logger);\n        }\n        return service;\n    }\n};\n\nexport default ServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport ItemService from \"../item\";\nimport Config from '../../shared/config';\nimport ServiceProxy from './base';\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'items',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'items/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'items',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'clone',\n        method: 'post',\n        path: 'items/:id/clone',\n        auth: true,\n        execFn: function(svc, req) { return svc.clone(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'items/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'uri',\n        method: 'post',\n        path: 'items/uri',\n        auth: false,\n        execFn: function(svc, req) { return svc.getUri(req.body); },\n        respFn: function(result, res, next) { res.json({ uri: result }); }\n    },\n    {\n        key: 'exists',\n        method: 'post',\n        path: 'items/exists',\n        auth: false,\n        execFn: function(svc, req) {\n            return svc.getUri(req.body)\n            .then( uri => {\n                let fields = ['serviceType','services','scheme','themes','publishers','keywords'];\n                let query = new Query().uri(uri).fields(fields);\n                return svc.search(query);\n            });\n        }\n    },\n    {\n        key: 'import',\n        method: 'post',\n        path: 'items/import',\n        auth: true,\n        execFn: function(svc, req) {\n            let input = req.body.url || req.files.file;\n            return svc.import(input, req.query.format);\n        }\n    },\n    {\n        key: 'associations',\n        method: 'get',\n        path: 'items/:id/associations',\n        auth: false,\n        execFn: function(svc, req) { return svc.associations(req.params.id, req.query); }\n    },\n    {\n        key: 'versions',\n        method: 'get',\n        path: 'items/:id/versions',\n        auth: false,\n        execFn: function(svc, req) { return svc.versions(req.params.id, req.query); }\n    },\n    {\n        key: 'getVersion',\n        method: 'get',\n        path: 'items/:id/versions/:version',\n        auth: false,\n        execFn: function(svc, req) {\n            return svc.get(req.params.id, { version: req.params.version });\n        }\n    }\n\n    // TODO findMultiple\n];\n\n/**\n *\n */\nfunction bindRoutes(router, options) {\n    //bind common endpoints\n    options.pathBaseDefault = \"items\";\n    options.serviceClass = ItemService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n}\n\n\n\n\n/**\n * ItemServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction ItemServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"ItemServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"ItemServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    bindRoutes(router, options);\n\n    return router;\n}\n\nexport default ItemServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport ServiceService from \"../service\";\nimport Config from '../../shared/config';\nimport ServiceProxy from \"./base\";\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'services',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'services/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'services',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'services/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'types',\n        method: 'get',\n        path: 'serviceTypes',\n        auth: false,\n        execFn: function(svc, req) { return svc.types(); }\n    },\n    {\n        key: 'import',\n        method: 'post',\n        path: 'services/import',\n        auth: true,\n        execFn: function(svc, req) { return svc.import(req.body); }\n    },\n    {\n        key: 'about',\n        method: 'get',\n        path: 'services/:id/about',\n        auth: false,\n        execFn: function(svc, req) { return svc.about(req.params.id); }\n    },\n    {\n        key: 'harvest',\n        method: 'get',\n        path: 'services/:id/harvest',\n        auth: false,\n        execFn: function(svc, req) { return svc.harvest(req.params.id); }\n    },\n    {\n        key: 'test',\n        method: 'get',\n        path: 'services/:id/test',\n        auth: false,\n        execFn: function(svc, req) { return svc.liveTest(req.params.id); }\n    },\n    {\n        key: 'statistics',\n        method: 'get',\n        path: 'services/:id/statistics',\n        auth: false,\n        execFn: function(svc, req) { return svc.statistics(req.params.id); }\n    }\n];\n\n\n\n\n/**\n *\n */\nfunction ServiceServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"ServiceServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"ServiceServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = ServiceService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default ServiceServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport LayerService from \"../layer\";\nimport Config from '../../shared/config';\nimport ServiceProxy from \"./base\";\n\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'layers',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'layers/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'layers',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'layers/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'style',\n        method: 'get',\n        path: 'layers/:id/style',\n        auth: false,\n        execFn: function(svc, req) { return svc.style(req.params.id); }\n    },\n    {\n        key: 'describe',\n        method: 'post',\n        path: 'layers/:id/describe',\n        auth: false,\n        execFn: function(svc, req) { return svc.describe(req.params.id, req.body); }\n    },\n    {\n        key: 'validate',\n        method: 'post',\n        path: 'layers/:id/validate',\n        auth: false,\n        execFn: function(svc, req) { return svc.validate(req.params.id, req.body); }\n    }\n];\n\n\n\n/**\n *\n */\nfunction LayerServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"LayerServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"LayerServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = LayerService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default LayerServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport DatasetService from \"../dataset\";\nimport Config from '../../shared/config';\nimport ServiceProxy from './base';\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'datasets',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'datasets/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'datasets',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'datasets/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n\n/**\n * DatasetServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction DatasetServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"DatasetServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"DatasetServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = DatasetService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default DatasetServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport MapService from \"../map\";\nimport Config from '../../shared/config';\nimport ServiceProxy from \"./base\";\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'maps',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'maps/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'maps',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'maps/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n/**\n * MapServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction MapServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"MapServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"MapServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = MapService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default MapServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport GalleryService from \"../gallery\";\nimport Config from '../../shared/config';\nimport ServiceProxy from './base';\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'galleries',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'galleries/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'galleries',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'galleries/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n/**\n * GalleryServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction GalleryServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"GalleryServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"GalleryServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = GalleryService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default GalleryServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport UtilsService from \"../utils\";\nimport Config from '../../shared/config';\nimport ServiceProxy from \"./base\";\n\n\nconst Routes = [\n    {\n        key: 'locate',\n        method: 'get',\n        path: 'utils/locate',\n        auth: false,\n        execFn: function(svc, req) { return svc.locate(req.query.q); }\n    },\n    {\n        key: 'parseFile',\n        method: 'post',\n        path: 'utils/parse',\n        auth: false,\n        execFn: function(svc, req) { return svc.parseFile(req.files.file, req.body.format); }\n    },\n    {\n        key: 'capabilities',\n        method: 'get',\n        path: 'utils/capabilities',\n        auth: false,\n        execFn: function(svc, req) { return svc.capabilities(null, req.query); }\n    },\n    {\n        key: 'capabilitiesProperty',\n        method: 'get',\n        path: 'utils/capabilities/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.capabilities(req.params.id, req.query); }\n    }\n];\n\n\n\n/**\n *\n */\nfunction UtilsServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"UtilsServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"UtilsServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = UtilsService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default UtilsServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport AgolService from \"../agol\";\nimport Config from '../../shared/config';\nimport ServiceProxy from './base';\n\n\nconst Routes = [\n    {\n        key: 'searchItems',\n        method: 'get',\n        path: 'agol/items',\n        auth: false,\n        execFn: function(svc, req) { return svc.searchItems(req.query); }\n    },\n    {\n        key: 'searchGroups',\n        method: 'get',\n        path: 'agol/groups',\n        auth: false,\n        execFn: function(svc, req) { return svc.searchGroups(req.query); }\n    },\n    {\n        key: 'searchOrgs',\n        method: 'get',\n        path: 'agol/orgs',\n        auth: false,\n        execFn: function(svc, req) { return svc.searchOrgs(req.query); }\n    },\n    {\n        key: 'getItem',\n        method: 'get',\n        path: 'agol/items/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.getItem(req.params.id); }\n    },\n    {\n        key: 'getGroup',\n        method: 'get',\n        path: 'agol/groups/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.getGroup(req.params.id); }\n    },\n    {\n        key: 'getOrg',\n        method: 'get',\n        path: 'agol/orgs/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.getOrg(req.params.id); }\n    }\n];\n\n\n\n/**\n *\n */\nfunction AgolServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"AgolServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"AgolServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = AgolService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default AgolServiceProxy;\n","\nimport QueryParameters from './parameters';\n\nconst SORT_OPTIONS_DEFAULT = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nclass KGQuery {\n\n    constructor() {\n\n        this.defaultQuery = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n        this.query = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n    }\n\n\n\n    getQuery() {\n        let result = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    parameter(name, value) {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    setParameter (name, value) {\n        if(value === null || value === undefined)\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    getParameter (key) {\n        return this.query[key];\n    }\n\n    applyParameters (obj) { \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    q(text) {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setQ (text) {\n        this.setParameter(QueryParameters.QUERY, text);\n    }\n\n    getQ() {\n        return this.getParameter(QueryParameters.QUERY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {array[string]} types - KG classifiers for which concepts should be returned\n     */\n    classifiers(types) {\n        this.setClassifiers(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - KG classifiers for which concepts should be returned\n     */\n    setClassifiers (types) {\n        if(types && typeof(types.push) === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.TYPES, types);\n    }\n\n    /**\n     * @return {array[string]} KG classifiers for which concepts should be returned\n     */\n    getClassifiers () {\n        return this.getParameter(QueryParameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.types()\n     * query parameter (they map to different HTTP request parameters).\n     * @param {array[string]} objTypes - Item object type names\n     */\n    types(objTypes) {\n        this.setTypes(objTypes);\n        return this;\n    }\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.setTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @param {array[string]} objTypes - Item object type names\n     */\n    setTypes (objTypes) {\n        if(objTypes && typeof(objTypes.push) === 'undefined')\n            objTypes = [objTypes];\n        this.setParameter(QueryParameters.FOR_TYPES, objTypes);\n    }\n\n    /**\n     * Get the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.getTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @return {array[string]} Item object type names\n     */\n    getTypes () {\n        return this.getParameter(QueryParameters.FOR_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this.query.page = page*1;\n    }\n\n    getPage() {\n        return this.query.page;\n    }\n\n    nextPage() {\n        this.setPage(this.query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this.query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this.query.size = size*1;\n    }\n\n    getPageSize() {\n        return this.query.size;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.query.sort = sort;\n    }\n\n    getSort() {\n        return this.query.sort;\n    }\n\n    getSortField() {\n        return this.query.sort.split(',')[0];\n    }\n\n    getSortOrder() {\n        return this.query.sort.split(',')[1] === 'asc';\n    }\n\n    /**\n     * @return {array} list of key-value pairs of sort options\n     */\n    getSortOptions() {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = this.defaultQuery;\n    }\n}\n\nexport default KGQuery;\n","\nimport Q from 'q';\nimport Config from '../shared/config';\nimport QueryParameters from '../shared/parameters';\n\n\nclass KGService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = Config.timeout || 30000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/recommender';\n    }\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving recommended concepts as search results\n     */\n    suggest (query, options) {\n        let url = this.baseUrl + '/suggest';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.suggest() - Error suggesting concepts: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving concept types as search results\n     */\n    types (query, options) {\n        let url = this.baseUrl + '/types';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.types() - Error searching types: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving concept sources as search results\n     */\n    sources (query, options) {\n        let url = this.baseUrl + '/sources';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.sources() - Error searching sources: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n\n    /**\n     * internal method used by exposed methods\n     */\n    _search (url, query, options) {\n        return Q.resolve( true )\n        .then( () => {\n\n            if(query && typeof(query.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                query = query.getQuery();\n            }\n\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query, options:options\n            });\n            return this.execute(opts);\n        });\n    }\n\n\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout || Config.timeout || 30000;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"KGService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport default KGService;\n","\nimport Query from './query';\n\nexport default function() {\n    return new Query();\n}\n","\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport LayerService from './layer';\nimport ServiceService from './service';\nimport GalleryService from './gallery';\nimport DatasetService from './dataset';\nimport MapService from './map';\n\n/**\n * @param {any} arg - string type or object with type property\n * @param {string} baseUrl - base endpoint of GeoPlatform API\n * @return {ItemService}\n */\nconst ServiceFactory = function(arg, baseUrl, httpClient) {\n    let type = (typeof(arg) === 'string') ?\n        arg : (arg && arg.type ? arg.type : null);\n    if(!type) throw new Error(\"Must provide a type or object with a type specified\");\n    if(!baseUrl) throw new Error(\"Must provide a base url\");\n    if(!httpClient) throw new Error(\"Must provide an http client to use to make requests\");\n    switch(type) {\n        case ItemTypes.LAYER:   return new LayerService(  baseUrl, httpClient);\n        case ItemTypes.SERVICE: return new ServiceService(baseUrl, httpClient);\n        case ItemTypes.MAP:     return new MapService(    baseUrl, httpClient);\n        case ItemTypes.GALLERY: return new GalleryService(baseUrl, httpClient);\n        case ItemTypes.DATASET: return new DatasetService(baseUrl, httpClient);\n        default:                return new ItemService(   baseUrl, httpClient);\n    }\n};\n\nexport default ServiceFactory;\n","\n\nimport ItemTypes from '../shared/types';\n\n\nconst Categories = {\n    UNKNOWN:         'Unknown Category',\n    DATASET:         'Dataset',\n    SERVICE:         'Service',\n    LAYER:           'Layer',\n    MAP:             'Map',\n    GALLERY:         'Gallery',\n    COMMUNITY:       'Community',\n    CONTACT:         'Contact',\n    ORGANIZATION:    'Organization',\n    CONCEPT:         'Concept',\n    CONCEPT_SCHEME:  'Concept Scheme',\n    APPLICATION:     'Application',\n    TOPIC:           'Topic',\n    WEBSITE:         'WebSite',\n    RIGHTS_STATEMENT:'RightsStatement',\n    KNOWLEDGE_GRAPH: 'Knowledge Graph',\n    USER:            'User',\n    COMMUNITY_POST:  'Community Post',   //post within a community portal\n    COMMUNITY_PAGE:  'Community Page',   //page within a community portal\n    APP_PAGE:        'Application Page', //page/view within a client application\n};\n\nconst Events = {\n    ACCESSED:   'Accessed',  //related item was accessed using API\n    DISPLAYED:  'Displayed', //related item was displayed in a native form (map)\n    VIEWED:     'Viewed',    //related item was viewed in general form (metadata)\n    CREATED:    'Created',\n    EDITED:     'Edited',\n    DELETED:    'Deleted',\n    CLONED:     'Cloned',\n    ADDED:      'Added',    //item was added to another (ie, layer on map)\n    REMOVED:    'Removed',  //item was removed from another (ie, item from gallery)\n    EXPORTED:   'Exported',\n    IMPORTED:   'Imported'\n};\n\n\nfunction getCategory(type) {\n    let result = Categories.UNKNOWN;\n    if(type) {\n        let cats = Object.keys(Categories).map(k=>Categories[k]);\n        //if existing category was specified\n        if(~cats.indexOf(type))\n            return type;\n        //if an ItemType with prefix was specified (strip off prefix)\n        else if(~type.indexOf(':')) {\n            let cat = type.split(':')[1];\n            if(~cats.indexOf(cat))\n                return cat;\n        }\n    }\n    return result;\n}\n\n\n\n/**\n *\n */\nclass Event {\n    constructor(category, type, item, related) {\n        if(!category || ! type) {\n            throw new Error(\"TrackingService Event - Must specific an event \" +\n            \"category and event type when constructing events\");\n        }\n        this.category = category;\n        this.type = type;\n        this.setItem(item);\n        this.setRelated(related);\n    }\n    getCategory() { return this.category; }\n    getType() { return this.type; }\n    getItem() { return this.item; }\n    setItem(item) { this.item = item ? (item.id || item) : null; }\n    getRelated() { return this.related; }\n    setRelated(related) { this.related = related ? (related.id || related) : null; }\n}\n\n\n\n/**\n * @param {string} eventType - type of event being created\n * @param {Object} item - GeoPlatform Item instance\n * @return {Array<Event>} list of event objects\n */\nfunction TrackingEventFactory(eventType, item) {\n    let result = [];\n    if(eventType && item && item.type) {\n        if(ItemTypes.MAP === item.type) {\n            result.push( new Event(Categories.MAP, eventType, item) );\n            if(Events.DISPLAYED === eventType) {\n\n                item.layers.forEach( layerState => {\n                    if(layerState.layer) {\n                        let layerEvents = TrackingEventFactory(eventType, layerState.layer)\n                            .filter(e=>e!==null);\n                        if(layerEvents && layerEvents.length) {\n                            result = result.concat(layerEvents);\n                        }\n                    }\n                });\n\n                if(item.baseLayer) {\n                    let baseEvents = TrackingEventFactory(eventType, item.baseLayer)\n                        .filter(e=>e!==null);\n                    if(baseEvents && baseEvents.length)\n                        result = result.concat( baseEvents );\n                }\n            }\n\n        } else if(ItemTypes.LAYER === item.type) {\n            result.push( new Event(Categories.LAYER, eventType, item) );\n            if(Events.DISPLAYED === eventType && item.services && item.services.length) {\n                result.push( new Event(Categories.SERVICE, Events.ACCESSED, item.services[0]) );\n            }\n        } else {\n            let category = getCategory(item.type);\n            result.push( new Event(category, eventType, item) );\n        }\n    }\n    // else {\n    //     if(!event) console.log(\"Missing event\");\n    //     if(!item) console.log(\"Missing item\");\n    //     if(!item.type) console.log(\"Missing item type\");\n    // }\n    return result;\n}\n\n\n\n\n\n/**\n *\n */\nclass DefaultTrackingServiceProvider {\n    constructor() {}\n    logEvent( category, event, item, related ) {\n        console.log( \"EVENT (\" + category + \") - \" + event + \" : \" + item);\n    }\n    logPageView( view, data ) {\n        console.log(\"PAGEVIEW \" + view + (data ? \" : \" + JSON.stringify(data) : '') );\n    }\n    logSearch(params, resultCount) {\n        console.log( \"Query : \" + JSON.stringify(params) + \" found \" + resultCount+ \" matches\");\n    }\n}\n\n\n\n\n\n\n/**\n * TrackingService\n *\n * Service for logging events related to usage of the GeoPlatform and its data\n *\n * Example:\n *\n *   import { TrackingService, EventCategories, EventTypes } from 'geoplatform.client';\n *\n *   let tracker = new TrackingService();\n *   tracker.setProvider( ... );\n *   tracker.event( Event.of(EventCategories.MAP, EventTypes.VIEWED, map) );\n *\n * Multi-event example:\n *\n *   import {\n *      TrackingService, TrackingEventCategories, TrackingEventTypes, TrackingEventFactory\n *   } from 'geoplatform.client';\n *\n *   let tracker = new TrackingService();\n *   tracker.setProvider( ... );\n *\n *   let events = [\n *       TrackingEvent.of( TrackingCategories.MAP, TrackingEventTypes.VIEWED, this.map )\n *       TrackingEvent.of( TrackingCategories.LAYER, TrackingEventTypes.VIEWED, this.map.baseLayer )\n *   ];\n *   tracker.event(events);\n *\n *   //OR use the event factory:\n *   tracker.event( TrackingEventFactory(EventTypes.VIEWED, this.map) );\n */\nclass TrackingService {\n\n    constructor(options) {\n        if(options && typeof(options) === 'object')\n            Object.assign(this, options);\n\n        if(!this.provider)\n            this.setProvider(new DefaultEventServiceProvider());\n    }\n\n    /**\n     * @param {EventServiceProvider} provider -\n     */\n    setProvider(provider) {\n        if(provider)\n            this.provider = provider;\n    }\n\n    /**\n     * @param {Event} event - event to log\n     * @return {TrackingService}\n     */\n    event( event ) {\n        this.logEvent( event );\n        return this;\n    }\n\n    /**\n     * @param {Event} event - event to log\n     */\n    logEvent( event ) {\n        if(!this.provider || !this.provider.logEvent || !event) return;\n        setTimeout( () => { this._doLogEvent(event); });\n    }\n\n    _doLogEvent( event ) {\n        if(typeof(event.push) !== 'undefined') {\n            event.forEach( evt => this._doLogEvent(evt) );\n\n        } else {\n            try {\n                this.provider.logEvent(\n                    event.getCategory(),\n                    event.getType(),\n                    event.getItem(),\n                    event.getRelated()\n                );\n            } catch(e) {\n                console.log(\n                    \"TrackingService.logEvent() - Error logging event (\" +\n                    event.getCategory() + \", \" + event.getType() + \", \" +\n                    event.getItem() + \") - \" + e.message\n                );\n            }\n        }\n    }\n\n\n    /**\n     * @param {string} view - name of the view being activated\n     * @param {any} data - additional context to supply for the event\n     * @return {TrackingService}\n     * @deprecated use svc.event( new Event(EventCategories.APP_PAGE, EventTypes.VIEWED, pageId) )\n     */\n    pageView( view, data) {\n        this.logPageView(view, data);\n        return this;\n    }\n\n    /**\n     * @param {string} view - name of the view being activated\n     * @param {any} data - additional context to supply for the event\n     * @deprecated use svc.logEvent( new Event(EventCategories.APP_PAGE, EventTypes.VIEWED, pageId) )\n     */\n    logPageView( view, data ) {\n        setTimeout( () => {\n            try {\n                this.provider.logPageView(view);\n            } catch(e) {\n                console.log(\"TrackingService.logPageView - error logging event: \" + e.message);\n            }\n        });\n    }\n\n    /**\n     * @param {object|string} params\n     * @param {integer} resultCount\n     */\n    logSearch (params, resultCount) {\n        setTimeout( () => {\n            try {\n                this.provider.logSearch(params, resultCount);\n            } catch(e) {\n                console.log(\"TrackingService.logSearch - error logging search event: \" + e.message);\n            }\n        });\n    }\n\n}\n\n\nexport {\n    Event as TrackingEvent,\n    TrackingService,\n    Categories as TrackingCategories,\n    Events as TrackingTypes,\n    TrackingEventFactory\n};\n"],"names":["Object","assign","defineProperty","value","target","varArgs","TypeError","to","index","arguments","length","nextSource","nextKey","prototype","hasOwnProperty","call","writable","configurable","ualUrl","configure","options","JQueryHttpClient","setTimeout","timeout","Config","setAuthToken","token","arg","opts","method","url","json","dataType","params","data","processData","contentType","headers","Authorization","o","jQuery","Error","d","Q","defer","success","resolve","error","xhr","status","message","err","responseText","JSON","parse","e","console","log","reject","ajax","promise","NGHttpClient","angular","$http","responseType","useXDomain","injector","get","then","response","catch","NodeHttpClient","qs","file","fs","require","formData","createReadStream","path","filename","originalFilename","body","auth","deferred","request","checkAndHandleError","props","code","connect","statusCode","babelHelpers.typeof","sidx","indexOf","eidx","item","substring","uri","pathname","ItemTypes","DATASET","SERVICE","LAYER","MAP","GALLERY","COMMUNITY","APPLICATION","TOPIC","WEBSITE","ORGANIZATION","CONTACT","PERSON","CONCEPT","CONCEPT_SCHEME","STANDARD","RIGHTS_STATEMENT","ItemTypeLabels","URI_BASE","ESRI_TYPES","formatReference","ref","toLowerCase","replace","result","prop","fixServiceHref","service","stripLayerFromServiceHref","accessURL","href","trim","lastChar","type","serviceType","conformsTo","matches","match","URIFactory","factories","register","factory","create","object","md5Fn","dataset","md5","pubName","publisher","publishers","map","pub","label","join","title","layer","svcUrl","services","servicedBy","lyrUrl","lyrName","layerName","args","author","createdBy","_createdBy","identifiers","identifier","gallery","community","org","name","person","vcard","email","hasEmail","tel","orgName","positionTitle","scheme","inScheme","schemeLabel","prefLabel","schemeRef","landingPage","DOCUMENT","factoryFn","ItemService","httpClient","setUrl","client","httpMethods","baseUrl","apiBase","milliseconds","logger","msg","debug","id","version","buildRequest","execute","logError","itemObj","getUri","patch","overrides","getQuery","format","undefined","isFile","ro","overwrite","obj","ids","uris","createRequestOpts","logDebug","stringify","DatasetService","MapService","LayerService","req","keys","missing","find","key","srs","bbox","height","width","info_format","x","y","i","j","ALTERNATE_TITLE","BEGINS","CLASSIFIERS","CREATED","CREATED_BEFORE","CREATED_AFTER","CREATED_BY","CREATOR","CONTRIBUTED_BY","ENDS","EXTENT","IDENTIFIERS","KEYWORDS","LAST_MODIFIED_BY","MODIFIED","MODIFIED_BEFORE","MODIFIED_AFTER","PUBLISHERS_ID","PUBLISHERS_LABEL","PUBLISHERS_URI","CONTACTS_ID","CONTACTS_LABEL","CONTACTS_URI","QUERY","SCHEMES_ID","SCHEMES_LABEL","SCHEMES_URI","SIMILAR_TO","STATUS","SERVICE_TYPES","THEMES_ID","THEMES_LABEL","THEMES_URI","TOPICS_ID","TOPICS_LABEL","TOPICS_URI","TYPES","URI","USED_BY_ID","USED_BY_LABEL","USED_BY_URI","VISIBILITY","RESOURCE_TYPE","LANDING_PAGE","PURPOSE","RELIABILITY","RELIABILITY_MIN","RELIABILITY_MAX","ONLINE","COMPLIANT","SPEED","SPEED_MIN","SPEED_MAX","LIKES","LIKES_MIN","LIKES_MAX","VIEWS","VIEWS_MIN","VIEWS_MAX","HREF","LAYER_TYPE","LAYER_NAME","PARENT_LAYER","SUB_LAYER","MAP_LAYER","GALLERY_ITEM","FACETS","FIELDS","SORT","PAGE","PAGE_SIZE","FOR_TYPES","FUNCTION","TOPIC_PRIMARY","TOPIC_SECONDARY","SUBJECT_PRIMARY","SUBJECT_SECONDARY","AUDIENCE","PLACE","CATEGORY","Fields","ACCESS_RIGHTS","ALTERNATE_TITLES","ANNOTATIONS","CONTACTS","DATASETS","DESCRIPTION","DISTRIBUTIONS","GALLERY_ITEMS","LABEL","LAYERS","LEGEND","PUBLISHERS","RESOURCE_TYPES","SERVICE_TYPE","SERVICES","SPATIAL","STATISTICS","SUB_LAYERS","TEMPORAL","THEMES","THUMBNAIL","TOPICS","USED_BY","FIELDS_DEFAULT","Facets","CONCEPT_SCHEMES","FACETS_DEFAULT","FacetToParam","Parameters","SORT_OPTIONS_DEFAULT","BBOX_REGEX","toArray","push","Query","defaultQuery","slice","defaults","query","applyParameters","setParameter","clearParameter","p","facet","param","text","setQ","getParameter","setKeywords","setUri","types","setTypes","user","setCreatedBy","setLastModifiedBy","themes","parameter","setThemes","topics","setTopics","setPublishers","contacts","setContacts","setUsedBy","schemes","setSchemes","setServiceTypes","vis","setVisibility","visibility","setStatus","setExtent","toBboxString","test","classifier","setClassifier","arr","setClassifiers","classes","Classifiers","k","Array","isArray","forEach","getClassifier","date","beforeOrAfter","setModified","dir","oppProp","getTime","Date","setCreated","setBeginDate","setEndDate","begin","end","setBetween","begins","ends","setResourceTypes","names","setFacets","facets","getFacets","idx","splice","fields","setFields","field","getFields","page","setPage","isNaN","getPage","size","setPageSize","sort","order","setSort","getSort","split","ServiceService","svc","resourceTypes","pageSize","results","GalleryService","galleryId","itemId","UtilsService","property","location","AgolQuery","_query","q","setGroups","groups","setOrgs","orgs","AgolService","filter","ServiceProxy","bindRoutes","router","routes","paths","auths","route","needsAuth","res","next","getService","execFn","respFn","onError","finally","onFinish","getClient","accessToken","warn","jwt","svcClass","serviceClass","setLogger","Routes","search","save","remove","clone","export","mimeType","disposition","set","setHeader","send","input","files","import","associations","versions","pathBaseDefault","ItemServiceProxy","express","Router","about","harvest","liveTest","statistics","ServiceServiceProxy","style","describe","validate","LayerServiceProxy","DatasetServiceProxy","MapServiceProxy","GalleryServiceProxy","locate","parseFile","capabilities","UtilsServiceProxy","searchItems","searchGroups","searchOrgs","getItem","getGroup","getOrg","AgolServiceProxy","KGQuery","QueryParameters","objTypes","KGService","_search","ServiceFactory","Categories","UNKNOWN","KNOWLEDGE_GRAPH","USER","COMMUNITY_POST","COMMUNITY_PAGE","APP_PAGE","Events","ACCESSED","DISPLAYED","VIEWED","EDITED","DELETED","CLONED","ADDED","REMOVED","EXPORTED","IMPORTED","getCategory","cats","cat","Event","category","related","setItem","setRelated","TrackingEventFactory","eventType","layers","layerState","layerEvents","concat","baseLayer","baseEvents","DefaultTrackingServiceProvider","event","view","resultCount","TrackingService","provider","setProvider","DefaultEventServiceProvider","logEvent","_doLogEvent","evt","getType","getRelated","logPageView","logSearch"],"mappings":"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"}