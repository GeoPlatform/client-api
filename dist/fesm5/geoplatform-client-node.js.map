{"version":3,"file":"geoplatform-client-node.js.map","sources":["ng://@geoplatform/client/node/http/node.ts","ng://@geoplatform/client/node/services/proxies/base.ts","ng://@geoplatform/client/node/services/proxies/item.ts","ng://@geoplatform/client/node/services/proxies/service.ts","ng://@geoplatform/client/node/services/proxies/layer.ts","ng://@geoplatform/client/node/services/proxies/dataset.ts","ng://@geoplatform/client/node/services/proxies/map.ts","ng://@geoplatform/client/node/services/proxies/gallery.ts","ng://@geoplatform/client/node/services/proxies/utils.ts","ng://@geoplatform/client/node/services/proxies/agol.ts"],"sourcesContent":["\nimport * as Q from 'q';\nimport { GPHttpClient } from '@geoplatform/client';\n\n\nclass NodeHttpClient extends GPHttpClient {\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options ?: { [key:string] : any }) {\n        super(options);\n    }\n\n    createRequestOpts(options : { [key:string] : any }) : any {\n\n        let opts : {[key:string]: any} = {\n            method: options.method,\n            url: options.url,\n            json: false !== options.json,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.params) {\n            opts.qs = options.params;\n        }\n\n        if(options.file) {\n            const fs = require('fs');\n            if(!fs) throw new Error(\"Module 'fs' not available\");\n            opts.formData = {\n                file: {\n                    value:  fs.createReadStream(options.file.path),\n                    options: {\n                        filename: options.file.originalFilename\n                    }\n                }\n            };\n            Object.assign(opts.formData, options.data||{});\n\n        } else if(options.data) {\n            if(options.formData) {\n                opts.formData = options.data;\n            } else {\n                opts.body = options.data;\n            }\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.auth = { 'bearer': token };\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        // console.log(JSON.stringify(opts));\n\n        return opts;\n    }\n\n\n\n    /**\n     *\n     */\n    execute(options : any) : Q.Promise<any> {\n        let deferred = Q.defer();\n\n        const request = require('request');\n        if(!request) {\n            throw new Error(\"Module 'request' not available\");\n        }\n        // require('request-debug')(request);\n\n        request(options, (error : any, response : any, body : any) => {\n            this.checkAndHandleError(error, response)\n            .then( () =>  {\n                if(options.json === false)\n                    deferred.resolve( response );\n                else\n                    deferred.resolve( body );\n            })\n            .catch( e => deferred.reject(e) );\n        });\n        return deferred.promise;\n    }\n\n\n    /**\n     *\n     */\n    checkAndHandleError (error : any, response : any) : Q.Promise<any> {\n\n        let props : { [key:string]: any } = {\n            message: null,\n            error: null,    //error type\n            status: 200\n        };\n\n        if(error) {\n            // Logger.debug(\"Error generated by request library: \" + error.code);\n\n            if(error.code === 'ETIMEDOUT' || error.code === 'ESOCKETTIMEDOUT') {\n\n                props.status = 500;\n                props.error = \"Connection Timeout\";\n                props.message = \"The response from the service took too long to read\";\n\n                if(error.connect === true) {\n                    props.message = \"Unable to establish a connection to the service\";\n                }\n\n            } else {\n                return Q.reject(error);\n            }\n\n        } else if(response.statusCode < 200 || response.statusCode > 204) {\n\n            // Logger.debug('Error returned by remote endpoint (' + response.statusCode + ')');\n            // Logger.debug(JSON.stringify(response));\n\n            props.status = response.statusCode;\n\n            if(response.body && typeof(response.body) === 'object') {\n                props = response.body;\n                props.status = props.status || response.statusCode;\n                props.message = props.message || \"An error occurred communicating with service\";\n\n                if(response.statusCode === 409) {\n                    let sidx = response.body.message.indexOf(\" \");\n                    let eidx = response.body.message.indexOf(' already exists');\n                    if(sidx >= 0 && eidx > sidx) {\n                        props.item = response.body.message.substring(sidx+1, eidx);\n                    }\n                }\n\n            } else {\n\n                switch(response.statusCode) {\n                    case 404 :\n                        props.error = \"Not Found\";\n                        props.message = response.request.uri.pathname + \" cannot be found\";\n                        break;\n                    case 401 :\n                        props.error = \"Unauthenticated\";\n                        props.message = \"You are not authenticated\";\n                        break;\n                    case 403 :\n                        props.error = \"Unauthorized\";\n                        props.message = \"You are not authorized to access \" + response.request.uri.pathname;\n                        break;\n                    case 409 :\n                        props.error = \"Conflict\";\n                        props.message = \"Item already exists\";\n\n                        // pattern received is: { ..., message: 'Resource <identifier> already exists', ... }\n                        try {\n                            let json = JSON.parse(response.body);\n                            let sidx = json.message.indexOf(\" \");\n                            let eidx = json.message.indexOf(' already exists');\n                            if(sidx >= 0 && eidx > sidx) {\n                                props.item = json.message.substring(sidx+1, eidx);\n                            }\n                        } catch( e ) {\n                            props.message += '.  Unable to extract existing identifier from service response';\n                        }\n                        break;\n\n                    default:\n\n                        try {\n                            let json = JSON.parse(response.body);\n                            props = json;\n                            props.status = response.statusCode;\n                            // Logger.debug(\"PARSED ERROR: \" + JSON.stringify(props));\n\n                        } catch (e) {\n                            props.error = \"Server Error\";\n                            props.message = response.body;\n                            // Logger.debug(\"DEFAULTED ERROR: \" + JSON.stringify(props));\n                        }\n                }\n\n            }\n\n        }\n\n        if( props.status < 200 || props.status > 204 ) {\n\n            props.error = props.error || \"Server Error\";\n            props.status = props.status || response.statusCode;\n            props.message = props.message || \"An error occurred communicating with service\";\n\n            let err = new Error(props.message);\n            Object.assign(err, props);\n\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err);\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + JSON.stringify(err));\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err.message);\n            return Q.reject(err);\n        }\n\n        return Q.resolve(null);\n    }\n\n}\n\n\nexport default NodeHttpClient;\n","\n\nimport NodeHttpClient from '../../http/node';\nimport { Config, ItemService } from '@geoplatform/client';\n\n\n\nconst ServiceProxy = {\n\n    /**\n     * @param {Router} router - ExpressJS router instance\n     * @param {array[object]} routes - list of routes to map to the router\n     * @param {object} options - additional configuration needed\n     */\n    bindRoutes: function(router : any, routes : any[], options ?: any) {\n\n        options = options || {};\n        let paths = options.paths || {};\n        let auths = options.auth || {};\n\n        routes.forEach( route => {\n\n            if(paths[route.key] === false) return;  //disabled endpoint\n            if(!paths[route.key] && !route.path) return; //something is wrong with route\n\n            //newer route override...\n            // {\n            //   'create': {\n            //     'path': 'custom/path',\n            //     'auth': true,\n            //     'respFn': function(result, res, next) { }\n            //   }\n            // }\n            let overrides = options[route.key] || {};\n\n            //look for overriden paths in either new override structure or older key:path format\n            let path = '/' + ( overrides.path || paths[route.key] || route.path );\n            //look for authentication override in either new structure or older format\n            let needsAuth = overrides.auth || auths[route.key] || route.auth;\n\n            // console.log(`Binding Service Route [${route.method}] ${path}`)\n            router[route.method]( path, (req : any, res : any, next : Function) => {\n                // console.log(`Executing Service Route [${route.method}] ${path}`)\n                // console.log(JSON.stringify(req.params));\n                // console.log(\" \");\n                let svc = this.getService(req, needsAuth, options);\n                let promise = route.execFn(svc, req)\n                promise.then( ( result:any ) => {\n                    let respFn = overrides.respFn || route.respFn;\n                    if(respFn) respFn(result, res, next);\n                    else res.json(result);\n                })\n                .catch( (err : Error) => {\n                    if(options.onError)\n                        options.onError(route.key, err);\n                    next(err);\n                })\n                .finally( () => {\n                    if(options.onFinish)\n                        options.onFinish(route.key, req, res);\n                });\n            })\n        });\n\n    },\n\n    /**\n    * @param {HttpRequest} req - incoming http request being proxied\n    * @param {boolean} needsAuth - flag indicating if the request must provide an authentication token\n    * @param {object} options - additional configuration options\n    * @return {HttpClient} client to use to make requests to GeoPlatform API endpoint\n    */\n    getClient: function(req : any, needsAuth : boolean, options ?: any) {\n\n        let token = req.accessToken || null;\n        if(needsAuth) {\n            if(!token && options.logger)\n                options.logger.warn(\"ServiceProxy.getClient() - No Access Token was provided on incoming request header!\");\n\n            else if(!!options.debug && options.logger) {\n                options.logger.debug(`ServiceProxy.getClient() - Token: ${token}`);\n                options.logger.debug(`ServiceProxy.getClient() - JWT: ${req.jwt}`);\n            }\n        }\n\n        return new NodeHttpClient({\n            timeout: Config.timeout,\n            token: needsAuth ? token : null\n        });\n    },\n\n\n    /**\n     * @param {HttpRequest} req - incoming http request being proxied\n     * @param {boolean} needsAuth - flag indicating if request requires authorization token\n     * @param {object} options - additional configuration options\n     */\n    getService: function(req : any, needsAuth : boolean, options ?: any) {\n        let client = this.getClient(req, needsAuth, options);\n        let svcClass = options.serviceClass || ItemService;\n        let service = new svcClass(Config.ualUrl, client);\n        if(options.logger) {\n            service.setLogger(options.logger);\n        }\n        return service;\n    }\n};\n\nexport default ServiceProxy;\n","\nimport { Query, ItemService } from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'items',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'items/:id',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'items',\n        auth: true,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.remove(req.params.id);\n        },\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'clone',\n        method: 'post',\n        path: 'items/:id/clone',\n        auth: true,\n        execFn: function(svc, req) { return svc.clone(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'items/:id/export',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.export(req.params.id, req.query.format); },\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'uri',\n        method: 'post',\n        path: 'items/uri',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.getUri(req.body);\n        },\n        respFn: function(result : any, res : any) {\n            res.json({ uri: result });\n        }\n    },\n    {\n        key: 'exists',\n        method: 'post',\n        path: 'items/exists',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.getUri(req.body)\n            .then( uri => {\n                let fields = ['serviceType','services','scheme','themes','publishers','keywords'];\n                let query : Query = new Query().uri(uri).fields(fields);\n                return svc.search(query);\n            });\n        }\n    },\n    {\n        key: 'import',\n        method: 'post',\n        path: 'items/import',\n        auth: true,\n        execFn: function(svc : ItemService, req : any) {\n            let input = req.body.url || req.files.file;\n            return svc.import(input, req.query.format);\n        }\n    },\n    {\n        key: 'associations',\n        method: 'get',\n        path: 'items/:id/associations',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.associations(req.params.id, req.query); }\n    },\n    {\n        key: 'versions',\n        method: 'get',\n        path: 'items/:id/versions',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.versions(req.params.id); }\n    },\n    {\n        key: 'getVersion',\n        method: 'get',\n        path: 'items/:id/versions/:version',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.get(req.params.id, { version: req.params.version });\n        }\n    }\n\n    // TODO findMultiple\n];\n\n/**\n *\n */\nfunction bindRoutes(router : any, options ?: any) {\n    //bind common endpoints\n    options.pathBaseDefault = \"items\";\n    options.serviceClass = ItemService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n}\n\n\n\n\n/**\n * ItemServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction ItemServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"ItemServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"ItemServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    bindRoutes(router, options);\n\n    return router;\n}\n\nexport default ItemServiceProxy;\n","\n\nimport {ServiceService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'services',\n        auth: false,\n        execFn: function(svc: ServiceService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'services/:id',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'services',\n        auth: true,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.remove(req.params.id);\n        },\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'services/:id/export',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.export(req.params.id, req.query.format);\n        },\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'types',\n        method: 'get',\n        path: 'serviceTypes',\n        auth: false,\n        execFn: function(svc : ServiceService) {\n            return svc.types();\n        }\n    },\n    {\n        key: 'import',\n        method: 'post',\n        path: 'services/import',\n        auth: true,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.import(req.body);\n        }\n    },\n    {\n        key: 'about',\n        method: 'get',\n        path: 'services/:id/about',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.about(req.params.id);\n        }\n    },\n    {\n        key: 'harvest',\n        method: 'get',\n        path: 'services/:id/harvest',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.harvest(req.params.id);\n        }\n    },\n    {\n        key: 'test',\n        method: 'get',\n        path: 'services/:id/test',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.liveTest(req.params.id);\n        }\n    },\n    {\n        key: 'statistics',\n        method: 'get',\n        path: 'services/:id/statistics',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.statistics(req.params.id);\n        }\n    }\n];\n\n\n\n\n/**\n *\n */\nfunction ServiceServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"ServiceServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"ServiceServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = ServiceService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default ServiceServiceProxy;\n","\n\nimport {LayerService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'layers',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'layers/:id',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'layers',\n        auth: true,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.remove(req.params.id); }\n            ,\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'layers/:id/export',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.export(req.params.id, req.query.format); }\n            ,\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'style',\n        method: 'get',\n        path: 'layers/:id/style',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.style(req.params.id);\n        }\n    },\n    {\n        key: 'describe',\n        method: 'post',\n        path: 'layers/:id/describe',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.describe(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'validate',\n        method: 'post',\n        path: 'layers/:id/validate',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.validate(req.params.id, req.body);\n        }\n    }\n];\n\n\n\n/**\n *\n */\nfunction LayerServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"LayerServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"LayerServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = LayerService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default LayerServiceProxy;\n","\n\nimport {DatasetService} from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'datasets',\n        auth: false,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'datasets/:id',\n        auth: false,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'datasets',\n        auth: true,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.remove(req.params.id);\n        },\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'datasets/:id/export',\n        auth: false,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.export(req.params.id, req.query.format);\n        },\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n\n/**\n * DatasetServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction DatasetServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"DatasetServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"DatasetServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = DatasetService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default DatasetServiceProxy;\n","\n\nimport {MapService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'maps',\n        auth: false,\n        execFn: function(svc : MapService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'maps/:id',\n        auth: false,\n        execFn: function(svc : MapService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'maps',\n        auth: true,\n        execFn: function(svc : MapService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc : MapService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc : MapService, req : any) {\n            return svc.remove(req.params.id); }\n            ,\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc : MapService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'maps/:id/export',\n        auth: false,\n        execFn: function(svc : MapService, req : any) {\n            return svc.export(req.params.id, req.query.format); }\n            ,\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n/**\n * MapServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction MapServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"MapServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"MapServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = MapService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default MapServiceProxy;\n","\n\nimport {GalleryService} from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'galleries',\n        auth: false,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'galleries/:id',\n        auth: false,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'galleries',\n        auth: true,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.remove(req.params.id);\n        },\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'galleries/:id/export',\n        auth: false,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.export(req.params.id, req.query.format);\n        },\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n/**\n * GalleryServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction GalleryServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"GalleryServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"GalleryServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = GalleryService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default GalleryServiceProxy;\n","\n\nimport {UtilsService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\n\nconst Routes = [\n    {\n        key: 'locate',\n        method: 'get',\n        path: 'utils/locate',\n        auth: false,\n        execFn: function(svc : UtilsService, req : any) {\n            return svc.locate(req.query.q);\n        }\n    },\n    {\n        key: 'parseFile',\n        method: 'post',\n        path: 'utils/parse',\n        auth: false,\n        execFn: function(svc : UtilsService, req : any) {\n            return svc.parseFile(req.files.file, req.body.format);\n        }\n    },\n    {\n        key: 'capabilities',\n        method: 'get',\n        path: 'utils/capabilities',\n        auth: false,\n        execFn: function(svc : UtilsService, req : any) {\n            return svc.capabilities(null, req.query);\n        }\n    },\n    {\n        key: 'capabilitiesProperty',\n        method: 'get',\n        path: 'utils/capabilities/:id',\n        auth: false,\n        execFn: function(svc : UtilsService, req : any) {\n            return svc.capabilities(req.params.id, req.query);\n        }\n    }\n];\n\n\n\n/**\n *\n */\nfunction UtilsServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"UtilsServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"UtilsServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = UtilsService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default UtilsServiceProxy;\n","\n\nimport { AgolService } from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\n\nconst Routes = [\n    {\n        key: 'searchItems',\n        method: 'get',\n        path: 'agol/items',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.searchItems(req.query);\n        }\n    },\n    {\n        key: 'searchGroups',\n        method: 'get',\n        path: 'agol/groups',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.searchGroups(req.query);\n        }\n    },\n    {\n        key: 'searchOrgs',\n        method: 'get',\n        path: 'agol/orgs',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.searchOrgs(req.query);\n        }\n    },\n    {\n        key: 'getItem',\n        method: 'get',\n        path: 'agol/items/:id',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.getItem(req.params.id);\n        }\n    },\n    {\n        key: 'getGroup',\n        method: 'get',\n        path: 'agol/groups/:id',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.getGroup(req.params.id);\n        }\n    },\n    {\n        key: 'getOrg',\n        method: 'get',\n        path: 'agol/orgs/:id',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.getOrg(req.params.id);\n        }\n    }\n];\n\n\n\n/**\n *\n */\nfunction AgolServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"AgolServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"AgolServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = AgolService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default AgolServiceProxy;\n"],"names":["tslib_1.__extends","Q.defer","Q.reject","Q.resolve","Routes"],"mappings":"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"}
