{"version":3,"file":"geoplatform-client-angular.js","sources":["ng://@geoplatform/client/angular/http/ng.ts","ng://@geoplatform/client/angular/module.ts","ng://@geoplatform/client/angular/public_api.ts","ng://@geoplatform/client/angular/geoplatform-client-angular.ts"],"sourcesContent":["\nimport { NgZone } from \"@angular/core\";\nimport {\n    HttpClient, HttpRequest, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent //, HttpErrorResponse\n} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { GPHttpClient } from '@geoplatform/client';\n\n\nclass NG2HttpClient extends GPHttpClient {\n\n    //for use to ensure executed requests are handled inside angular zone\n    // (see issues with Observable.subscribe() and NgZone)\n    private zone : NgZone;\n\n    constructor(private http: HttpClient, options?: any) {\n        super(options);\n    }\n\n    setZone(zone : NgZone) {\n        this.zone = zone;\n    }\n\n    /**\n     *\n     */\n    createRequestOpts(options: {[key:string]:any}) : HttpRequest<any> {\n\n        let opts : any = {};\n\n        if(options.options && options.options.responseType) {\n            opts.responseType = options.options.responseType;\n        } else opts.responseType = 'json';  //default response type\n\n        if(options.params) {\n            opts.params = new HttpParams({fromObject: options.params});\n        }\n\n        if(options.data) {\n            opts.body = options.data;\n        }\n\n        opts.headers = new HttpHeaders(options.headers || {});\n\n        //set authorization token if one was provided\n        let token = this.getToken();\n        if(token) {\n            opts.headers = opts.headers.set('Authorization', 'Bearer ' + token);\n        }\n\n        if(opts.body) {\n            return new HttpRequest<any>(options.method, options.url, opts.body, opts);\n        } else {\n            return new HttpRequest<any>(options.method, options.url, opts);\n        }\n\n    }\n\n    /**\n     * @param request - Angular HttpRequest object\n     * @return resolving the response or an error\n     */\n    execute(request : HttpRequest<any>) : Promise<any> {\n\n        let value : any = null;\n        return new Promise<any>( (resolve, reject) => {\n\n            this.http.request(request)\n            .pipe(\n                map( (event: HttpEvent<any>) => {\n                    if (event instanceof HttpResponse) {\n                        return (event as HttpResponse<any>).body;\n                    }\n                    return {};\n                })\n            )\n            .subscribe( (v: any) => { value = v; },\n                (err : Error) => { reject(err); },\n                () => {\n                    if(this.zone) {\n                        this.zone.run( () => {\n                            resolve(value);\n                        });\n                    } else {\n                        resolve(value);\n                    }\n                }\n            );\n        });\n    }\n}\n\n\n/*\nDon't use 'default' when exporting something being provided by the module\nor else you may get \"Invalid provider for the module\" when compiling using AOT.\nSee:\nhttps://stackoverflow.com/questions/48183594/invalid-provider-for-the-ngmodule-when-using-aot\n */\nexport {\n    NG2HttpClient\n}\n","import { NgModule, ModuleWithProviders, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport {\n    Config, GPHttpClient,\n    ItemService, DatasetService, ServiceService, LayerService,\n    MapService, GalleryService, UtilsService, KGService\n} from '@geoplatform/client';\n\nimport { NG2HttpClient } from './http/ng';\n\n\nexport function ng2HttpClientFactory( http : HttpClient ) {\n    return new NG2HttpClient(http);\n}\nexport function itemServiceProviderFactory( http : HttpClient ) {\n    let client = ng2HttpClientFactory(http);\n    return new ItemService(Config.ualUrl, client);\n}\nexport function datasetServiceProviderFactory( http : HttpClient ) {\n    let client = ng2HttpClientFactory(http);\n    return new DatasetService(Config.ualUrl, client);\n}\nexport function serviceServiceProviderFactory( http : HttpClient ) {\n    let client = ng2HttpClientFactory(http);\n    return new ServiceService(Config.ualUrl, client);\n}\nexport function layerServiceProviderFactory( http : HttpClient ) {\n    let client = ng2HttpClientFactory(http);\n    return new LayerService(Config.ualUrl, client);\n}\nexport function mapServiceProviderFactory( http : HttpClient ) {\n    let client = ng2HttpClientFactory(http);\n    return new MapService(Config.ualUrl, client);\n}\nexport function galleryServiceProviderFactory( http : HttpClient ) {\n    let client = ng2HttpClientFactory(http);\n    return new GalleryService(Config.ualUrl, client);\n}\nexport function utilsServiceProviderFactory( http : HttpClient ) {\n    let client = ng2HttpClientFactory(http);\n    return new UtilsService(Config.ualUrl, client);\n}\nexport function kgServiceProviderFactory( http : HttpClient ) {\n    let client = ng2HttpClientFactory(http);\n    return new KGService(Config.ualUrl, client);\n}\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpClientModule\n    ],\n    providers: [\n        {\n            provide:    NG2HttpClient,\n            useFactory: ng2HttpClientFactory,\n            deps:       [ HttpClient ]\n        },\n        {\n            provide:    ItemService,\n            useFactory: itemServiceProviderFactory,\n            deps:       [ HttpClient ]\n        },\n        {\n            provide:    DatasetService,\n            useFactory: datasetServiceProviderFactory,\n            deps:       [ HttpClient ]\n        },\n        {\n            provide:    ServiceService,\n            useFactory: serviceServiceProviderFactory,\n            deps:       [ HttpClient ]\n        },\n        {\n            provide:    LayerService,\n            useFactory: layerServiceProviderFactory,\n            deps:       [ HttpClient ]\n        },\n        {\n            provide:    MapService,\n            useFactory: mapServiceProviderFactory,\n            deps:       [ HttpClient ]\n        },\n        {\n            provide:    GalleryService,\n            useFactory: galleryServiceProviderFactory,\n            deps:       [ HttpClient ]\n        },\n        {\n            provide:    UtilsService,\n            useFactory: utilsServiceProviderFactory,\n            deps:       [ HttpClient ]\n        },\n        {\n            provide:    KGService,\n            useFactory: kgServiceProviderFactory,\n            deps:       [ HttpClient ]\n        }\n    ]\n})\nexport class GeoPlatformClientModule { }\n","\n// export * from './http/index';\n// export * from './module';\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {kgServiceProviderFactory as Éµa} from './module';"],"names":[],"mappings":";;;;;;;AAWA,MAAM,aAAc,SAAQ,YAAY;IAMpC,YAAoB,IAAgB,EAAE,OAAa;QAC/C,KAAK,CAAC,OAAO,CAAC,CAAC;QADC,SAAI,GAAJ,IAAI,CAAY;KAEnC;IAED,OAAO,CAAC,IAAa;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;;;;IAKD,iBAAiB,CAAC,OAA2B;QAEzC,IAAI,IAAI,GAAS,EAAE,CAAC;QAEpB,IAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE;YAChD,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;SACpD;;YAAM,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAElC,IAAG,OAAO,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,EAAC,UAAU,EAAE,OAAO,CAAC,MAAM,EAAC,CAAC,CAAC;SAC9D;QAED,IAAG,OAAO,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;SAC5B;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;;QAGtD,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAG,KAAK,EAAE;YACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,CAAC;SACvE;QAED,IAAG,IAAI,CAAC,IAAI,EAAE;YACV,OAAO,IAAI,WAAW,CAAM,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7E;aAAM;YACH,OAAO,IAAI,WAAW,CAAM,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SAClE;KAEJ;;;;;IAMD,OAAO,CAAC,OAA0B;QAE9B,IAAI,KAAK,GAAS,IAAI,CAAC;QACvB,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;YAErC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;iBACzB,IAAI,CACD,GAAG,CAAE,CAAC,KAAqB;gBACvB,IAAI,KAAK,YAAY,YAAY,EAAE;oBAC/B,OAAQ,KAA2B,CAAC,IAAI,CAAC;iBAC5C;gBACD,OAAO,EAAE,CAAC;aACb,CAAC,CACL;iBACA,SAAS,CAAE,CAAC,CAAM,OAAO,KAAK,GAAG,CAAC,CAAC,EAAE,EAClC,CAAC,GAAW,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EACjC;gBACI,IAAG,IAAI,CAAC,IAAI,EAAE;oBACV,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE;wBACX,OAAO,CAAC,KAAK,CAAC,CAAC;qBAClB,CAAC,CAAC;iBACN;qBAAM;oBACH,OAAO,CAAC,KAAK,CAAC,CAAC;iBAClB;aACJ,CACJ,CAAC;SACL,CAAC,CAAC;KACN;CACJ;;SC/Ee,oBAAoB,CAAE,IAAiB;IACnD,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;CAClC;AACD,SAAgB,0BAA0B,CAAE,IAAiB;IACzD,IAAI,MAAM,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACxC,OAAO,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACjD;AACD,SAAgB,6BAA6B,CAAE,IAAiB;IAC5D,IAAI,MAAM,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACxC,OAAO,IAAI,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACpD;AACD,SAAgB,6BAA6B,CAAE,IAAiB;IAC5D,IAAI,MAAM,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACxC,OAAO,IAAI,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACpD;AACD,SAAgB,2BAA2B,CAAE,IAAiB;IAC1D,IAAI,MAAM,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACxC,OAAO,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CAClD;AACD,SAAgB,yBAAyB,CAAE,IAAiB;IACxD,IAAI,MAAM,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACxC,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CAChD;AACD,SAAgB,6BAA6B,CAAE,IAAiB;IAC5D,IAAI,MAAM,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACxC,OAAO,IAAI,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACpD;AACD,SAAgB,2BAA2B,CAAE,IAAiB;IAC1D,IAAI,MAAM,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACxC,OAAO,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CAClD;AACD,SAAgB,wBAAwB,CAAE,IAAiB;IACvD,IAAI,MAAM,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACxC,OAAO,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CAC/C;AAwDD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAI,CAAA;AAA3B,uBAAuB;IArDnC,QAAQ,CAAC;QACN,OAAO,EAAE;YACL,YAAY;YACZ,gBAAgB;SACnB;QACD,SAAS,EAAE;YACP;gBACI,OAAO,EAAK,aAAa;gBACzB,UAAU,EAAE,oBAAoB;gBAChC,IAAI,EAAQ,CAAE,UAAU,CAAE;aAC7B;YACD;gBACI,OAAO,EAAK,WAAW;gBACvB,UAAU,EAAE,0BAA0B;gBACtC,IAAI,EAAQ,CAAE,UAAU,CAAE;aAC7B;YACD;gBACI,OAAO,EAAK,cAAc;gBAC1B,UAAU,EAAE,6BAA6B;gBACzC,IAAI,EAAQ,CAAE,UAAU,CAAE;aAC7B;YACD;gBACI,OAAO,EAAK,cAAc;gBAC1B,UAAU,EAAE,6BAA6B;gBACzC,IAAI,EAAQ,CAAE,UAAU,CAAE;aAC7B;YACD;gBACI,OAAO,EAAK,YAAY;gBACxB,UAAU,EAAE,2BAA2B;gBACvC,IAAI,EAAQ,CAAE,UAAU,CAAE;aAC7B;YACD;gBACI,OAAO,EAAK,UAAU;gBACtB,UAAU,EAAE,yBAAyB;gBACrC,IAAI,EAAQ,CAAE,UAAU,CAAE;aAC7B;YACD;gBACI,OAAO,EAAK,cAAc;gBAC1B,UAAU,EAAE,6BAA6B;gBACzC,IAAI,EAAQ,CAAE,UAAU,CAAE;aAC7B;YACD;gBACI,OAAO,EAAK,YAAY;gBACxB,UAAU,EAAE,2BAA2B;gBACvC,IAAI,EAAQ,CAAE,UAAU,CAAE;aAC7B;YACD;gBACI,OAAO,EAAK,SAAS;gBACrB,UAAU,EAAE,wBAAwB;gBACpC,IAAI,EAAQ,CAAE,UAAU,CAAE;aAC7B;SACJ;KACJ,CAAC;GACW,uBAAuB,CAAI;;ACtGxC,gCAAgC;;ACDhC;;GAEG;;;;"}