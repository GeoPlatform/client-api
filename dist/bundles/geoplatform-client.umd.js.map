{"version":3,"file":"geoplatform-client.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","ng://@geoplatform/client/shared/polyfills.ts","ng://@geoplatform/client/shared/error.ts","ng://@geoplatform/client/shared/types.ts","ng://@geoplatform/client/shared/uri-factory.ts","ng://@geoplatform/client/shared/parameters.ts","ng://@geoplatform/client/shared/kg-query.ts","ng://@geoplatform/client/shared/classifiers.ts","ng://@geoplatform/client/shared/query.ts","ng://@geoplatform/client/shared/query-factory.ts","ng://@geoplatform/client/shared/config.ts","ng://@geoplatform/client/http/client.ts","ng://@geoplatform/client/http/xhr.ts","ng://@geoplatform/client/services/base.ts","ng://@geoplatform/client/services/item.ts","ng://@geoplatform/client/services/dataset.ts","ng://@geoplatform/client/services/map.ts","ng://@geoplatform/client/services/layer.ts","ng://@geoplatform/client/services/service.ts","ng://@geoplatform/client/services/gallery.ts","ng://@geoplatform/client/services/utils.ts","ng://@geoplatform/client/services/association.ts","ng://@geoplatform/client/services/agol.ts","ng://@geoplatform/client/services/tracking.ts","ng://@geoplatform/client/services/kg.ts","ng://@geoplatform/client/services/factory.ts","ng://@geoplatform/client/public_api.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nfunction apply() {\n    if (typeof Object.assign != 'function') {\n      // Must be writable: true, enumerable: false, configurable: true\n      Object.defineProperty(Object, \"assign\", {\n        value: function assign(target : any, varArgs : any[]) { // .length of function is 2\n\n          if (target == null) { // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n          }\n\n          if(varArgs) { }\n          var to = Object(target);\n\n          for (var index = 1; index < arguments.length; index++) {\n            var nextSource = arguments[index];\n\n            if (nextSource != null) { // Skip over if undefined or null\n              for (var nextKey in nextSource) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                  to[nextKey] = nextSource[nextKey];\n                }\n              }\n            }\n          }\n          return to;\n        },\n        writable: true,\n        configurable: true\n      });\n    }\n}\n\n\nexport default function polyfills() {\n    apply();\n};\n","\nclass GPError extends Error {\n    public error : string|null;\n    public status: number = 500;\n    public statusCode : number = 500;\n    constructor(message : string) {\n        super(message);\n        this.error = null;\n    }\n    public setError(value:string) { this.error = value; }\n    public setStatus(value:number) { this.status = this.statusCode = value; }\n}\n\nexport default GPError;\n","\n\nconst ItemTypes = {\n    DATASET         : \"dcat:Dataset\",\n    SERVICE         : \"regp:Service\",\n    LAYER           : \"Layer\",\n    MAP             : \"Map\",\n    GALLERY         : \"Gallery\",\n    COMMUNITY       : 'Community',\n    APPLICATION     : 'Application',\n    TOPIC           : 'Topic',\n    WEBSITE         : 'WebSite',\n    ORGANIZATION    : \"org:Organization\",\n    CONTACT         : \"vcard:VCard\",\n    PERSON          : \"foaf:Person\",\n    CONCEPT         : \"skos:Concept\",\n    CONCEPT_SCHEME  : \"skos:ConceptScheme\",\n    STANDARD        : 'dct:Standard',\n    RIGHTS_STATEMENT: 'dct:RightsStatement'\n};\n\nconst ItemTypeLabels = {};\nItemTypeLabels[ItemTypes.DATASET]          = \"Dataset\";\nItemTypeLabels[ItemTypes.SERVICE]          = \"Service\";\nItemTypeLabels[ItemTypes.LAYER]            = \"Layer\";\nItemTypeLabels[ItemTypes.MAP]              = \"Map\";\nItemTypeLabels[ItemTypes.GALLERY]          = \"Gallery\";\nItemTypeLabels[ItemTypes.COMMUNITY]        = 'Community';\nItemTypeLabels[ItemTypes.APPLICATION]      = 'Application';\nItemTypeLabels[ItemTypes.TOPIC]            = 'Topic';\nItemTypeLabels[ItemTypes.WEBSITE]          = 'WebSite';\nItemTypeLabels[ItemTypes.ORGANIZATION]     = \"Organization\";\nItemTypeLabels[ItemTypes.CONTACT]          = \"Contact\";\nItemTypeLabels[ItemTypes.PERSON]           = \"Person\";\nItemTypeLabels[ItemTypes.CONCEPT]          = \"Concept\";\nItemTypeLabels[ItemTypes.CONCEPT_SCHEME]   = \"Concept Scheme\";\nItemTypeLabels[ItemTypes.STANDARD]         = 'Standard';\nItemTypeLabels[ItemTypes.RIGHTS_STATEMENT] = 'Rights Statement';\n\n\nexport {\n    ItemTypes as default,\n    ItemTypes,\n    ItemTypeLabels\n};\n","\nimport ItemTypes from './types';\n\n\n\nconst URI_BASE = 'http://www.geoplatform.gov';\n\nconst ESRI_TYPES = [\n    \"http://www.geoplatform.gov/spec/esri-feature-rest\",\n    \"http://www.geoplatform.gov/spec/esri-image-rest\",\n    \"http://www.geoplatform.gov/spec/esri-map-rest\",\n    \"http://www.geoplatform.gov/spec/esri-tile-rest\"\n];\n\n\n\n\nfunction formatReference( ref : any ) : any {\n    if(ref === null) return '';\n    if(typeof(ref) === 'string')\n        return ref.toLowerCase().replace(/\\s/g,'');\n    else if(typeof(ref) === 'object') {\n        var result = '';\n        for(var prop in ref) {\n            if(ref.hasOwnProperty(prop)) {\n                var value = ref[prop];\n                if(value !== null && typeof(value) !== 'undefined') {\n                    //TODO catch non-string-able values\n                    result += (value+'').toLowerCase().replace(/\\s/g,'');\n                }\n            }\n        }\n        return result;\n    }\n    return '';\n}\n\n/**\n * Adjusts service access url to ignore certain patterns that can affect\n * how URI uniqueness is.\n * @param service - GP Service instance\n * @return access url adjusted for URI generation needs\n */\nfunction fixServiceHref(service : any) : string {\n    stripLayerFromServiceHref(service);\n    let url = service.accessURL || service.href;\n    if(!url || !url.length) return null;\n\n    //ensure case sensitivity is not an issue\n    // and that any surrounding whitespace is ignored\n    url = (url + '').trim().toLowerCase();\n\n    url = url.replace(/http(s)?:\\/\\//,'');    //ignore protocol for URI purposes\n\n    url = url.replace(/&?request=[A-Za-z]+/i,'')\n             .replace(/&?service=(WMS|WFS|WCS|CSW)/i,'')\n             .replace(/&?version=[0-9\\.]*/i,'')\n             .replace(/&?layers=[A-Za-z0-9\\-\\:_,]*/i, '')\n             .replace(/&?srs=[A-Za-z0-9\\:]*/i, '')\n             .replace(/&?crs=[A-Za-z0-9\\:]*/i, '')\n             .replace(/&?format=[A-Za-z\\/]*/i, '')\n             .replace(/&?bbox=[0-9,\\.]*/i, '');\n\n    let lastChar = url[url.length-1];\n    if( '/' === lastChar || '?' === lastChar) { //ignore empty querystring or trailing slashes\n        url = url.substring(0, url.length-1);\n    }\n    return url;\n}\n\n\n/**\n * ESRI services sometimes have layer information baked into their URL\n * which needs to be removed before the service can be used.\n * @param service - GP Service object\n */\nfunction stripLayerFromServiceHref(service : any) : string {\n\n    if(!service) return;\n    let type = service.serviceType || service.conformsTo;\n    if(!type) return;\n\n    //if ESRI service, make sure it doesn't have a layer id on the href\n    if( ESRI_TYPES.indexOf(type.uri) >= 0 ) {\n\n        let href = service.href || service.accessURL;\n        let matches = href.match(/(Map|Feature|Image)(Server\\/\\d+)/i);\n        if(matches && matches.length > 2) {\n            // 0 < full string match (ie, 'MapServer/1')\n            // 1 < server type match (ie, 'Map' or 'Feature')\n            // 2 < bit we care about (ie, 'Server/1')\n            href = href.replace(matches[2], 'Server/');\n\n            if(service.href) service.href = href;\n            if(service.accessURL) service.accessURL = href;\n        }\n    }\n}\n\n\n\n\n/**\n * @see https://geoplatform.atlassian.net/wiki/display/DT/Common+Object+Identifier+Scheme\n */\nconst URIFactory = {\n\n    factories : {},\n\n    register : function (type : string, factory : Function) {\n        this.factories[type] = factory;\n    },\n\n    create : function(object : any, md5Fn : Function) {\n        if(!object || !object.type) return null;\n        if( typeof(md5Fn) !== 'function' ) {\n            throw new Error(\"Must specify a MD5 function when using URIFactory\");\n        }\n        let factory = this.factories[object.type];\n        if(!factory) return null;\n        return factory(object, md5Fn);\n    }\n};\n\n\n\n\nURIFactory.register(ItemTypes.DATASET, function(dataset : any, md5 : Function) {\n    let pubName = (dataset.publisher||dataset.publishers||[])\n        .map( pub => { return pub.label||\"\"; }).join('');\n    let ref : any = formatReference({\n        title: dataset.title,\n        pub: pubName\n    });\n    return URI_BASE + '/id/dataset/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.SERVICE, function(service : any, md5 : Function) {\n    let url = fixServiceHref(service);\n    let ref = formatReference(url);\n    return URI_BASE + '/id/service/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.LAYER, function(layer : any, md5 : Function) {\n\n    let svcUrl = '';\n    let services = layer.servicedBy || layer.services;\n    if(services && services.length)\n        svcUrl = services[0].accessURL || services[0].href || '';\n    let lyrUrl = layer.accessURL || layer.href || '';\n    let lyrName = layer.layerName || '';\n\n    //not recommended based upon following example:\n    //  http://services.nationalmap.gov/.../MapServer/WMSServer?request=GetCapabilities&service=WMS/layer/1\n    // return url + '/layer/' + layer.layerName;\n\n    let args = svcUrl + lyrName + lyrUrl;\n    if(!args.length) return null;   //nothing was provided\n\n    //ALTERNATE URI PATTERN\n    let ref = formatReference(args);\n    return URI_BASE + '/id/layer/' + md5(ref);\n\n});\n\n/**\n * Uses the map title, createdBy, and all third-party identifiers associated with the map\n * @param {object} map - GP Map object\n * @return {string} uri unique to this object\n */\nURIFactory.register(ItemTypes.MAP, function(map : any, md5 : Function) {\n    let author = map.createdBy || map._createdBy || \"\";\n    let identifiers = (map.identifiers || map.identifier || []).join('');\n    let ref = formatReference({title: map.title, author: author, identifiers: identifiers});\n    return URI_BASE + '/id/map/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.GALLERY, function(gallery : any, md5 : Function) {\n    let author = gallery.createdBy || gallery._createdBy || \"\";\n    let ref = formatReference({title: gallery.title, author: author});\n    return URI_BASE + '/id/gallery/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.COMMUNITY, function(community : any, md5 : Function) {\n    let ref = formatReference({title: community.title});\n    return URI_BASE + '/id/community/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.ORGANIZATION, function(org : any, md5 : Function) {\n    let ref = formatReference(org.label || org.name);\n    return URI_BASE + '/id/organization/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.PERSON, function(person : any, md5 : Function) {\n    let ref = formatReference(person.name);\n    return URI_BASE + '/id/person/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.CONTACT, function(vcard : any, md5 : Function) {\n    let ref : any = {};\n    if(vcard.email || vcard.hasEmail)\n        ref.email = vcard.email || vcard.hasEmail; //email\n    if(vcard.tel)\n        ref.tel = vcard.tel; //tel\n    if(vcard.orgName || vcard['organization-name'])\n        ref.orgName = vcard.orgName || vcard['organization-name']; //orgName\n    if(vcard.positionTitle)\n        ref.positionTitle = vcard.positionTitle; //positionTitle\n    ref = formatReference(ref);\n    return URI_BASE + '/id/contact/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.CONCEPT, function(object : any, md5 : Function) {\n    let scheme = object.inScheme || object.scheme;\n    let schemeLabel = scheme ? (scheme.label || scheme.prefLabel) : '';\n    let schemeRef = formatReference(schemeLabel);\n    let ref = formatReference( object.label || object.prefLabel );\n    return URI_BASE + '/id/metadata-codelists/' + md5(schemeRef) + '/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.CONCEPT_SCHEME, function(object : any, md5 : Function) {\n    let ref = formatReference(object.label || object.prefLabel);\n    return URI_BASE + '/id/metadata-codelists/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.APPLICATION, function(object : any, md5 : Function) {\n    if(!object || !object.title) return null;\n    let author = object.createdBy || object._createdBy || \"\";\n    let ref = formatReference({title: object.title, author: author});\n    return URI_BASE + '/id/application/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.TOPIC, function(object : any, md5 : Function) {\n    if(!object || !object.title) return null;\n    let author = object.createdBy || object._createdBy || \"\";\n    let ref = formatReference({title: object.title, author: author});\n    return URI_BASE + '/id/topic/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.WEBSITE, function(item : any, md5 : Function) {\n    if(!item || !item.landingPage) return null;\n    let ref = formatReference(item.landingPage);\n    return URI_BASE + '/id/website/' + md5(ref);\n});\n\n\n\nfunction factoryFn(md5Fn) {\n    if( typeof(md5Fn) !== 'function' ) {\n        throw new Error(\"Must specify a MD5 function when using URIFactory\");\n    }\n    return function(object) {\n        return URIFactory.create(object, md5Fn);\n    };\n}\n\n\n\nexport {\n    factoryFn as default,\n    factoryFn as URIFactory\n};\n","\n\nexport default {\n    ALTERNATE_TITLE  : 'alternateTitles',\n    BEGINS           : 'startDate.min',\n    CLASSIFIERS      : 'classifiers',\n    CREATED          : 'created',\n    CREATED_BEFORE   : 'created.max',\n    CREATED_AFTER    : 'created.min',\n    CREATED_BY       : 'createdBy',\n    CREATOR          : 'creator.id',\n    CONTRIBUTED_BY   : 'contributedBy',\n    ENDS             : 'endDate.max',\n    EXTENT           : 'extent',\n    IDENTIFIERS      : 'identifiers',\n    KEYWORDS         : 'keywords',\n    LAST_MODIFIED_BY : 'lastModifiedBy',\n    MODIFIED         : 'modified',\n    MODIFIED_BEFORE  : 'modified.max',\n    MODIFIED_AFTER   : 'modified.min',\n    PUBLISHERS_ID    : 'publisher.id',\n    PUBLISHERS_LABEL : 'publisher.label',\n    PUBLISHERS_URI   : 'publisher.uri',\n    CONTACTS_ID      : 'contacts.id',\n    CONTACTS_LABEL   : 'contacts.label',\n    CONTACTS_URI     : 'contacts.uri',\n    QUERY            : 'q',\n    SCHEMES_ID       : 'scheme.id',\n    SCHEMES_LABEL    : 'scheme.label',\n    SCHEMES_URI      : 'scheme.uri',\n    SIMILAR_TO       : 'similarTo',\n    STATUS           : 'status',\n    SERVICE_TYPES    : 'serviceType.id',\n    THEMES_ID        : 'theme.id',\n    THEMES_LABEL     : 'theme.label',\n    THEMES_URI       : 'theme.uri',\n    TOPICS_ID        : 'topic.id',\n    TOPICS_LABEL     : 'topic.label',\n    TOPICS_URI       : 'topic.uri',\n    TYPES            : 'type',      //TODO change to 'types'\n    URI              : 'uri',\n    USED_BY_ID       : 'usedBy.id',\n    USED_BY_LABEL    : 'usedBy.label',\n    USED_BY_URI      : 'usedBy.uri',\n    VISIBILITY       : 'visibility',\n    RESOURCE_TYPE    : 'resourceType',\n    DATASET          : 'dataset',\n    LANDING_PAGE     : 'landingPage',\n    PURPOSE          : 'purpose',\n\n    //statistics parameters\n    RELIABILITY      : 'reliability',\n    RELIABILITY_MIN  : 'reliability.min',\n    RELIABILITY_MAX  : 'reliability.max',\n    ONLINE           : 'online',\n    COMPLIANT        : 'compliant',\n    SPEED            : 'speed',\n    SPEED_MIN        : 'speed.min',\n    SPEED_MAX        : 'speed.max',\n    LIKES            : 'likes',\n    LIKES_MIN        : 'likes.min',\n    LIKES_MAX        : 'likes.max',\n    VIEWS            : 'views',\n    VIEWS_MIN        : 'views.min',\n    VIEWS_MAX        : 'views.max',\n\n    //type-specific parameters\n    HREF             : 'href',           //service-specific\n    LAYER_TYPE       : 'layerType',     //layer-specific\n    LAYER_NAME       : 'layerName',     //...\n    PARENT_LAYER     : 'parentLayer',   //...\n    SUB_LAYER        : 'subLayer',      //...\n    SERVICE          : 'service',       //...\n    MAP_LAYER        : 'mapLayer',      //map-specific\n    GALLERY_ITEM     : 'galleryItem',   //gallery-specific\n\n    //meta-parameters\n    FACETS           : 'includeFacets',  //TODO change to 'facets'\n    FIELDS           : 'fields',\n    SORT             : 'sort',\n    PAGE             : 'page',\n    PAGE_SIZE        : 'size',\n\n    //recommender service-specific\n    FOR_TYPES        : 'for'\n};\n","\nimport QueryParameters from './parameters';\n\ninterface KVP<U> { [ key : string ] : U }\n\n\nconst SORT_OPTIONS_DEFAULT : { value:string; label:string; }[] = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nclass KGQuery {\n\n    public query : KVP<any>;\n    private defaultQuery : KVP<any>;\n\n    constructor( options ?: KVP<any> ) {\n\n        this.defaultQuery = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n        this.query = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n        if(options) {\n            this.applyParameters(options);\n        }\n    }\n\n\n    getQuery() : KVP<any> {\n        let result : KVP<any> = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    parameter(name : string, value: any) : KGQuery {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    setParameter (name : string, value : any) {\n        if(value === null || value === undefined)\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    getParameter (key : string) : any {\n        return this.query[key];\n    }\n\n    applyParameters (obj : KVP<any> ) {Â \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    q(text : string) : KGQuery {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param text - free text query\n     */\n    setQ (text : string) {\n        this.setParameter(QueryParameters.QUERY, text);\n    }\n\n    getQ() : string|null {\n        return this.getParameter(QueryParameters.QUERY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param types - KG classifiers for which concepts should be returned\n     */\n    classifiers(types : string|string[]) : KGQuery {\n        this.setClassifiers(types);\n        return this;\n    }\n\n    /**\n     * @param types - KG classifiers for which concepts should be returned\n     */\n    setClassifiers (types : string|string[]) {\n        if(!types) return;\n        if(typeof(types) === 'string') types = types = [types];\n        this.setParameter(QueryParameters.TYPES, types);\n    }\n\n    /**\n     * @return KG classifiers for which concepts should be returned\n     */\n    getClassifiers () : string[] {\n        return this.getParameter(QueryParameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.types()\n     * query parameter (they map to different HTTP request parameters).\n     * @param objTypes - Item object type names\n     */\n    types(objTypes : string|string[]) : KGQuery {\n        this.setTypes(objTypes);\n        return this;\n    }\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.setTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @param objTypes - Item object type names\n     */\n    setTypes (objTypes : string|string[]) {\n        if(!objTypes) return;\n        if(typeof(objTypes) === 'string') objTypes = [objTypes];\n        this.setParameter(QueryParameters.FOR_TYPES, objTypes);\n    }\n\n    /**\n     * Get the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.getTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @return Item object type names\n     */\n    getTypes () : string[] {\n        return this.getParameter(QueryParameters.FOR_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param page - page of results to fetch\n     */\n    page (page : number) : KGQuery {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page : number) {\n        if(isNaN(page) || page*1<0) return;\n        this.query.page = page*1;\n    }\n\n    getPage() : number {\n        return this.query.page;\n    }\n\n    nextPage() : void {\n        this.setPage(this.query.page+1);\n    }\n\n    previousPage() : void {\n        this.setPage(this.query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param size - page size to request\n     */\n    pageSize (size: number) : KGQuery {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size : number) {\n        if(isNaN(size) || size*1<0) return;\n        this.query.size = size*1;\n    }\n\n    getPageSize() : number {\n        return this.query.size;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n    sort (sort : string, order ?: string) : KGQuery {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort : string, order ?:string) {\n         order = order || 'desc';\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.query.sort = sort;\n    }\n\n    getSort() : string | null {\n        return this.query.sort;\n    }\n\n    getSortField() : string | null {\n        return this.query.sort.split(',')[0];\n    }\n\n    getSortOrder() : boolean {\n        return this.query.sort.split(',')[1] === 'asc';\n    }\n\n    /**\n     * @return list of key-value pairs of sort options\n     */\n    getSortOptions() : { value: string, label: string; }[] {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = this.defaultQuery;\n    }\n}\n\nexport default KGQuery;\n","\n\n\nexport default  {\n    PURPOSE             : 'purpose',\n    FUNCTION            : 'function',\n    TOPIC_PRIMARY       : 'primaryTopic',\n    TOPIC_SECONDARY     : 'secondaryTopic',\n    SUBJECT_PRIMARY     : 'primarySubject',\n    SUBJECT_SECONDARY   : 'secondarySubject',\n    COMMUNITY           : 'community',\n    AUDIENCE            : 'audience',\n    PLACE               : 'place',\n    CATEGORY            : 'category'\n};\n","\nimport Parameters from './parameters';\nimport Classifiers from './classifiers';\n\ninterface KVP<U> { [ key : string ] : U }\n\nconst Fields : KVP<string> = {\n    ACCESS_RIGHTS       : 'rights',\n    ALTERNATE_TITLES    : 'alternateTitles',\n    ANNOTATIONS         : 'annotations',\n    CLASSIFIERS         : 'classifiers',\n    CONCEPT_SCHEME      : 'scheme',\n    CONTACTS            : 'contacts',\n    CREATED             : 'created',\n    CREATED_BY          : 'createdBy',\n    DATASETS            : 'datasets',\n    DESCRIPTION         : 'description',\n    DISTRIBUTIONS       : 'distributions',\n    EXTENT              : 'extent',\n    GALLERY_ITEMS       : 'items',\n    HREF                : 'href',\n    IDENTIFIERS         : 'identifiers',\n    KEYWORDS            : 'keywords',\n    LABEL               : 'label',\n    LAST_MODIFIED_BY    : 'lastModifiedBy',\n    LAYERS              : 'layers',\n    LAYER_TYPE          : 'layerType',\n    LAYER_NAME          : 'layerName',\n    LEGEND              : 'legend',\n    MODIFIED            : 'modified',\n    PARENT_LAYER        : 'parentLayer',\n    PUBLISHERS          : 'publishers',\n    RESOURCE_TYPES      : 'resourceTypes',\n    SERVICE_TYPE        : 'serviceType',\n    SERVICES            : 'services',\n    SPATIAL             : 'spatial',\n    STATISTICS          : 'statistics',\n    STATUS              : 'status',\n    SUB_LAYERS          : 'subLayers',\n    TEMPORAL            : 'temporal',\n    THEMES              : 'themes',\n    THUMBNAIL           : 'thumbnail',\n    TOPICS              : 'topics',\n    USED_BY             : 'usedBy',\n    VISIBILITY          : 'visibility',\n    LANDING_PAGE        : 'landingPage'\n};\n\nconst FIELDS_DEFAULT : string[] = [\n    Fields.CREATED, Fields.MODIFIED, Fields.CREATED_BY,\n    Fields.PUBLISHERS, Fields.THEMES, Fields.DESCRIPTION\n];\n\n/* --------------------------------------------------------- */\n\nconst Facets : KVP<string> = {\n    ALTERNATE_TITLES    : 'alternateTitles',\n    CONCEPT_SCHEMES     : 'schemes',\n    CREATED_BY          : 'createdBy',\n    HREF                : 'href',\n    IDENTIFIERS         : \"identifiers\",\n    LAYER_TYPE          : 'layerType',\n    LAYER_NAME          : 'layerName',\n    LIKES               : 'likes',\n    ONLINE              : 'online',\n    PUBLISHERS          : 'publishers',\n    CONTACTS            : 'contacts',\n    RELIABILITY         : 'reliability',\n    SERVICE_TYPES       : 'serviceTypes',\n    SPEED               : 'speed',\n    STATUS              : 'status',\n    THEMES              : 'themes',\n    TOPICS              : 'topics',\n    TYPES               : 'type',   //TODO change to 'types'\n    USED_BY             : 'usedBy',\n    VIEWS               : 'views',\n    VISIBILITY          : 'visibility'\n};\n\nconst FACETS_DEFAULT : string[] = [\n    Facets.TYPES,\n    Facets.PUBLISHERS,\n    Facets.SERVICE_TYPES,\n    Facets.CONCEPT_SCHEMES,\n    Facets.VISIBILITY,\n    Facets.CREATED_BY\n];\n\n\n/*\n    Map facet keys to parameters so clients can set\n    query params using faceted results\n\n    //TODO remove these and their function below\n */\nconst FacetToParam : KVP<string> = {};\nFacetToParam[Facets.TYPES]           = Parameters.TYPES;\nFacetToParam[Facets.THEMES]          = Parameters.THEMES_ID;\nFacetToParam[Facets.TOPICS]          = Parameters.TOPICS_ID;\nFacetToParam[Facets.PUBLISHERS]      = Parameters.PUBLISHERS_ID;\nFacetToParam[Facets.CONTACTS]        = Parameters.CONTACTS_ID;\nFacetToParam[Facets.CONCEPT_SCHEMES] = Parameters.SCHEMES_ID;\nFacetToParam[Facets.USED_BY]         = Parameters.USED_BY_ID;\n\n\n\n/* --------------------------------------------------------- */\n\n\nconst SORT_OPTIONS_DEFAULT : { value: string; label: string; }[] = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nconst BBOX_REGEX = /^\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?$/;\n\n\nfunction toArray(value : any) : any | null {\n    let result = value;\n    //if given a non-array value, wrap in array\n    if(result !== null && typeof(result.push) === 'undefined') result = [result];\n    //if array value is empty, nullify the result\n    if(result !== null && !result.length) result = null;\n    return result;\n}\n\n\n\n/**\n * Query\n *\n * Specify the \"default\" query constraints to use by passing in 'options.defaults = {...}';\n *\n */\nclass Query {\n\n    public query : KVP<any>;\n    private defaultQuery : KVP<any>;\n\n    /**\n     * @param options - set of initial constraints\n     */\n    constructor(options ?: KVP<any>) {\n        this.defaultQuery = { };\n        this.defaultQuery[Parameters.PAGE.toString()] = 0;\n        this.defaultQuery[Parameters.PAGE_SIZE.toString()] = 10;\n        this.defaultQuery[Parameters.SORT.toString()] = \"modified,desc\";\n        this.defaultQuery[Parameters.FIELDS.toString()] = FIELDS_DEFAULT.slice(0);\n        this.defaultQuery[Parameters.FACETS.toString()] = FACETS_DEFAULT.slice(0);\n        if(options && options.defaults) {\n            Object.assign(this.defaultQuery, options.defaults);\n            delete options.defaults;\n        }\n        this.query = JSON.parse(JSON.stringify(this.defaultQuery));\n        if(options) {\n            this.applyParameters(options);\n        }\n    }\n\n\n    /**\n     * @return containing request-ready parameters/values\n     */\n    getQuery() : KVP<any> {\n        let result : KVP<any> = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n    /**\n     * @return Query\n     */\n    clone() : Query {\n        let result = new Query();\n        let json = JSON.parse(JSON.stringify(this.query));\n        result.applyParameters(json);\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     * @param name\n     * @param value\n     * @return Query this\n     */\n    parameter(name : string, value : any) : Query {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    /**\n     * @param name\n     * @param value\n     */\n    setParameter (name : string, value: any) : void {\n        if(value === null || value === undefined || //if no value was provide\n            (typeof(value.push) !== 'undefined' && !value.length)) //or empty array\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    /**\n     * @param key - name of parameter\n     * @return value of parameter\n     */\n    getParameter (key : string) : any {\n        return this.query[key];\n    }\n\n    /**\n     * @param name - name of parameter to remove existing value for\n     */\n    clearParameter(name : string) {\n        delete this.query[name];\n    }\n\n    /**\n     * @param obj - set of parameter/values to apply to this query\n     */\n    applyParameters (obj : KVP<any>) : void {Â \n        for(let p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p as string, obj[p] as any);\n            }\n        }\n    }\n\n    /**\n     * @param facet - name of facet to set the value for as a parameter\n     * @param value - value of the facet to use as the parameter's value\n     */\n     //TODO remove this function\n    setFacetParameter (facet: string, value: string) : void {\n        let param : string = FacetToParam[facet];\n        if(!param) {\n            console.log(\"WARN : Query.applyFacetParameter() - \" +\n                \"unable to map facet to known parameter '\" + facet + \"', using \" +\n                \"as direct parameter which may not operate as intended\");\n        }\n        this.setParameter(param||facet, value);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     * @param text\n     * @return Query this\n     */\n    q(text : string) : Query { this.setQ(text); return this; }\n\n    /** @param text - free text query */\n    setQ (text : string) : void { this.setParameter(Parameters.QUERY, text); }\n    /** @return */\n    getQ() : string { return this.getParameter(Parameters.QUERY) as string; }\n\n\n    // -----------------------------------------------------------\n\n\n    keywords(text : string|string[]) : Query {\n        this.setKeywords(text);\n        return this;\n    }\n\n    /**\n     * @param text - free text query\n     */\n    setKeywords (text : string|string[]) : void {\n        this.setParameter(Parameters.KEYWORDS, toArray(text));\n    }\n\n    getKeywords() : string[] {\n        return this.getParameter(Parameters.KEYWORDS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    uri (uri : string) : Query {\n        this.setUri(uri);\n        return this;\n    }\n\n    setUri(uri : string) {\n        this.setParameter(Parameters.URI, uri);\n    }\n\n    getUri() : any {\n        return this.getParameter(Parameters.URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    types(types : string|string[]) : Query {\n        this.setTypes(types);\n        return this;\n    }\n\n    /**\n     * @param types - name of class(es) to request\n     */\n    setTypes (types : string|string[]) {\n        this.setParameter(Parameters.TYPES, toArray(types));\n    }\n\n    getTypes () : string[] {\n        return this.getParameter(Parameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    createdBy(user : string) : Query {\n        this.setCreatedBy(user);\n        return this;\n    }\n\n    /** @param user - username */\n    setCreatedBy (user : string) {\n        this.setParameter(Parameters.CREATED_BY, user);\n    }\n\n    /** @return username */\n    getCreatedBy () : any {\n        return this.getParameter(Parameters.CREATED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    lastModifiedBy(user : string) : Query {\n        this.setLastModifiedBy(user);\n        return this;\n    }\n\n    /** @param user - username */\n    setLastModifiedBy (user: string) {\n        this.setParameter(Parameters.LAST_MODIFIED_BY, user);\n    }\n\n    /** @return username */\n    getLastModifiedBy () : any {\n        return this.getParameter(Parameters.LAST_MODIFIED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.THEMES_LABEL or Parameters.THEMES_URI\n     * respectively.\n     * @param themes - string or array of strings containing theme constraint\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    themes(themes: string|string[], parameter?:string) : Query {\n        this.setThemes(themes, parameter);\n        return this;\n    }\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.THEMES_LABEL or Parameters.THEMES_URI\n     * respectively.\n     * @param themes - theme or themes to constrain by\n     */\n    setThemes (themes:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.THEMES_ID, null);\n        this.setParameter(Parameters.THEMES_LABEL, null);\n        this.setParameter(Parameters.THEMES_URI, null);\n\n        let param = parameter || Parameters.THEMES_ID;\n        this.setParameter(param, toArray(themes));\n    }\n\n    getThemes () : string[] {\n        return this.getParameter(Parameters.THEMES_ID) ||\n            this.getParameter(Parameters.THEMES_LABEL) ||\n            this.getParameter(Parameters.THEMES_URI);\n    }\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Topic or set of Topics to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.TOPIC_LABEL or Parameters.TOPIC_URI\n     * respectively.\n     * @param  topics - string or array of strings containing theme constraint\n     * @param  parameter - optional, to indicate the parameter to use\n     * @return Query instance\n     */\n    topics(topics:string|string[], parameter ?: string) : Query {\n        this.setTopics(topics, parameter);\n        return this;\n    }\n\n\n    /**\n     * Specify a Topic or set of Topics to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.TOPIC_LABEL or Parameters.TOPIC_URI\n     * respectively.\n     * @param topics - theme or topics to constrain by\n     */\n    setTopics (topics:string|string[], parameter ?: string) {\n\n        //clear existing\n        this.setParameter(Parameters.TOPICS_ID, null);\n        this.setParameter(Parameters.TOPICS_LABEL, null);\n        this.setParameter(Parameters.TOPICS_URI, null);\n\n        let param = parameter || Parameters.TOPICS_ID;\n        this.setParameter(param, toArray(topics));\n    }\n\n    getTopics () : string[] {\n        return this.getParameter(Parameters.TOPICS_ID) ||\n            this.getParameter(Parameters.TOPICS_LABEL) ||\n            this.getParameter(Parameters.TOPICS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be identifiers. If using labels or uris,\n     * specify the optional second parameter to be either\n     * Parameters.PUBLISHERS_LABEL or Parameters.PUBLISHERS_URI respectively.\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    publishers(publishers:string|string[], parameter?:string) : Query {\n        this.setPublishers(publishers, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be identifiers. If using labels or uris,\n     * specify the optional second parameter to be either\n     * Parameters.PUBLISHERS_LABEL or Parameters.PUBLISHERS_URI respectively.\n     * @param publishers - publishing orgs to constrain by\n     */\n    setPublishers (publishers:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.PUBLISHERS_ID, null);\n        this.setParameter(Parameters.PUBLISHERS_LABEL, null);\n        this.setParameter(Parameters.PUBLISHERS_URI, null);\n\n        let param = parameter || Parameters.PUBLISHERS_ID;\n        this.setParameter(param, toArray(publishers));\n    }\n\n    getPublishers () : string[] {\n        return this.getParameter(Parameters.PUBLISHERS_ID) ||\n            this.getParameter(Parameters.PUBLISHERS_LABEL) ||\n            this.getParameter(Parameters.PUBLISHERS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Point of Contact or set of Contacts to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter to be either\n     * Parameters.CONTACTS_LABEL or Parameters.CONTACTS_URI respectively.\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    contacts(contacts:string|string[], parameter?:string) : Query {\n        this.setContacts(contacts, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Contact or set of Contacts to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter to be either\n     * Parameters.CONTACTS_LABEL or Parameters.CONTACTS_URI respectively.\n     * @param contacts - publishing orgs to constrain by\n     */\n    setContacts (contacts:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.CONTACTS_ID, null);\n        this.setParameter(Parameters.CONTACTS_LABEL, null);\n        this.setParameter(Parameters.CONTACTS_URI, null);\n\n        let param = parameter || Parameters.CONTACTS_ID;\n        this.setParameter(param, toArray(contacts));\n    }\n\n    getContacts () : string[] {\n        return this.getParameter(Parameters.CONTACTS_ID) ||\n            this.getParameter(Parameters.CONTACTS_LABEL) ||\n            this.getParameter(Parameters.CONTACTS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.USED_BY_LABEL or Parameters.USED_BY_URI\n     * respectively.\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    usedBy(ids:string|string[], parameter?:string) : Query {\n        this.setUsedBy(ids, parameter);\n        return this;\n    }\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.USED_BY_LABEL or Parameters.USED_BY_URI\n     * respectively.\n     * @param ids - publishing orgs to constrain by\n     */\n    setUsedBy (ids:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.USED_BY_ID, null);\n        this.setParameter(Parameters.USED_BY_LABEL, null);\n        this.setParameter(Parameters.USED_BY_URI, null);\n\n        let param = parameter || Parameters.USED_BY_ID;\n        this.setParameter(param, toArray(ids));\n    }\n\n    getUsedBy () : string[] {\n        return this.getParameter(Parameters.USED_BY_ID) ||\n            this.getParameter(Parameters.USED_BY_LABEL) ||\n            this.getParameter(Parameters.USED_BY_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.SCHEMES_LABEL or Parameters.SCHEMES_URI\n     * respectively.\n     * @param schemes - schemes to constrain by\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    schemes(schemes:string|string[], parameter?:string) : Query {\n        this.setSchemes(schemes, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.SCHEMES_LABEL or Parameters.SCHEMES_URI\n     * respectively.\n     * @param schemes - schemes to constrain by\n     * @param parameter - optional, to indicate the parameter to use\n     */\n    setSchemes (schemes:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.SCHEMES_ID, null);\n        this.setParameter(Parameters.SCHEMES_LABEL, null);\n        this.setParameter(Parameters.SCHEMES_URI, null);\n\n        let param = parameter || Parameters.SCHEMES_ID;\n        this.setParameter(param, toArray(schemes));\n    }\n\n    getSchemes() : string[] {\n        return this.getParameter(Parameters.SCHEMES_ID) ||\n            this.getParameter(Parameters.SCHEMES_LABEL) ||\n            this.getParameter(Parameters.SCHEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     *\n     */\n    serviceTypes(types:string|string[]) : Query {\n        this.setServiceTypes(types);\n        return this;\n    }\n\n    /**\n     * @param types - ids\n     */\n    setServiceTypes (types:string|string[]) {\n        this.setParameter(Parameters.SERVICE_TYPES, toArray(types));\n    }\n\n    getServiceTypes () : string[] {\n        return this.getParameter(Parameters.SERVICE_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    visibility(vis:\"public\"|\"private\") : Query {\n        this.setVisibility(vis);\n        return this;\n    }\n\n    /**\n     * @param visibility - one of 'public' or 'private'\n     */\n    setVisibility (visibility : \"public\"|\"private\") {\n        this.setParameter(Parameters.VISIBILITY, visibility);\n    }\n\n    getVisibility () : any {\n        return this.getParameter(Parameters.VISIBILITY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    status(value : string) : Query {\n        this.setStatus(value);\n        return this;\n    }\n\n    /**\n     * @param status - current status of Item\n     */\n    setStatus (value : string) {\n        this.setParameter(Parameters.STATUS, value);\n    }\n\n    getStatus () : any {\n        return this.getParameter(Parameters.STATUS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    extent(bbox : any) : Query {\n        this.setExtent(bbox);\n        return this;\n    }\n\n    /**\n     * @param bbox - string form of \"minx,miny,maxx,maxy\", or L.LatLngBounds, or Array\n     */\n    setExtent (bbox : any) {\n        if(bbox) {\n            if(typeof(bbox.toBboxString) !== 'undefined') {\n                //Leaflet Bounds instance\n                bbox = bbox.toBboxString();\n\n            } else if(typeof(bbox.push) !== 'undefined' && bbox.length &&\n                //Nested array (alternate Leaflet representation):\n                // [ [minLat,minLong], [maxLat,maxLong] ]\n                typeof(bbox[0].push) !== 'undefined') {\n                bbox = bbox[0][1]+','+bbox[0][0]+','+bbox[1][1]+','+bbox[1][0];\n\n            } else if(typeof(bbox) === 'string') {\n                if(!BBOX_REGEX.test(bbox)) {\n                    throw new Error(\"Invalid argument: bbox string must be \" +\n                        \"in form of 'minx,miny,maxx,maxy'\");\n                }\n            } else {\n                throw new Error(\"Invalid argument: bbox must be one of \" +\n                    \"Leaflet.Bounds, nested array, or bbox string\");\n            }\n        }\n        this.setParameter(Parameters.EXTENT, bbox);\n    }\n\n    /**\n     * @return bbox string or null if not set\n     */\n    getExtent () : any {\n        return this.getParameter(Parameters.EXTENT);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Ex.\n     *  const { KGClassifiers, Query } from 'geoplatform.client';\n     *  let purposeId = '...';\n     *  let query = new Query();\n     *  query.classifier( KGClassifiers.PURPOSE, purposeId );\n     *\n     * @param classifier - string name of classifier to use\n     * @param value - id or array of ids of concepts to use\n     * @return Query\n     */\n    classifier(classifier : string, value : string|string[]) : Query {\n        this.setClassifier(classifier, value);\n        return this;\n    }\n\n    /**\n     * Ex.\n     *  const { KGClassifiers, Query } from 'geoplatform.client';\n     *  let purposeId = '...';\n     *  let query = new Query();\n     *  query.setClassifier( KGClassifiers.PURPOSE, purposeId );\n     *\n     * @param classifier - string name of classifier to use\n     * @param value - id or array of ids of concepts to use\n     */\n    setClassifier(classifier : string, value : string|string[]) {\n        let arr = toArray(value);\n        this.setParameter(Parameters.CLASSIFIERS + \".\" + classifier, arr);\n    }\n\n    /**\n     * @param classifier - name of classifier constraint in use\n     * @return array of concept ids\n     */\n    getClassifier(classifier : string) : string[] {\n        return this.getParameter(Parameters.CLASSIFIERS + \".\" + classifier) || [];\n    }\n\n    /**\n     * Ex.\n     *  const { KGClassifiers, Query } from 'geoplatform.client';\n     *  let purposeId = '...',\n     *      functionIds = ['...','...'];\n     *  let query = new Query();\n     *  query.classifiers({\n     *       KGClassifiers.PURPOSE: purposeId,\n     *       KGClassifiers.FUNCTION: functionIds\n     *  });\n     *\n     * @param value - object defining classifiers\n     * @return Query instance\n     */\n    classifiers(value : any) : Query {\n        this.setClassifiers(value);\n        return this;\n    }\n\n    /**\n     * @param value - object defining classifiers\n     */\n    setClassifiers (value : any) {\n        const classes = Object.keys(Classifiers).map(k=>Classifiers[k]);\n        if(!value || typeof(value) !== 'object' || Array.isArray(value)) {\n            classes.forEach( classifier => {\n                this.clearParameter( Parameters.CLASSIFIERS + \".\" + classifier );\n            });\n            return;\n        }\n        Object.keys(value).forEach( classifier => {\n            if(~classes.indexOf(classifier)) {\n                this.setClassifier( classifier, value[classifier] );\n            }\n        });\n    }\n\n    /**\n     * @return classifiers used in the query\n     */\n    getClassifiers () : any {\n        let result = {};\n        Object.keys(Classifiers).map(k=>Classifiers[k]).forEach( classifier => {\n            result[classifier] = this.getClassifier(classifier);\n        });\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    modified(date : number|Date, beforeOrAfter : boolean) : Query {\n        this.setModified(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param date - date to compare against\n     * @param beforeOrAfter - flag specifying which boundary condition (true = before, false = after) flag specifying whether to trigger update automatically\n     */\n    setModified (date : number|Date, beforeOrAfter:boolean) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(Parameters.MODIFIED_BEFORE, null);\n            this.setParameter(Parameters.MODIFIED_AFTER, null);\n            return;\n        }\n\n        if(!(date instanceof Date))\n            date = new Date(date as number);\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? Parameters.MODIFIED_BEFORE : Parameters.MODIFIED_AFTER;       //property being set\n        let oppProp = dir ? Parameters.MODIFIED_AFTER : Parameters.MODIFIED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getModified () : Date {\n        let value = this.getParameter(Parameters.MODIFIED_BEFORE) ||\n            this.getParameter(Parameters.MODIFIED_AFTER);\n        if(value && typeof(value) === 'number') {\n            value = new Date(value);\n        }\n        return value;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    created(date : number|Date, beforeOrAfter:boolean) : Query {\n        this.setCreated(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param date - date to compare against\n     * @param beforeOrAfter - flag specifying which boundary condition (true = before, false = after) flag specifying whether to trigger update automatically\n     */\n    setCreated (date : number|Date, beforeOrAfter:boolean) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(Parameters.CREATED_BEFORE, null);\n            this.setParameter(Parameters.CREATED_AFTER, null);\n            return;\n        }\n\n        if(!(date instanceof Date))\n            date = new Date(date as number);\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? Parameters.CREATED_BEFORE : Parameters.CREATED_AFTER;       //property being set\n        let oppProp = dir ? Parameters.CREATED_AFTER : Parameters.CREATED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getCreated () : Date {\n        let value = this.getParameter(Parameters.CREATED_BEFORE) ||\n            this.getParameter(Parameters.CREATED_AFTER);\n        if(value && typeof(value) === 'number') {\n            value = new Date(value);\n        }\n        return value;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    begins(date : number|Date) : Query {\n        this.setBeginDate(date);\n        return this;\n    }\n\n    setBeginDate (date : number|Date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(Parameters.BEGINS, date);\n    }\n\n    getBeginDate () : Date {\n        let date = this.getParameter(Parameters.BEGINS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    ends(date : number|Date) : Query {\n        this.setEndDate(date);\n        return this;\n    }\n\n    setEndDate (date: number|Date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(Parameters.ENDS, date);\n    }\n\n    getEndDate () : Date {\n        let date = this.getParameter(Parameters.ENDS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    between(begin : number|Date, end : number|Date) : Query {\n        this.setBetween(begin, end);\n        return this;\n    }\n\n    setBetween(begin : number|Date, end : number|Date) {\n        this.begins(begin);\n        this.ends(end);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    resourceTypes(types: string|string[]) : Query {\n        this.setResourceTypes(types);\n        return this;\n    }\n\n    setResourceTypes(types: string|string[]) {\n        this.setParameter(Parameters.RESOURCE_TYPE, toArray(types));\n    }\n\n    getResourceTypes() : string[] {\n        return this.getParameter(Parameters.RESOURCE_TYPE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    facets(names : string|string[]) : Query {\n        this.setFacets(names);\n        return this;\n    }\n\n    /*\n     * @param names - names of facets\n     */\n    setFacets (names: string|string[]) {\n        this.setParameter(Parameters.FACETS, toArray(names));\n    }\n\n    getFacets() : string[] {\n        return this.getParameter(Parameters.FACETS);\n    }\n\n    /**\n     * @param name - name of facet to add\n     */\n    addFacet(name: string) {\n        let facets = this.getFacets() || [];\n        facets.push(name);\n        this.setFacets(facets);\n    }\n\n    /**\n     * @param name - name of facet to remove\n     */\n    removeFacet(name: string) {\n        let facets = this.getFacets() || [];\n        let idx = facets.indexOf(name);\n        if(idx>=0) {\n            facets.splice(idx, 1);\n            this.setFacets(facets);\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    fields(fields: string|string[]) : Query {\n        this.setFields(fields);\n        return this;\n    }\n\n    /**\n     * @param fields - list of field names to request for each search result\n     */\n    setFields (fields: string|string[]) {\n        this.setParameter(Parameters.FIELDS, toArray(fields));\n    }\n\n    getFields() : string[] {\n        return this.getParameter(Parameters.FIELDS);\n    }\n\n    /**\n     * @param field - name of field to remove\n     */\n    addField(field: string) {\n        let fields = this.getFields() || [];\n        fields.push(field);\n        this.setFields(fields);\n    }\n\n    /**\n     * @param field - name of field to remove\n     */\n    removeField(field: string) {\n        let fields = this.getFields() || [];\n        let idx = fields.indexOf(field);\n        if(idx>=0) {\n            fields.splice(idx, 1);\n            this.setFields(fields);\n        }\n    }\n\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param page - page of results to fetch\n     */\n    page (page: number) : Query {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page: number) {\n        if(isNaN(page) || page*1<0) return;\n        this.setParameter(Parameters.PAGE, page*1);\n    }\n\n    getPage() : number {\n        return this.getParameter(Parameters.PAGE);\n    }\n\n    nextPage() : void {\n        this.setPage(this.getPage()+1);\n    }\n\n    previousPage() : void {\n        this.setPage(this.getPage()-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param size - page size to request\n     */\n    pageSize (size: number) : Query {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size: number) {\n        if(isNaN(size) || size*1<0) return;\n        this.setParameter(Parameters.PAGE_SIZE, size*1);\n    }\n\n    getPageSize() : number {\n        return this.getParameter(Parameters.PAGE_SIZE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n    sort (sort: string, order?:string) : Query {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort: string, order?:string) {\n         order = order || 'desc';\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.setParameter(Parameters.SORT, sort);\n    }\n\n    getSort() : string {\n        return this.getParameter(Parameters.SORT);\n    }\n\n    getSortField() : string | null {\n        let value = this.getSort();\n        return value && value.length ? value.split(',')[0] : null;\n    }\n\n    getSortOrder() : string | null {\n        let value = this.getSort();\n        return value && value.length ? value.split(',')[1] : null;\n    }\n\n    /**\n     * @return list of key-value pairs of sort options\n     */\n    getSortOptions() : { value: string; label: string; }[] {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = JSON.parse(JSON.stringify(this.defaultQuery));\n    }\n}\n\nexport {\n    Query as default,\n    Query,\n    Fields,\n    Facets\n};\n","\nimport Query from './query';\n\nexport default function queryFactory() {\n    return new Query();\n}\n","\nvar Config : { [key:string] : any } = {\n\n    ualUrl: 'https://ual.geoplatform.gov',\n    //appId: '...',\n\n    configure: function(options : any) {\n        Object.assign(this, options);\n    }\n};\n\nexport default Config;\n","\n\nclass GPHttpClient {\n\n    protected token : any;\n    protected cookie : any;\n    protected timeout : number = 5000;\n\n    protected authCookieName = 'gpoauth-a';\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options ?: { [key:string] : any }) {\n        options = options || {};\n        this.setTimeout(options.timeout||30000);\n        this.setAuthToken(options.token);\n        this.setCookie(options.cookie);\n    }\n\n    setTimeout(timeout : number) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg : string|Function) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    getToken() : string {\n        if(this.token && typeof(this.token) === 'function') return this.token();\n        else return this.token || null;\n    }\n\n    setCookie(cookie) {\n        this.cookie = cookie;\n    }\n\n    getCookie() {\n        return this.cookie;\n    }\n\n    createRequestOpts(\n        // @ts-ignore\n        options : { [key:string] : any }\n    ) : any {\n        throw new Error(\"Must implement 'createRequestOpts' in a sub-class\");\n    }\n\n    execute(\n        // @ts-ignore\n        opts : any\n    ) : Promise<any> {\n        return Promise.reject(new Error(\"Must overrdie 'execute' in a sub-class\"));\n    }\n\n}\n\nexport default GPHttpClient;\n","\nimport axios from 'axios';\nimport GPError from '../shared/error';\nimport GPHttpClient from './client';\n\n\nclass XHRHttpClient extends GPHttpClient {\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options ?: { [key:string] : any }) {\n        super(options);\n    }\n\n\n    createRequestOpts(options : { [key:string] : any }) : any {\n\n        let opts : { [key:string] : any } = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true)\n            opts.responseType = 'json';\n\n        if(options.params) {\n            opts.params = options.params;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n            opts.contentType = 'application/json';\n        }\n\n        //set headers requested by user config\n        opts.headers = {};\n        if(options.headers) {\n            Object.assign(opts.headers, options.headers);\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers.Authorization = 'Bearer ' + token;\n                opts.withCredentials = true;\n            }\n        }\n        let cookie = this.getCookie();\n        if(cookie) opts.headers.Cookie = this.authCookieName + '=' + cookie;\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n\n    execute(opts : any) : Promise<any> {\n\n        if(typeof(axios) === 'undefined') {\n            throw new Error(\"Axios not found, check that you have included \" +\n                \"it as a dependency of the application or use a different \" +\n                \"HttpClient implementation\")\n        }\n\n        let promise = axios(opts)\n        .then( response => { return response.data; })\n        .catch( error => {\n            let err : GPError = new GPError(error.message);\n            if (error.response) {\n                err = new GPError(error.response.data);\n            }\n            throw err;\n        });\n        return promise;\n    }\n\n}\n\nexport default XHRHttpClient;\n","\nimport Config from '../shared/config';\nimport Query from '../shared/query';\nimport GPHttpClient from '../http/client';\n\n/**\n * BaseService\n * abstract service for working with the GeoPlatform API to\n * retrieve and manipulate items.\n *\n */\nclass BaseService {\n\n    protected apiBase ?: string;\n    protected baseUrl ?: string;\n    protected client : GPHttpClient;\n    protected _timeout : number = 30000;\n    protected logger : any;\n    protected httpMethods : string[] = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n    }\n\n    setUrl(baseUrl : string) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/items';\n    }\n\n    /**\n     * @param milliseconds - override environment variable timeout\n     */\n    setTimeout(milliseconds : number) {\n        this._timeout = milliseconds;\n    }\n\n    /**\n     * @param milliseconds - override environment variable timeout\n     */\n    timeout(milliseconds : number) : BaseService {\n        this.setTimeout(milliseconds);\n        return this;\n    }\n\n    /**\n     * @return GPHttpClient instance or null if one was not provided\n     */\n    getClient() {\n        return this.client;\n    }\n\n    createPromise ( arg: (resolve: (value?: any) => void, reject: (reason?: any) => void) => void ) : Promise<any> {\n        return new Promise<any>( arg );\n    }\n    createAndResolvePromise( value : any ) : Promise<any> {\n        return Promise.resolve(value);\n    }\n    createAndRejectPromise ( error : Error ) : Promise<any>{\n        return Promise.reject(error);\n    }\n\n    /**\n     * @param logger - log service\n     */\n    setLogger(logger : any) {\n        this.logger = logger;\n    }\n\n    /**\n     * @param e - error to log (if logger specified)\n     */\n    logError(e : string|Error) {\n        if(this.logger && this.logger.error) {\n            this.logger.error(e);\n        }\n    }\n\n    /**\n     * @param msg - message to log as debug\n     */\n    logDebug(msg : string) {\n        if(this.logger && this.logger.debug) {\n            this.logger.debug(msg);\n        }\n    }\n\n\n\n\n    /**\n     * @param method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param url - destination of xhr request\n     * @param params - object to be sent with request as query parameters\n     * @param data - object to be sent with request as body\n     * @param options - optional object defining request options\n     * @return request options for xhr\n     */\n    buildRequest (options : {[key:string]:any}) : {[key:string]:any} {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this._timeout || 30000;\n        let opts = this.createRequestOpts(options);\n        return opts;\n    }\n\n    createRequestOpts(options : {[key:string]:any}) : {[key:string]:any} {\n\n        if(typeof(options.options)==='object') {\n            let req = options.options;  //user supplied configuration\n            delete options.options;\n\n            if(req.params && options.params) {    //merge user params with ones needed by API calls\n                //Note: any user-supplied parameter of the same name as one used\n                // by the GP API call will be overwritten\n                Object.keys(options.params).forEach( param => {\n                    req.params[param] = options.params[param];\n                });\n                delete options.params;\n            }\n\n            Object.assign(req, options);\n            options = req;\n        }\n\n        let request = this.client.createRequestOpts(options);\n        this.logDebug(\"BaseService.createRequestOpts() - \" + JSON.stringify(request));\n        return request;\n    }\n\n    execute(opts : {[key:string]:any} ) : Promise<any> {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return this.createAndRejectPromise(e);\n        });\n    }\n\n}\n\n\nexport default BaseService;\n","\nimport { Item, SearchResults } from '../shared/models';\nimport Query from '../shared/query';\nimport GPHttpClient from '../http/client';\n\nimport BaseService from './base';\n\n/**\n * ItemService\n * service for working with the GeoPlatform API to\n * retrieve and manipulate items.\n *\n * Ex Searching Items\n *      let params = { q: 'test' };\n *      itemService.search(params).then(response=>{\n *          console.log(response.results.length + \" of \" + response.totalResults);\n *      }).catch(e=>{...});\n *\n * Ex Fetch Item:\n *      itemService.get(itemId).then(item=>{...}).catch(e=>{...});\n *\n * Ex Saving Item:\n *      itemService.save(item).then(item=>{...}).catch(e=>{...});\n *\n * Ex Deleting Item:\n *      itemService.remove(itemId).then(()=>{...}).catch(e=>{...});\n *\n * Ex Patching Item:\n *      itemService.patch(itemId,patch).then(item=>{...}).catch(e=>{...});\n *\n */\nclass ItemService extends BaseService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n\n    /**\n     * @param id - identifier of item to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    get (id : string, options ?: any) : Promise<Item> {\n\n        let url = this.baseUrl + '/' + id;\n        if(options && options.version) {\n            url += '/versions/' + options.version;\n            // this.logDebug(\"Client.get requesting version: \" + options.version);\n        }\n        return this.createAndResolvePromise( url )\n        .then( url => {\n            let opts = this.buildRequest({ method:\"GET\", url:url, options:options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.get() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param itemObj - item to create or update\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    save (itemObj : Item, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( itemObj )\n        .then( item => {\n\n            let method = 'POST',\n                url = this.baseUrl;\n            if(item.id) {\n                method = \"PUT\";\n                url += '/' + item.id;\n            } else {\n                //if item is being created and has no URI already defined\n                // attempt to create one using the API's method for doing so\n                // and then attempt the actual item creation\n                if(!item.uri) {\n                    return this.getUri(item, options)\n                    .then( uri => {\n                        item.uri = uri;\n                        let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n                        return this.execute(opts);\n                    });\n                }\n            }\n\n            let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`Error saving item: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.save() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param id - identifier of item to delete\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving true if successful or an error\n     */\n    remove (id : string, options ?: any) : Promise<boolean> {\n\n        return this.createAndResolvePromise( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:\"DELETE\", url: url, options: options\n            });\n            return this.execute(opts);\n        })\n        .then( () => true)\n        .catch(e => {\n            let err = new Error(`Error deleting item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.remove() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param id - identifier of item to patch\n     * @param patch - HTTP-PATCH compliant set of properties to patch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    patch (id : string, patch : any, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method: \"PATCH\", url: url, data: patch, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error patching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.patch() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param id - identifier of item to clone\n     * @param overrides - KVP of property-value overrides to apply to cloned instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving clone of Item or an error\n     */\n    clone (id : string, overrides : any, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( this.baseUrl + '/' + id + '/clone' )\n        .then( url => {\n            let opts = this.buildRequest({\n                method: \"POST\", url: url, data: overrides, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error cloning item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.clone() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param arg - either JS object of query parameters or Query instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    search (arg ?: any, options ?: any) : Promise<SearchResults> {\n\n        return this.createAndResolvePromise( arg )\n        .then( params => {\n            let ps = {};\n            if(params && typeof(params.getQuery) === 'function') ps = params.getQuery();\n            else if(typeof(params) === 'object') ps = params;\n            else ps = {};\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url: this.baseUrl,\n                params: ps,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error searching items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.search() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     *\n     * @param arg - URL to metadata document or File to upload\n     * @param format - metadata format of specified document\n     * @return Promise resolving GeoPlatform Item\n     */\n    import (arg : any, format : string, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( true )\n        .then( () => {\n            if(arg===null || arg === undefined) {\n                throw new Error(\"Must provide a valid URL or File\");\n            }\n            let isFile = typeof(arg) !== 'string';\n            let ro : { [key:string]:any } = {\n                method:\"POST\",\n                url: this.apiBase + '/api/import',\n                processData: true,  //for jQuery\n                formData: true,     //for Node (RequestJS)\n                options: options\n            };\n            if(isFile) {\n                ro.file = arg;\n                ro.data = { format: format };\n            } else {\n                ro.formData = false;    //must be false for data to not be multi-part formdata\n                ro.data = { url: arg, format: format };\n            }\n            if(options && options.overwrite) {\n                ro.data.overwrite = (!!options.overwrite)+'';\n                delete options.overwrite;\n            }\n            let opts = this.buildRequest(ro);\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`Error importing item: ${e.message||e}`);\n            Object.assign(err, e);\n            if(e.status === 409 || (e.message && ~e.message.indexOf('Item already exists') ))\n                Object.assign(err, {status: 409});\n            if(e.item)\n                Object.assign(err, { item : e.item });\n            this.logError('ItemService.import() - ' + (err.message||e));\n            throw err;\n        });\n    }\n\n\n\n    /**\n     * @param id - identifier of the item to export\n     * @param format - string mime type to export\n     * @return Promise resolving HTTP response object for enabling attachment downloading\n     */\n    export (id : string, format : string, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/export';\n            let opts = this.buildRequest({\n                method: \"GET\", url: url,\n                params: {format:format},\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let msg = e.message;\n            //https://github.com/GeoPlatform/client-api/issues/1\n            if(e.statusCode && e.statusCode===406 || e.statusCode==='406') {\n                msg = `Unsupported export format specified '${format}'`;\n            }\n            let err = new Error(`Error exporting item: ${msg}`);\n            Object.assign(err, e);\n            this.logError('ItemService.export() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param object - GP object definition to generate a URI for\n     * @param options - optional request options\n     * @return Promise resolving string URI\n     */\n    getUri (object : any, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( object )\n        .then( obj => {\n            if(!obj || !obj.type)\n                throw new Error(\"Must provide an object with a type property\");\n            let url = this.apiBase + '/api/utils/uri';\n            options = options || {};\n            options.responseType = 'text';  //to ensure plaintext is expected\n            let opts = this.buildRequest({\n                method: \"POST\", url: url, data: obj, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`Error getting URI for item: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.getUri() - ' + err.message);\n            throw err;\n        });\n\n    }\n\n\n    /**\n     * @param ids - list of identifiers to fetch objects for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving list of matching items or an error\n     */\n    getMultiple (ids : string[], options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( ids )\n        .then( identifiers => {\n\n            let method = 'POST',\n                url = this.apiBase + '/api/fetch';\n\n            let opts = this.buildRequest({method:method, url:url, data:identifiers, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.getMultiple() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param uris - list of URIs to retrieve objects for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving list containing uri-item association where exists\n     */\n    exists(uris : string[], options ?: any) : Promise<any> {\n        return this.createAndResolvePromise(uris)\n        .then( uris => {\n            let method = 'POST', url = this.apiBase + '/api/utils/exists';\n            let opts = this.buildRequest({method:method, url:url, data:uris, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error resolving items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.exists() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    like(item : any, options ?: any) : Promise<any> {\n        return this.createAndResolvePromise(item.id)\n        .then( id => {\n            let method = 'PUT', url = this.apiBase + '/api/items/' + id + '/likes';\n            let opts = this.buildRequest({method:method, url:url, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error liking item ${item.id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.like() - ' + err.message);\n            throw err;\n        });\n    }\n\n    view(item : any, options ?: any) : Promise<any> {\n        return this.createAndResolvePromise(item.id)\n        .then( id => {\n            let method = 'PUT', url = this.apiBase + '/api/items/' + id + '/views';\n            let opts = this.buildRequest({method:method, url:url, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error incrementing views for item ${item.id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.like() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param id - identifier of item to fetch associations for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving array of associated items of the item in question\n     */\n    associations (id : string, params : any, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/associations';\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url:url,\n                params: params || {},\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching associations for item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.associations() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param id - identifier of item to fetch version info for\n     * @param params - optional set of query parameters to constrain list of versions\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving array of available versions of the item\n     */\n    versions (id : string, params ?: any, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/versions';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params: params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching versions for item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.versions() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /*\n    getThumbnail ( id : string, options ?: any ) : Promise<any> {\n        return this.createAndResolvePromise( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/thumbnail';\n            let opts = this.buildRequest({\n                method: \"GET\", url: url,\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let msg = e.message;\n            let err = new Error(`Error getting thumbnail for item: ${msg}`);\n            Object.assign(err, e);\n            this.logError(`ItemService.getThumbnail() - ${msg}`);\n            throw err;\n        });\n    }\n\n    createThumbnail ( id : string, options ?: any ) : Promise<any> {\n        return this.createAndResolvePromise( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/thumbnail';\n            let opts = this.buildRequest({\n                method: \"POST\", url: url,\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let msg = e.message;\n            let err = new Error(`Error creating thumbnail for item: ${msg}`);\n            Object.assign(err, e);\n            this.logError(`ItemService.createThumbnail() - ${msg}`);\n            throw err;\n        });\n    }\n    */\n\n\n}\n\nexport default ItemService;\n","\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass DatasetService extends ItemService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/datasets';\n    }\n\n}\n\nexport default DatasetService;\n","\n\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass MapService extends ItemService {\n\n    constructor(url:string, httpClient:GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl:string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/maps';\n    }\n\n\n}\n\nexport default MapService;\n","\n\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass LayerService extends ItemService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/layers';\n    }\n\n    /**\n     * Fetch a style associated with a given GeoPlatform Layer asset. This may\n     * be the style for an Esri FeatureServer layer using the following:\n     *\n     *   .style( layerId, options);\n     *\n     * or a specific style definition for a non-Esri layer using the following call:\n     *\n     *   .style( layerId, styleId, options);\n     *\n     * @param id - GeoPlatform Layer identifier\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving style JSON object\n     */\n    style (id : string, ...args) : Promise<any> {\n        return Promise.resolve( id )\n        .then( (id) => {\n\n            let options = { params: null };\n            let url = this.baseUrl + '/' + id + '/style';\n\n            if(args[0] && typeof(args[0]) === 'string') { //style id parameter\n                url += 's/' + args[0];                    //\n                if(args[1]) options.params = args[1];            // ... plus options parameter\n\n            } else if(args[0] && typeof(args[0]) === 'object') { //options parameter\n                options.params = args[0];\n            }\n\n            let opts = this.buildRequest({ method:\"GET\", url:url, options:options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching style: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.style() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * Fetch the list of styles associated with a given GeoPlatform Layer asset\n     * @param id - GeoPlatform Layer identifier\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving style JSON object\n     */\n    styles ( id : string, options ?: any ) : Promise<any[]> {\n        return Promise.resolve( id )\n        .then( (id) => {\n            let url = this.baseUrl + '/' + id + '/styles';\n            let opts = this.buildRequest({ method:\"GET\", url:url, options:options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching style: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.style() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param id - GeoPlatform Layer identifier\n     * @param req identifying extent, x, y\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving feature JSON object\n     */\n    describe( id : string, req : any, options ?: any ) : Promise<any> {\n\n        return Promise.resolve( req )\n        .then( (req) => {\n\n            if(!req) {\n                throw new Error(\"Must provide describe parameters to use\");\n            }\n\n            let keys = ['bbox', 'height', 'width', 'x', 'y'];\n            let missing = keys.find(key => !req[key]);\n            if(missing) {\n                throw new Error(`Must specify ${missing} in describe req`);\n            }\n\n            let params = {\n                srs         : 'EPSG:4326',\n                bbox        : req.bbox,\n                height      : req.height,\n                width       : req.width,\n                info_format : 'text/xml',\n                x           : req.x,\n                y           : req.y,\n                i           : req.x, //WMS 1.3.0\n                j           : req.y  //WMS 1.3.0\n            };\n\n            let url = this.baseUrl + '/' + id + '/describe';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error describing layer feature: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.describe() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param id - GeoPlatform Layer identifier\n     * @param params describing layer request to validate\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving empty if successful or a message if failed\n     */\n    validate(id : string, params : any, options ?: any) : Promise<any> {\n\n        return Promise.resolve( params )\n        .then( params => {\n\n            if(!params) {\n                throw new Error(\"Must provide parameters to use in layer validation\");\n            }\n\n            let url = this.baseUrl + '/' + id + '/validate';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error validating layer request: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.describe() - ' + err.message);\n            throw err;\n        });\n    }\n\n}\n\nexport default LayerService;\n","\n\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport Query from '../shared/query';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Service service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate service objects.\n *\n * @see ItemService\n */\n\nclass ServiceService extends ItemService {\n\n    constructor(url:string, httpClient:GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl:string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/services';\n    }\n\n\n    /**\n     * Fetch metadata from the specified GeoPlatform Service's\n     * web-accessible implementation using either GetCapabilities\n     * or ESRI documentInfo.\n     * @param service - GeoPlatform Service object\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving service metadata\n     */\n    about( service : any, options ?: any ) : Promise<any> {\n\n        return Promise.resolve( service )\n        .then( svc => {\n            if(!svc)\n                throw new Error(\"Must provide service to get metadata about\");\n            let opts = this.buildRequest({\n                method:'POST', url:this.baseUrl + '/about', data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error describing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.about() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n\n    /**\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service types\n     */\n    types (options ?: any) : Promise<any> {\n\n        let query = new Query()\n        .types(ItemTypes.STANDARD)\n        .resourceTypes('ServiceType')\n        .pageSize(50)\n        .getQuery();\n\n        return Promise.resolve( query )\n        .then( (params) => {\n            let url = this.apiBase + '/api/items';\n            let opts = this.buildRequest({\n                method:'GET', url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response => response.results)\n        .catch(e => {\n            let err = new Error(`Error fetching service types: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.types() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param service - GP Service definition\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving imported service\n     */\n    import (service : any, options ?: any) : Promise<any> {\n\n        return Promise.resolve( service )\n        .then( svc => {\n            let url = this.baseUrl + '/import';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error importing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.import() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param id - identifier of GP service to harvest layers for\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service layers\n     */\n    harvest (id : string, options ?: any) : Promise<any> {\n\n        return Promise.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/harvest';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error harvesting layers from service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.harvest() - ' + err.message);\n            throw err;\n        });\n\n    }\n\n    /**\n     * @param id - identifier of GP service to live test\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service statistics\n     */\n    liveTest (id : string, options ?: any) : Promise<any> {\n\n        return Promise.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/test';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error testing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.liveTest() - '  + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param id - identifier of GP service to fetch statistics about\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service statistics\n     */\n    statistics (id : string, options ?: any) : Promise<any> {\n        return Promise.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/statistics';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error getting service statistics: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.statistics() - ' + err.message);\n            throw err;\n        });\n    }\n\n}\n\nexport default ServiceService;\n","\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass GalleryService extends ItemService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/galleries';\n    }\n\n    addItem (galleryId : string, itemObj : any, options ?: any) : Promise<any> {\n        return Promise.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + galleryId + '/items';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data: itemObj, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(\"Error adding item: \" + e.message);\n            Object.assign(err, e);\n            this.logError('GalleryService.addItem() - ' + err.message);\n            throw err;\n        });\n    }\n\n    removeItem( galleryId : string, itemId : any, options ?: any) : Promise<any> {\n        return Promise.resolve( this.baseUrl + '/' + galleryId + '/items/' + itemId )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:'DELETE', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .then( () =>true)\n        .catch(e => {\n            let err = new Error(\"Error adding item: \" + e.message);\n            Object.assign(err, e);\n            this.logError('GalleryService.addItem() - '+ err.message);\n            throw err;\n        });\n    }\n\n}\n\nexport default GalleryService;\n","\nimport Config from '../shared/config';\nimport GPHttpClient from '../http/client';\nimport BaseService from './base';\n\n\nclass UtilsService extends BaseService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n        this.setTimeout(30000);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl;\n    }\n\n    /**\n     * @param property - optional capa property to specifically request\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving capabilities object\n     */\n    capabilities (property : string|null, query : any, options ?: any) : Promise<any> {\n\n        let url = this.baseUrl + '/api/capabilities';\n        if(property)\n            url += '/' + property;\n\n        return this.createAndResolvePromise( url )\n        .then( (url) => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query||{}, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error getting capabilities: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.capabilities() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param file\n     * @param format\n     * @param options\n     * @return Promise\n     */\n    parseFile (file : any, format : string, options ?: any) : Promise<any> {\n\n        var url = this.baseUrl + '/api/utils/parse';\n\n        return this.createAndResolvePromise( url )\n        .then( url => {\n\n            let opts = this.buildRequest({\n                method:\"POST\",  url:url,\n                data: { format: format },\n                file: file,\n                formData: true,   //NodeJS (RequestJS)\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then( response => response )\n        .catch(e => {\n            let err = new Error(`Error parsing file: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.parseFile() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * Geolocate the specified argument to a set of candidate locations.\n     * @param value - text string to geolocate (name or lat,lng)\n     * @param options - optional config to send with http request\n     * @return Promise resolving an array of geocoded results\n     */\n    locate(value : any, options ?: any) : Promise<any> {\n\n        var url = this.baseUrl + '/api/utils/gazetteer';\n        return this.createAndResolvePromise(url)\n        .then( url => {\n            let opts = this.buildRequest({\n                method: 'GET',\n                url: url,\n                params: { location: value },\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then(response => response)\n        .catch(e => {\n            let err = new Error(`Error resolving location: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.locate() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * Upload a file to store within the GeoPlatform for association with\n     * one or more portfolio Assets.\n     *\n     * @param file File to store\n     * @param format string media type of the file being stored\n     * @param options optional\n     * @return Promise resolving metadata for stored content\n     */\n    store (file : any, format : string, options ?: any) : Promise<any> {\n\n        var url = this.baseUrl + '/api/store';\n\n        return this.createAndResolvePromise( url )\n        .then( url => {\n\n            let opts = this.buildRequest({\n                method:\"POST\",\n                url:url,\n                data: { format: format },\n                file: file,\n                formData: true,   //NodeJS (RequestJS)\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then( response => response )\n        .catch(e => {\n            let err = new Error(`Error uploading file for storage: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.store() - ' + err.message);\n            throw err;\n        });\n    }\n\n}\n\nexport default UtilsService;\n","\n\nimport BaseService from './base';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Association service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate association objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass AssociationService extends BaseService {\n\n    constructor(url:string, httpClient:GPHttpClient) {\n        super(url, httpClient);\n    }\n\n\n    /**\n     * @param itemId - identifier of item to fetch associations for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving array of associated items of the item in question\n     */\n    search (itemId : string, params ?: any, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( itemId )\n        .then( id => {\n\n            if(!id) throw new Error(\"Must specify a GeoPlatform resource for which to search associations\");\n\n            let url = this.baseUrl + '/' + id + '/associations';\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url:url,\n                params: params || {},\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching associations for item ${itemId}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError(`AssociationService.search(${itemId}) - ${err.message}`);\n            throw err;\n        });\n    }\n\n    /**\n     * @param itemId - identifier of item\n     * @param associationId - identifier of association to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving association\n     */\n    get (itemId : string, associationId : string, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( itemId )\n        .then( itemId => {\n\n            if(!itemId || !associationId)\n                throw new Error(\"Must specify both the GeoPlatform resource id and its association's id\");\n\n            let url = this.baseUrl + '/' + itemId + '/associations/' + associationId;\n            let opts = this.buildRequest({ method:\"GET\", url:url, options: options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching association for item ${itemId}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError(`AssociationService.get(${itemId},${associationId}) - ${err.message}`);\n            throw err;\n        });\n    }\n\n    /**\n     * @param itemId - identifier of item\n     * @param associationId - identifier of association to remove\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving empty\n     */\n    remove (itemId : string, associationId : string, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( itemId )\n        .then( itemId => {\n\n            if(!itemId || !associationId)\n                throw new Error(\"Must specify both the GeoPlatform resource id and its association's id\");\n\n            let url = this.baseUrl + '/' + itemId + '/associations/' + associationId;\n            let opts = this.buildRequest({ method:\"DELETE\", url:url, options: options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error removing association for item ${itemId}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError(`AssociationService.remove(${itemId},${associationId}) - ${err.message}`);\n            throw err;\n        });\n    }\n\n}\n\nexport default AssociationService;\n","\nimport { Item, SearchResults } from '../shared/models';\nimport ItemTypes from '../shared/types';\nimport Config from '../shared/config';\nimport GPHttpClient from '../http/client';\nimport BaseService from \"./base\";\n\nclass AgolQuery {\n\n    private _query : { [key:string]:any };\n\n    constructor(options ?: { [key:string]:any }) {\n        this._query = {\n            page: 0,\n            size: 10\n        };\n\n        if(options) {\n            for(let p in options) {\n                if(options.hasOwnProperty(p)) {\n                    this._query[ p as string ] = options[p] as any;\n                }\n            }\n        }\n    }\n\n    getQuery() : { [key:string]:any } {\n        let result : { [key:string]:any } = {};\n        for(let prop in this._query) {\n            let value = this._query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n    // ---------------------------------------\n\n    q(value : string) : AgolQuery { this.setQ(value); return this; }\n    setQ(value : string) { this._query.q = value; }\n    getQ() : string { return this._query.q; }\n\n    // ---------------------------------------\n\n    types(value : string|string[]) : AgolQuery {\n        this.setTypes(value); return this;\n    }\n    setTypes(value : string|string[]) {\n        let val : string;\n        if(value && Array.isArray(value))\n            val = (value as Array<string>).join(',');\n        else val = value as string;\n        this._query.types = val;\n    }\n    getTypes() : string[] { return this._query.types; }\n\n    // ---------------------------------------\n\n    groups(value : string|string[]) : AgolQuery {\n        this.setGroups(value); return this;\n    }\n    setGroups(value : string|string[]) {\n        let val : string;\n        if(value && Array.isArray(value))\n            val = (value as Array<string>).join(',');\n        else val = value as string;\n        this._query.groups = val;\n    }\n    getGroups() : string[] { return this._query.groups; }\n\n    // ---------------------------------------\n\n    orgs(value : string|string[]) : AgolQuery {\n        this.setOrgs(value); return this;\n    }\n    setOrgs(value : string|string[]) {\n        let val : string;\n        if(value && Array.isArray(value))\n            val = (value as Array<string>).join(',');\n        else val = value as string;\n        this._query.orgs = val;\n    }\n    getOrgs() : string[] { return this._query.orgs; }\n\n    // ---------------------------------------\n\n    extent(value : any) : AgolQuery { this.setExtent(value); return this; }\n    setExtent(value : any) { this._query.bbox = value; }\n    getExtent() : any { return this._query.bbox; }\n\n    // ---------------------------------------\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n    sort (sort : string, order : string) : AgolQuery {\n        this.setSort(sort, order); return this;\n    }\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort : string, order : string) {\n         order = order || 'desc';\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this._query.sort = sort;\n    }\n    getSort() : string { return this._query.sort; }\n    getSortField() : string { return this._query.sort.split(',')[0]; }\n    getSortOrder() : boolean { return this._query.sort.split(',')[1] === 'asc'; }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param page - page of results to fetch\n     */\n    page (page : number) : AgolQuery {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page : number) {\n        if(isNaN(page) || page*1<0) return;\n        this._query.page = page*1;\n    }\n\n    getPage() : number {\n        return this._query.page;\n    }\n\n    nextPage() {\n        this.setPage(this._query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this._query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param size - page size to request\n     */\n    pageSize (size : number) : AgolQuery {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size : number) {\n        if(isNaN(size) || size*1<0) return;\n        this._query.size = size*1;\n    }\n\n    getPageSize() : number {\n        return this._query.size;\n    }\n\n}\n\n\nclass AgolService extends BaseService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n        this.setTimeout(30000);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/agol';\n    }\n\n    // -----------------------------------------------------------------------\n    // AGOL ORGS METHODS\n\n\n    /**\n     * @param id - identifier of AGOL organization to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    getOrg (id : string, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/orgs/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getOrg() - Error fetching org ${id}: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n    /**\n     * @param arg - either JS object of query parameters or Query instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    searchOrgs (arg : AgolQuery, options ?: any) : Promise<SearchResults> {\n\n        return this.createAndResolvePromise( arg )\n        .then( params => {\n\n            let ps = params.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url: this.baseUrl + '/orgs',\n                params: ps,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchOrgs() - Error searching orgs: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL GROUPS METHODS\n\n\n    /**\n     * @param id - identifier of AGOL group to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    getGroup (id : string, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/groups/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getGroup() - Error fetching group ${id}: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param arg - either JS object of query parameters or AgolQuery instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    searchGroups (arg : AgolQuery, options ?: any) : Promise<SearchResults> {\n\n        return this.createAndResolvePromise( arg )\n        .then( params => {\n\n            let ps = params.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url: this.baseUrl + '/groups',\n                params: ps,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchGroups() - Error searching groups: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL ITEMS METHODS\n\n    /**\n     * @param id - identifier of AGOL item to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    getItem (id : string, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( id )\n        .then( (id : string) => {\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url:this.baseUrl + '/items/' + id,\n                options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getItem() - Error fetching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param arg - either JS object of query parameters or AgolQuery instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    searchItems (arg : AgolQuery, options ?: any) : Promise<SearchResults> {\n\n        return this.createAndResolvePromise( arg )\n        .then( params => {\n\n            let ps = params.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url: this.baseUrl + '/items',\n                params: ps,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchItems() - Error searching items: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n\n    /* --------------------------- */\n\n    getAgolId (obj : any) : string|null {\n        if(!obj) return null;\n\n        if(!obj.type) return null;\n\n        if(ItemTypes.ORGANIZATION === obj.type || 'Group' === obj.type) {\n            return obj.id;\n        }\n\n        if(!obj.identifiers || !obj.identifiers.length) return null;\n        let ids = obj.identifiers.filter( (id:string) => ~id.indexOf('agol:'));\n        if(!ids.length) return null;\n        return ids[0].replace('agol:','');\n    }\n\n}\n\nexport {\n    AgolService as default,\n    AgolService,\n    AgolQuery\n};\n","\n\nimport ItemTypes from '../shared/types';\n\n\nconst Categories : {[key:string]:string} = {\n    UNKNOWN:         'Unknown Category',\n    DATASET:         'Dataset',\n    SERVICE:         'Service',\n    LAYER:           'Layer',\n    MAP:             'Map',\n    GALLERY:         'Gallery',\n    COMMUNITY:       'Community',\n    CONTACT:         'Contact',\n    ORGANIZATION:    'Organization',\n    CONCEPT:         'Concept',\n    CONCEPT_SCHEME:  'Concept Scheme',\n    APPLICATION:     'Application',\n    TOPIC:           'Topic',\n    WEBSITE:         'WebSite',\n    IMAGE_PRODUCT:   'Image Product',\n    RIGHTS_STATEMENT:'RightsStatement',\n    KNOWLEDGE_GRAPH: 'Knowledge Graph',\n    USER:            'User',\n    COMMUNITY_POST:  'Community Post',   //post within a community portal\n    COMMUNITY_PAGE:  'Community Page',   //page within a community portal\n    APP_PAGE:        'Application Page', //page/view within a client application\n};\n\nconst Events : {[key:string]:string} = {\n    ACCESSED:   'Accessed',  //related item was accessed using API\n    DISPLAYED:  'Displayed', //related item was displayed in a native form (map)\n    VIEWED:     'Viewed',    //related item was viewed in general form (metadata)\n    CREATED:    'Created',\n    EDITED:     'Edited',\n    DELETED:    'Deleted',\n    CLONED:     'Cloned',\n    ADDED:      'Added',    //item was added to another (ie, layer on map)\n    REMOVED:    'Removed',  //item was removed from another (ie, item from gallery)\n    EXPORTED:   'Exported',\n    IMPORTED:   'Imported'\n};\n\n\nfunction getCategory(type : string) : string {\n    let result = Categories.UNKNOWN;\n    if(type) {\n        let cats : string[] = Object.keys(Categories).map((k:string)=>Categories[k]);\n        //if existing category was specified\n        if(~cats.indexOf(type))\n            return type;\n        //if an ItemType with prefix was specified (strip off prefix)\n        else if(~type.indexOf(':')) {\n            let cat = type.split(':')[1];\n            if(~cats.indexOf(cat))\n                return cat;\n        }\n    }\n    return result;\n}\n\n\n\n/**\n *\n */\nclass Event {\n\n    private category : string;\n    private type : string;\n    private item : any = null;\n    private related : any = null;\n\n    constructor(category : string, type : string, item ?: any, related ?: any) {\n        if(!category || ! type) {\n            throw new Error(\"TrackingService Event - Must specific an event \" +\n            \"category and event type when constructing events\");\n        }\n        this.category = category;\n        this.type = type;\n        this.setItem(item);\n        this.setRelated(related);\n    }\n    getCategory() : string { return this.category; }\n    getType() : string { return this.type; }\n    getItem() : any { return this.item; }\n    setItem(item : any) { this.item = item ? (item.id || item) : null; }\n    getRelated() : any { return this.related; }\n    setRelated(related : any) {\n        this.related = related ? (related.id || related) : null;\n    }\n}\n\n\n\n/**\n * @param eventType - type of event being created\n * @param item - GeoPlatform Item instance\n * @return list of event objects\n */\nfunction TrackingEventFactory(eventType : string, item : any) : Event[] {\n    let result : Event[] = [] as Event[];\n    if(eventType && item && item.type) {\n        if(ItemTypes.MAP === item.type) {\n            result.push( new Event(Categories.MAP, eventType, item) );\n            if(Events.DISPLAYED === eventType) {\n\n                item.layers.forEach( (layerState : any) => {\n                    if(layerState.layer) {\n                        let layerEvents = TrackingEventFactory(eventType, layerState.layer)\n                            .filter(e=>e!==null);\n                        if(layerEvents && layerEvents.length) {\n                            result = result.concat(layerEvents);\n                        }\n                    }\n                });\n\n                if(item.baseLayer) {\n                    let baseEvents = TrackingEventFactory(eventType, item.baseLayer)\n                        .filter(e=>e!==null);\n                    if(baseEvents && baseEvents.length)\n                        result = result.concat( baseEvents );\n                }\n            }\n\n        } else if(ItemTypes.LAYER === item.type) {\n            result.push( new Event(Categories.LAYER, eventType, item) );\n            if(Events.DISPLAYED === eventType && item.services && item.services.length) {\n                result.push( new Event(Categories.SERVICE, eventType, item.services[0]) );\n            }\n        } else {\n            let category = getCategory(item.type);\n            result.push( new Event(category, eventType, item) );\n        }\n    }\n    // else {\n    //     if(!event) console.log(\"Missing event\");\n    //     if(!item) console.log(\"Missing item\");\n    //     if(!item.type) console.log(\"Missing item type\");\n    // }\n    return result;\n}\n\n\n\n\n\n/**\n *\n */\nclass DefaultTrackingServiceProvider {\n    constructor() {}\n    logEvent(\n        category : string,\n        event : string,\n        item ?: any,\n        // @ts-ignore\n        related ?: any\n    ) {\n        console.log( \"Event (\" + category + \") - \" + event + \" : \" + item);\n    }\n    logPageView( view, data ) {\n        console.log(\"Page View \" + view + (data ? \" : \" + JSON.stringify(data) : '') );\n    }\n    logSearch(params : string, resultCount : string|number) {\n        console.log( \"Query : \" + JSON.stringify(params) + \" found \" + resultCount+ \" matches\");\n    }\n}\n\n\n\n\n\n\n/**\n * TrackingService\n *\n * Service for logging events related to usage of the GeoPlatform and its data\n *\n * Example:\n *\n *   import { TrackingService, EventCategories, EventTypes } from 'geoplatform.client';\n *\n *   let tracker = new TrackingService();\n *   tracker.setProvider( ... );\n *   tracker.event( Event.of(EventCategories.MAP, EventTypes.VIEWED, map) );\n *\n * Multi-event example:\n *\n *   import {\n *      TrackingService, TrackingEventCategories, TrackingEventTypes, TrackingEventFactory\n *   } from 'geoplatform.client';\n *\n *   let tracker = new TrackingService();\n *   tracker.setProvider( ... );\n *\n *   let events = [\n *       TrackingEvent.of( TrackingCategories.MAP, TrackingEventTypes.VIEWED, this.map )\n *       TrackingEvent.of( TrackingCategories.LAYER, TrackingEventTypes.VIEWED, this.map.baseLayer )\n *   ];\n *   tracker.event(events);\n *\n *   //OR use the event factory:\n *   tracker.event( TrackingEventFactory(EventTypes.VIEWED, this.map) );\n */\nclass TrackingService {\n\n    private provider : any = null;\n\n    constructor(options ?: any) {\n        if(options && typeof(options) === 'object')\n            Object.assign(this, options);\n\n        if(!this.provider)\n            this.setProvider(new DefaultTrackingServiceProvider());\n    }\n\n    /**\n     * @param provider -\n     */\n    setProvider(provider : any) {\n        if(provider)\n            this.provider = provider;\n    }\n\n    /**\n     * @param event - event to log\n     * @return TrackingService\n     */\n    event( event : Event ) : TrackingService {\n        this.logEvent( event );\n        return this;\n    }\n\n    /**\n     * @param event - event to log\n     */\n    logEvent( event : Event|Event[]) {\n        if(!this.provider || !this.provider.logEvent || !event) return;\n\n        if(Array.isArray(event)) {\n            let events : Event[] = event as Event[];\n            events.forEach( (evt : Event) => this.logEvent(evt) );\n\n        } else {\n            let evt : Event = event as Event;\n            try {\n                this.provider.logEvent(\n                    evt.getCategory(),\n                    evt.getType(),\n                    evt.getItem(),\n                    evt.getRelated()\n                );\n            } catch(e) {\n                console.log(\n                    \"TrackingService.logEvent() - Error logging event (\" +\n                    evt.getCategory() + \", \" + evt.getType() + \", \" +\n                    evt.getItem() + \") - \" + e.message\n                );\n            }\n        }\n    }\n\n\n    /**\n     * @param view - name of the view being activated\n     * @param data - additional context to supply for the event\n     * @return TrackingService\n     * @deprecated use svc.event( new Event(EventCategories.APP_PAGE, EventTypes.VIEWED, pageId) )\n     */\n    pageView( view : string, data : any) {\n        this.logPageView(view, data);\n        return this;\n    }\n\n    /**\n     * @param view - name of the view being activated\n     * @param data - additional context to supply for the event\n     * @deprecated use svc.logEvent( new Event(EventCategories.APP_PAGE, EventTypes.VIEWED, pageId) )\n     */\n    logPageView(\n        view : string,\n        // @ts-ignore\n        data ?: any\n    ) {\n        if(this.provider && this.provider.logPageView) {\n            this.provider.logPageView(view, data);\n        } else {\n            this.logEvent( new Event(Categories.APP_PAGE, Events.VIEWED, view) );\n        }\n    }\n\n    /**\n     * @param params\n     * @param resultCount\n     */\n    logSearch (params : any, resultCount : string|number) {\n        if(this.provider.logSearch)\n            this.provider.logSearch(params, resultCount);\n    }\n\n}\n\n\nexport {\n    Event as TrackingEvent,\n    TrackingService,\n    Categories as TrackingCategories,\n    Events as TrackingTypes,\n    TrackingEventFactory\n};\n","\nimport Config from '../shared/config';\nimport KGQuery from '../shared/kg-query';\nimport GPHttpClient from '../http/client';\n\nimport BaseService from './base';\n\n\n\nclass KGService extends BaseService {\n\n    // @ts-ignore\n    // private apiBase : string;\n    // @ts-ignore\n    // private baseUrl : string;\n    // private client : GPHttpClient;\n    // private timeout : number = 30000;\n    // private httpMethods : string[] = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/recommender';\n    }\n\n    /**\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving recommended concepts as search results\n     */\n    suggest (query : KGQuery, options ?: any) : Promise<any> {\n\n        let url = this.baseUrl + '/suggest';\n        return this._search(url, query, options)\n        .catch(e => {\n            this.logError('KGService.suggest() - ' + e.message);\n            let err = new Error(`Error suggesting concepts: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving concept types as search results\n     */\n    types (query : KGQuery, options ?: any) : Promise<any> {\n        let url = this.baseUrl + '/types';\n        return this._search(url, query, options)\n        .catch(e => {\n            this.logError('KGService.types() - ' + e.message);\n            let err = new Error(`Error searching types: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n\n    /**\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving concept sources as search results\n     */\n    sources (query : KGQuery, options ?: any) : Promise<any> {\n        let url = this.baseUrl + '/sources';\n        return this._search(url, query, options)\n        .catch(e => {\n            this.logError('KGService.sources() - ' + e.message);\n            let err = new Error(`Error searching sources: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n\n    /**\n     * internal method used by exposed methods\n     */\n    _search (url : string, query : KGQuery, options ?: any) : Promise<any> {\n        return this.createAndResolvePromise( url )\n        .then( (url) => {\n            let q : { [key:string]:any } = query.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:q, options:options\n            });\n            return this.execute(opts);\n        });\n    }\n\n\n\n    // /**\n    //  * @param method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n    //  * @param url - destination of xhr request\n    //  * @param params - object to be sent with request as query parameters\n    //  * @param data - object to be sent with request as body\n    //  * @param options - optional object defining request options\n    //  * @return request options for xhr\n    //  */\n    // buildRequest (options : {[key:string]:any}) : {[key:string]:any} {\n    //\n    //     if(this.httpMethods.indexOf(options.method)<0)\n    //         throw new Error(`Unsupported HTTP method ${options.method}`);\n    //\n    //     if(!options.url)\n    //         throw new Error(`Must specify a URL for HTTP requests`);\n    //\n    //     options.timeout = this.timeout || Config.timeout || 30000;\n    //\n    //     return this.createRequestOpts(options);\n    // }\n    //\n    // createRequestOpts(options : {[key:string]:any}) : {[key:string]:any} {\n    //     return this.client.createRequestOpts(options);\n    // }\n    //\n    // execute(opts : {[key:string]:any}) : Promise<any> {\n    //     return this.client.execute(opts)\n    //     .catch(e => {\n    //         if(e === null || typeof(e) === 'undefined') {\n    //             e = new Error(\"KGService.execute() - Request failed but didn't return an \" +\n    //             \"error. This is most likely because the request timed out\");\n    //         }\n    //         throw e;\n    //     });\n    // }\n\n}\n\nexport default KGService;\n","\nimport GPHttpClient from '../http/client';\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport LayerService from './layer';\nimport ServiceService from './service';\nimport GalleryService from './gallery';\nimport DatasetService from './dataset';\nimport MapService from './map';\n\n/**\n * @param arg - string type or object with type property\n * @param baseUrl - base endpoint of GeoPlatform API\n * @return ItemService\n */\nconst ServiceFactory = function(arg : any, baseUrl : string, httpClient : GPHttpClient) : any {\n    let type = (typeof(arg) === 'string') ?\n        arg : (arg && arg.type ? arg.type : null);\n    if(!type) throw new Error(\"Must provide a type or object with a type specified\");\n    if(!baseUrl) throw new Error(\"Must provide a base url\");\n    if(!httpClient) throw new Error(\"Must provide an http client to use to make requests\");\n    switch(type) {\n        case ItemTypes.LAYER:   return new LayerService(  baseUrl, httpClient);\n        case ItemTypes.SERVICE: return new ServiceService(baseUrl, httpClient);\n        case ItemTypes.MAP:     return new MapService(    baseUrl, httpClient);\n        case ItemTypes.GALLERY: return new GalleryService(baseUrl, httpClient);\n        case ItemTypes.DATASET: return new DatasetService(baseUrl, httpClient);\n        default:                return new ItemService(   baseUrl, httpClient);\n    }\n};\n\nexport default ServiceFactory;\n","\n/*\n    Version of the library exposed to consumers.\n    Long-term this value should be auto-set to be whatever is set in package.json\n */\nexport const ClientVersion = \"0.3.0\";\n\nimport Polyfills from \"./shared/polyfills\";\nPolyfills();\n\nexport * from './shared/index';\nexport * from './http/index';\nexport * from './services/index';\n"],"names":["tslib_1.__extends","QueryParameters","SORT_OPTIONS_DEFAULT"],"mappings":";;;;;;;;IAAA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA,IAAI,aAAa,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;IACzC,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;IACpF,QAAQ,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACnF,IAAI,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;;AAEF,IAAO,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IAChC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,IAAI,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IAC3C,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;;AAED,IAAO,IAAI,QAAQ,GAAG,WAAW;IACjC,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAE;IACrD,QAAQ,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7D,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7B,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,MAAK;IACL,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,EAAC;;AAED,IAAO,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;IAC7B,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;IACf,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IACvF,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;IACvE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChF,YAAY,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1F,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,SAAS;IACT,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;;AAED,IAAO,SAAS,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IAC1D,IAAI,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IACjI,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACnI,SAAS,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IACtJ,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;;AAED,IAAO,SAAS,OAAO,CAAC,UAAU,EAAE,SAAS,EAAE;IAC/C,IAAI,OAAO,UAAU,MAAM,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE;IACzE,CAAC;;AAED,IAAO,SAAS,UAAU,CAAC,WAAW,EAAE,aAAa,EAAE;IACvD,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;;AAED,IAAO,SAAS,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE;IAC7D,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE;IAC/D,QAAQ,SAAS,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;IACnG,QAAQ,SAAS,QAAQ,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;IACtG,QAAQ,SAAS,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;IACvJ,QAAQ,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9E,KAAK,CAAC,CAAC;IACP,CAAC;;AAED,IAAO,SAAS,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE;IAC3C,IAAI,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACrH,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,WAAW,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7J,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;IACtE,IAAI,SAAS,IAAI,CAAC,EAAE,EAAE;IACtB,QAAQ,IAAI,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;IACtE,QAAQ,OAAO,CAAC,EAAE,IAAI;IACtB,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACzK,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;IACpD,YAAY,QAAQ,EAAE,CAAC,CAAC,CAAC;IACzB,gBAAgB,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM;IAC9C,gBAAgB,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IACxE,gBAAgB,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;IACjE,gBAAgB,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS;IACjE,gBAAgB;IAChB,oBAAoB,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE;IAChI,oBAAoB,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;IAC1G,oBAAoB,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE;IACzF,oBAAoB,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE;IACvF,oBAAoB,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IAC1C,oBAAoB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS;IAC3C,aAAa;IACb,YAAY,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IAClE,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACzF,KAAK;IACL,CAAC;;AAED,IAAO,SAAS,YAAY,CAAC,CAAC,EAAE,OAAO,EAAE;IACzC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC;;AAED,IAAO,SAAS,QAAQ,CAAC,CAAC,EAAE;IAC5B,IAAI,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACtE,IAAI,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,OAAO;IACX,QAAQ,IAAI,EAAE,YAAY;IAC1B,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/C,YAAY,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;IACpD,SAAS;IACT,KAAK,CAAC;IACN,CAAC;;AAED,IAAO,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;IAC7B,IAAI,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC/D,IAAI,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACrB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACrC,IAAI,IAAI;IACR,QAAQ,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACnF,KAAK;IACL,IAAI,OAAO,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;IAC3C,YAAY;IACZ,QAAQ,IAAI;IACZ,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7D,SAAS;IACT,gBAAgB,EAAE,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;IACzC,KAAK;IACL,IAAI,OAAO,EAAE,CAAC;IACd,CAAC;;AAED,IAAO,SAAS,QAAQ,GAAG;IAC3B,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;IACtD,QAAQ,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAI,OAAO,EAAE,CAAC;IACd,CAAC;;AAED,IAAO,SAAS,cAAc,GAAG;IACjC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACxF,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;IACpD,QAAQ,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;IACzE,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,IAAI,OAAO,CAAC,CAAC;IACb,CAAC,CAAC;;AAEF,IAAO,SAAS,OAAO,CAAC,CAAC,EAAE;IAC3B,IAAI,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;;AAED,IAAO,SAAS,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE;IACjE,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;IAC3F,IAAI,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;IAClE,IAAI,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1H,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IAC9I,IAAI,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE;IACtF,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IAC5H,IAAI,SAAS,OAAO,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;IACtD,IAAI,SAAS,MAAM,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;IACtD,IAAI,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtF,CAAC;;AAED,IAAO,SAAS,gBAAgB,CAAC,CAAC,EAAE;IACpC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;IACb,IAAI,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAChJ,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACnJ,CAAC;;AAED,IAAO,SAAS,aAAa,CAAC,CAAC,EAAE;IACjC,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;IAC3F,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACvC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACrN,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IACpK,IAAI,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC;;AAED,IAAO,SAAS,oBAAoB,CAAC,MAAM,EAAE,GAAG,EAAE;IAClD,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE,EAAE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE;IACnH,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;;AAEF,IAAO,SAAS,YAAY,CAAC,GAAG,EAAE;IAClC,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE,OAAO,GAAG,CAAC;IAC1C,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;IACpB,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACnG,IAAI,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;IACzB,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;AAED,IAAO,SAAS,eAAe,CAAC,GAAG,EAAE;IACrC,IAAI,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;IAC5D,CAAC;;IClMD,SAAS,KAAK;QACV,IAAI,OAAO,MAAM,CAAC,MAAM,IAAI,UAAU,EAAE;;YAEtC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE;gBACtC,KAAK,EAAE,SAAS,MAAM,CAAC,MAAY,EAAE,OAAe;oBAElD,IAAI,MAAM,IAAI,IAAI,EAAE;wBAClB,MAAM,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAC;qBACnE;oBAED,IAAG,OAAO,EAAE,GAAG;oBACf,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;oBAExB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;wBACrD,IAAI,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;wBAElC,IAAI,UAAU,IAAI,IAAI,EAAE;4BACtB,KAAK,IAAI,OAAO,IAAI,UAAU,EAAE;;gCAE9B,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,EAAE;oCAC7D,EAAE,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;iCACnC;6BACF;yBACF;qBACF;oBACD,OAAO,EAAE,CAAC;iBACX;gBACD,QAAQ,EAAE,IAAI;gBACd,YAAY,EAAE,IAAI;aACnB,CAAC,CAAC;SACJ;KACJ;IAGD,SAAwB,SAAS;QAC7B,KAAK,EAAE,CAAC;KACX;IAAA,CAAC;;ACpCF;QAAsBA,2BAAK;QAIvB,iBAAY,OAAgB;YAA5B,YACI,kBAAM,OAAO,CAAC,SAEjB;YALM,YAAM,GAAW,GAAG,CAAC;YACrB,gBAAU,GAAY,GAAG,CAAC;YAG7B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACrB;QACM,0BAAQ,GAAf,UAAgB,KAAY,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE;QAC9C,2BAAS,GAAhB,UAAiB,KAAY,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,EAAE;QAC7E,cAAC;KAVD,CAAsB,KAAK,GAU1B;;QCTK,SAAS,GAAG;QACd,OAAO,EAAW,cAAc;QAChC,OAAO,EAAW,cAAc;QAChC,KAAK,EAAa,OAAO;QACzB,GAAG,EAAe,KAAK;QACvB,OAAO,EAAW,SAAS;QAC3B,SAAS,EAAS,WAAW;QAC7B,WAAW,EAAO,aAAa;QAC/B,KAAK,EAAa,OAAO;QACzB,OAAO,EAAW,SAAS;QAC3B,YAAY,EAAM,kBAAkB;QACpC,OAAO,EAAW,aAAa;QAC/B,MAAM,EAAY,aAAa;QAC/B,OAAO,EAAW,cAAc;QAChC,cAAc,EAAI,oBAAoB;QACtC,QAAQ,EAAU,cAAc;QAChC,gBAAgB,EAAE,qBAAqB;KAC1C,CAAC;AAEF,QAAM,cAAc,GAAG,EAAE,CAAC;IAC1B,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,GAAY,SAAS,CAAC;IACvD,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,GAAY,SAAS,CAAC;IACvD,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,GAAc,OAAO,CAAC;IACrD,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,GAAgB,KAAK,CAAC;IACnD,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,GAAY,SAAS,CAAC;IACvD,cAAc,CAAC,SAAS,CAAC,SAAS,CAAC,GAAU,WAAW,CAAC;IACzD,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,GAAQ,aAAa,CAAC;IAC3D,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,GAAc,OAAO,CAAC;IACrD,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,GAAY,SAAS,CAAC;IACvD,cAAc,CAAC,SAAS,CAAC,YAAY,CAAC,GAAO,cAAc,CAAC;IAC5D,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,GAAY,SAAS,CAAC;IACvD,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,GAAa,QAAQ,CAAC;IACtD,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,GAAY,SAAS,CAAC;IACvD,cAAc,CAAC,SAAS,CAAC,cAAc,CAAC,GAAK,gBAAgB,CAAC;IAC9D,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAW,UAAU,CAAC;IACxD,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC,GAAG,kBAAkB,CAAC;;IChChE,IAAM,QAAQ,GAAG,4BAA4B,CAAC;IAE9C,IAAM,UAAU,GAAG;QACf,mDAAmD;QACnD,iDAAiD;QACjD,+CAA+C;QAC/C,gDAAgD;KACnD,CAAC;IAKF,SAAS,eAAe,CAAE,GAAS;QAC/B,IAAG,GAAG,KAAK,IAAI;YAAE,OAAO,EAAE,CAAC;QAC3B,IAAG,QAAO,GAAG,CAAC,KAAK,QAAQ;YACvB,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,CAAC;aAC1C,IAAG,QAAO,GAAG,CAAC,KAAK,QAAQ,EAAE;YAC9B,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAI,IAAI,IAAI,IAAI,GAAG,EAAE;gBACjB,IAAG,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;oBACzB,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;oBACtB,IAAG,KAAK,KAAK,IAAI,IAAI,QAAO,KAAK,CAAC,KAAK,WAAW,EAAE;;wBAEhD,MAAM,IAAI,CAAC,KAAK,GAAC,EAAE,EAAE,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,CAAC;qBACxD;iBACJ;aACJ;YACD,OAAO,MAAM,CAAC;SACjB;QACD,OAAO,EAAE,CAAC;KACb;;;;;;;IAQD,SAAS,cAAc,CAAC,OAAa;QACjC,yBAAyB,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,IAAI,CAAC;QAC5C,IAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;;;QAIpC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAEtC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,EAAC,EAAE,CAAC,CAAC;QAEtC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,sBAAsB,EAAC,EAAE,CAAC;aAClC,OAAO,CAAC,8BAA8B,EAAC,EAAE,CAAC;aAC1C,OAAO,CAAC,qBAAqB,EAAC,EAAE,CAAC;aACjC,OAAO,CAAC,8BAA8B,EAAE,EAAE,CAAC;aAC3C,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC;aACpC,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC;aACpC,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC;aACpC,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE3C,IAAI,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;QACjC,IAAI,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,QAAQ,EAAE;YACtC,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;SACxC;QACD,OAAO,GAAG,CAAC;KACd;;;;;;IAQD,SAAS,yBAAyB,CAAC,OAAa;QAE5C,IAAG,CAAC,OAAO;YAAE,OAAO;QACpB,IAAI,IAAI,GAAG,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,UAAU,CAAC;QACrD,IAAG,CAAC,IAAI;YAAE,OAAO;;QAGjB,IAAI,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAG;YAEpC,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,SAAS,CAAC;YAC7C,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;YAC9D,IAAG,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;;;;gBAI9B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;gBAE3C,IAAG,OAAO,CAAC,IAAI;oBAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBACrC,IAAG,OAAO,CAAC,SAAS;oBAAE,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;aAClD;SACJ;KACJ;aAYc,UAAU,IAAa,EAAE,OAAkB;QAClD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;KAClC,OAEQ,UAAS,MAAY,EAAE,KAAgB;QAC5C,IAAG,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI;YAAE,OAAO,IAAI,CAAC;QACxC,IAAI,QAAO,KAAK,CAAC,KAAK,UAAU,EAAG;YAC/B,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACxE;QACD,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAG,CAAC,OAAO;YAAE,OAAO,IAAI,CAAC;QACzB,OAAO,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KACjC;;;;IAhBL,IAAM,UAAU,GAAG;QAEf,SAAS,EAAG,EAAE;QAEd,QAAQ,IAEP;QAED,MAAM,IAQL;KACJ,CAAC;IAKF,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,UAAS,OAAa,EAAE,GAAc;QACzE,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC,SAAS,IAAE,OAAO,CAAC,UAAU,IAAE,EAAE;aACnD,GAAG,CAAE,UAAA,GAAG,IAAM,OAAO,GAAG,CAAC,KAAK,IAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrD,IAAI,GAAG,GAAS,eAAe,CAAC;YAC5B,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,GAAG,EAAE,OAAO;SACf,CAAC,CAAC;QACH,OAAO,QAAQ,GAAG,cAAc,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAC/C,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,UAAS,OAAa,EAAE,GAAc;QACzE,IAAI,GAAG,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,GAAG,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;QAC/B,OAAO,QAAQ,GAAG,cAAc,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAC/C,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,UAAS,KAAW,EAAE,GAAc;QAErE,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,QAAQ,GAAG,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,QAAQ,CAAC;QAClD,IAAG,QAAQ,IAAI,QAAQ,CAAC,MAAM;YAC1B,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;QAC7D,IAAI,MAAM,GAAG,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC;QACjD,IAAI,OAAO,GAAG,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC;;;;QAMpC,IAAI,IAAI,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;QACrC,IAAG,CAAC,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;;QAG7B,IAAI,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;QAChC,OAAO,QAAQ,GAAG,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAE7C,CAAC,CAAC;;;;;;IAOH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE,UAAS,GAAS,EAAE,GAAc;QACjE,IAAI,MAAM,GAAG,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,UAAU,IAAI,EAAE,CAAC;QACnD,IAAI,WAAW,GAAG,CAAC,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,UAAU,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QACrE,IAAI,GAAG,GAAG,eAAe,CAAC,EAAC,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,WAAW,EAAC,CAAC,CAAC;QACxF,OAAO,QAAQ,GAAG,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAC3C,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,UAAS,OAAa,EAAE,GAAc;QACzE,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;QAC3D,IAAI,GAAG,GAAG,eAAe,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QAClE,OAAO,QAAQ,GAAG,cAAc,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAC/C,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,UAAS,SAAe,EAAE,GAAc;QAC7E,IAAI,GAAG,GAAG,eAAe,CAAC,EAAC,KAAK,EAAE,SAAS,CAAC,KAAK,EAAC,CAAC,CAAC;QACpD,OAAO,QAAQ,GAAG,gBAAgB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KACjD,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,UAAS,GAAS,EAAE,GAAc;QAC1E,IAAI,GAAG,GAAG,eAAe,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,OAAO,QAAQ,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KACpD,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,UAAS,MAAY,EAAE,GAAc;QACvE,IAAI,GAAG,GAAG,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvC,OAAO,QAAQ,GAAG,aAAa,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAC9C,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,UAAS,KAAW,EAAE,GAAc;QACvE,IAAI,GAAG,GAAS,EAAE,CAAC;QACnB,IAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ;YAC5B,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC;QAC9C,IAAG,KAAK,CAAC,GAAG;YACR,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACxB,IAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,mBAAmB,CAAC;YAC1C,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAC9D,IAAG,KAAK,CAAC,aAAa;YAClB,GAAG,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QAC5C,GAAG,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;QAC3B,OAAO,QAAQ,GAAG,cAAc,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAC/C,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,UAAS,MAAY,EAAE,GAAc;QACxE,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC;QAC9C,IAAI,WAAW,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC;QACnE,IAAI,SAAS,GAAG,eAAe,CAAC,WAAW,CAAC,CAAC;QAC7C,IAAI,GAAG,GAAG,eAAe,CAAE,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,SAAS,CAAE,CAAC;QAC9D,OAAO,QAAQ,GAAG,yBAAyB,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KACjF,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,UAAS,MAAY,EAAE,GAAc;QAC/E,IAAI,GAAG,GAAG,eAAe,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;QAC5D,OAAO,QAAQ,GAAG,yBAAyB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAC1D,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,UAAS,MAAY,EAAE,GAAc;QAC5E,IAAG,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK;YAAE,OAAO,IAAI,CAAC;QACzC,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,UAAU,IAAI,EAAE,CAAC;QACzD,IAAI,GAAG,GAAG,eAAe,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,OAAO,QAAQ,GAAG,kBAAkB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KACnD,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,UAAS,MAAY,EAAE,GAAc;QACtE,IAAG,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK;YAAE,OAAO,IAAI,CAAC;QACzC,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,UAAU,IAAI,EAAE,CAAC;QACzD,IAAI,GAAG,GAAG,eAAe,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjE,OAAO,QAAQ,GAAG,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAC7C,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,UAAS,IAAU,EAAE,GAAc;QACtE,IAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,IAAI,CAAC;QAC3C,IAAI,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,QAAQ,GAAG,cAAc,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAC/C,CAAC,CAAC;IAIH,SAAS,SAAS,CAAC,KAAK;QACpB,IAAI,QAAO,KAAK,CAAC,KAAK,UAAU,EAAG;YAC/B,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACxE;QACD,OAAO,UAAS,MAAM;YAClB,OAAO,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC3C,CAAC;KACL;;AC5PD,qBAAe;QACX,eAAe,EAAI,iBAAiB;QACpC,MAAM,EAAa,eAAe;QAClC,WAAW,EAAQ,aAAa;QAChC,OAAO,EAAY,SAAS;QAC5B,cAAc,EAAK,aAAa;QAChC,aAAa,EAAM,aAAa;QAChC,UAAU,EAAS,WAAW;QAC9B,OAAO,EAAY,YAAY;QAC/B,cAAc,EAAK,eAAe;QAClC,IAAI,EAAe,aAAa;QAChC,MAAM,EAAa,QAAQ;QAC3B,WAAW,EAAQ,aAAa;QAChC,QAAQ,EAAW,UAAU;QAC7B,gBAAgB,EAAG,gBAAgB;QACnC,QAAQ,EAAW,UAAU;QAC7B,eAAe,EAAI,cAAc;QACjC,cAAc,EAAK,cAAc;QACjC,aAAa,EAAM,cAAc;QACjC,gBAAgB,EAAG,iBAAiB;QACpC,cAAc,EAAK,eAAe;QAClC,WAAW,EAAQ,aAAa;QAChC,cAAc,EAAK,gBAAgB;QACnC,YAAY,EAAO,cAAc;QACjC,KAAK,EAAc,GAAG;QACtB,UAAU,EAAS,WAAW;QAC9B,aAAa,EAAM,cAAc;QACjC,WAAW,EAAQ,YAAY;QAC/B,UAAU,EAAS,WAAW;QAC9B,MAAM,EAAa,QAAQ;QAC3B,aAAa,EAAM,gBAAgB;QACnC,SAAS,EAAU,UAAU;QAC7B,YAAY,EAAO,aAAa;QAChC,UAAU,EAAS,WAAW;QAC9B,SAAS,EAAU,UAAU;QAC7B,YAAY,EAAO,aAAa;QAChC,UAAU,EAAS,WAAW;QAC9B,KAAK,EAAc,MAAM;QACzB,GAAG,EAAgB,KAAK;QACxB,UAAU,EAAS,WAAW;QAC9B,aAAa,EAAM,cAAc;QACjC,WAAW,EAAQ,YAAY;QAC/B,UAAU,EAAS,YAAY;QAC/B,aAAa,EAAM,cAAc;QACjC,OAAO,EAAY,SAAS;QAC5B,YAAY,EAAO,aAAa;QAChC,OAAO,EAAY,SAAS;;QAG5B,WAAW,EAAQ,aAAa;QAChC,eAAe,EAAI,iBAAiB;QACpC,eAAe,EAAI,iBAAiB;QACpC,MAAM,EAAa,QAAQ;QAC3B,SAAS,EAAU,WAAW;QAC9B,KAAK,EAAc,OAAO;QAC1B,SAAS,EAAU,WAAW;QAC9B,SAAS,EAAU,WAAW;QAC9B,KAAK,EAAc,OAAO;QAC1B,SAAS,EAAU,WAAW;QAC9B,SAAS,EAAU,WAAW;QAC9B,KAAK,EAAc,OAAO;QAC1B,SAAS,EAAU,WAAW;QAC9B,SAAS,EAAU,WAAW;;QAG9B,IAAI,EAAe,MAAM;QACzB,UAAU,EAAS,WAAW;QAC9B,UAAU,EAAS,WAAW;QAC9B,YAAY,EAAO,aAAa;QAChC,SAAS,EAAU,UAAU;QAC7B,OAAO,EAAY,SAAS;QAC5B,SAAS,EAAU,UAAU;QAC7B,YAAY,EAAO,aAAa;;QAGhC,MAAM,EAAa,eAAe;QAClC,MAAM,EAAa,QAAQ;QAC3B,IAAI,EAAe,MAAM;QACzB,IAAI,EAAe,MAAM;QACzB,SAAS,EAAU,MAAM;;QAGzB,SAAS,EAAU,KAAK;KAC3B,CAAC;;IC/EF,IAAM,oBAAoB,GAAuC;QAC7D,EAAE,KAAK,EAAC,WAAW,EAAQ,KAAK,EAAE,YAAY,EAAe;QAC7D,EAAE,KAAK,EAAC,YAAY,EAAO,KAAK,EAAE,YAAY,EAAe;QAC7D,EAAE,KAAK,EAAC,UAAU,EAAS,KAAK,EAAE,YAAY,EAAe;QAC7D,EAAE,KAAK,EAAC,WAAW,EAAQ,KAAK,EAAE,YAAY,EAAe;QAC7D,EAAE,KAAK,EAAC,eAAe,EAAI,KAAK,EAAE,wBAAwB,EAAG;QAC7D,EAAE,KAAK,EAAC,cAAc,EAAK,KAAK,EAAE,yBAAyB,EAAE;QAC7D,EAAE,KAAK,EAAC,aAAa,EAAM,KAAK,EAAE,WAAW,EAAgB;KAChE,CAAC;AAGF;QAKI,iBAAa,OAAmB;YAE5B,IAAI,CAAC,YAAY,GAAG;gBAChB,IAAI,EAAE,CAAC;gBACP,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,eAAe;aACxB,CAAC;YAEF,IAAI,CAAC,KAAK,GAAG;gBACT,IAAI,EAAE,CAAC;gBACP,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,eAAe;aACxB,CAAC;YAEF,IAAG,OAAO,EAAE;gBACR,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;aACjC;SACJ;QAGD,0BAAQ,GAAR;YACI,IAAI,MAAM,GAAc,EAAE,CAAC;YAC3B,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBACxB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAG,KAAK,KAAK,IAAI,IAAI,QAAO,KAAK,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;oBACrD,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC3B;gBACD,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;aACxB;YACD,OAAO,MAAM,CAAC;SACjB;;QAMD,2BAAS,GAAT,UAAU,IAAa,EAAE,KAAU;YAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;QAED,8BAAY,GAAZ,UAAc,IAAa,EAAE,KAAW;YACpC,IAAG,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS;gBACpC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;gBAExB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;SAChC;QAED,8BAAY,GAAZ,UAAc,GAAY;YACtB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC1B;QAED,iCAAe,GAAf,UAAiB,GAAc;YAC3B,KAAI,IAAI,CAAC,IAAI,GAAG,EAAE;gBACd,IAAG,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;oBACtB,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBAChC;aACJ;SACJ;;QAMD,mBAAC,GAAD,UAAE,IAAa;YACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChB,OAAO,IAAI,CAAC;SACf;;;;QAKD,sBAAI,GAAJ,UAAM,IAAa;YACf,IAAI,CAAC,YAAY,CAACC,UAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAClD;QAED,sBAAI,GAAJ;YACI,OAAO,IAAI,CAAC,YAAY,CAACA,UAAe,CAAC,KAAK,CAAC,CAAC;SACnD;;;;;QASD,6BAAW,GAAX,UAAY,KAAuB;YAC/B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;SACf;;;;QAKD,gCAAc,GAAd,UAAgB,KAAuB;YACnC,IAAG,CAAC,KAAK;gBAAE,OAAO;YAClB,IAAG,QAAO,KAAK,CAAC,KAAK,QAAQ;gBAAE,KAAK,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,YAAY,CAACA,UAAe,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACnD;;;;QAKD,gCAAc,GAAd;YACI,OAAO,IAAI,CAAC,YAAY,CAACA,UAAe,CAAC,KAAK,CAAC,CAAC;SACnD;;;;;;;;;QAaD,uBAAK,GAAL,UAAM,QAA0B;YAC5B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;;;;;;;;QASD,0BAAQ,GAAR,UAAU,QAA0B;YAChC,IAAG,CAAC,QAAQ;gBAAE,OAAO;YACrB,IAAG,QAAO,QAAQ,CAAC,KAAK,QAAQ;gBAAE,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;YACxD,IAAI,CAAC,YAAY,CAACA,UAAe,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SAC1D;;;;;;;;QASD,0BAAQ,GAAR;YACI,OAAO,IAAI,CAAC,YAAY,CAACA,UAAe,CAAC,SAAS,CAAC,CAAC;SACvD;;;;;QASD,sBAAI,GAAJ,UAAM,IAAa;YACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;SACf;QAED,yBAAO,GAAP,UAAQ,IAAa;YACjB,IAAG,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,GAAC,CAAC,GAAC,CAAC;gBAAE,OAAO;YACnC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,GAAC,CAAC,CAAC;SAC5B;QAED,yBAAO,GAAP;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;SAC1B;QAED,0BAAQ,GAAR;YACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAC,CAAC,CAAC,CAAC;SACnC;QAED,8BAAY,GAAZ;YACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAC,CAAC,CAAC,CAAC;SACnC;;;;;QASD,0BAAQ,GAAR,UAAU,IAAY;YAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;QAED,6BAAW,GAAX,UAAa,IAAa;YACtB,IAAG,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,GAAC,CAAC,GAAC,CAAC;gBAAE,OAAO;YACnC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,GAAC,CAAC,CAAC;SAC5B;QAED,6BAAW,GAAX;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;SAC1B;;;;;;QAUD,sBAAI,GAAJ,UAAM,IAAa,EAAE,KAAe;YAChC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1B,OAAO,IAAI,CAAC;SACf;;;;;QAMA,yBAAO,GAAP,UAAQ,IAAa,EAAE,KAAc;YACjC,KAAK,GAAG,KAAK,IAAI,MAAM,CAAC;YACxB,IAAG,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC;gBAC3B,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;SAC3B;QAED,yBAAO,GAAP;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;SAC1B;QAED,8BAAY,GAAZ;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACxC;QAED,8BAAY,GAAZ;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC;SAClD;;;;QAKD,gCAAc,GAAd;YACI,OAAO,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACxC;;;;;QASD,uBAAK,GAAL;YACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;SAClC;QACL,cAAC;KAAA,IAAA;;AC9QD,sBAAgB;QACZ,OAAO,EAAe,SAAS;QAC/B,QAAQ,EAAc,UAAU;QAChC,aAAa,EAAS,cAAc;QACpC,eAAe,EAAO,gBAAgB;QACtC,eAAe,EAAO,gBAAgB;QACtC,iBAAiB,EAAK,kBAAkB;QACxC,SAAS,EAAa,WAAW;QACjC,QAAQ,EAAc,UAAU;QAChC,KAAK,EAAiB,OAAO;QAC7B,QAAQ,EAAc,UAAU;KACnC,CAAC;;QCRI,MAAM,GAAiB;QACzB,aAAa,EAAS,QAAQ;QAC9B,gBAAgB,EAAM,iBAAiB;QACvC,WAAW,EAAW,aAAa;QACnC,WAAW,EAAW,aAAa;QACnC,cAAc,EAAQ,QAAQ;QAC9B,QAAQ,EAAc,UAAU;QAChC,OAAO,EAAe,SAAS;QAC/B,UAAU,EAAY,WAAW;QACjC,QAAQ,EAAc,UAAU;QAChC,WAAW,EAAW,aAAa;QACnC,aAAa,EAAS,eAAe;QACrC,MAAM,EAAgB,QAAQ;QAC9B,aAAa,EAAS,OAAO;QAC7B,IAAI,EAAkB,MAAM;QAC5B,WAAW,EAAW,aAAa;QACnC,QAAQ,EAAc,UAAU;QAChC,KAAK,EAAiB,OAAO;QAC7B,gBAAgB,EAAM,gBAAgB;QACtC,MAAM,EAAgB,QAAQ;QAC9B,UAAU,EAAY,WAAW;QACjC,UAAU,EAAY,WAAW;QACjC,MAAM,EAAgB,QAAQ;QAC9B,QAAQ,EAAc,UAAU;QAChC,YAAY,EAAU,aAAa;QACnC,UAAU,EAAY,YAAY;QAClC,cAAc,EAAQ,eAAe;QACrC,YAAY,EAAU,aAAa;QACnC,QAAQ,EAAc,UAAU;QAChC,OAAO,EAAe,SAAS;QAC/B,UAAU,EAAY,YAAY;QAClC,MAAM,EAAgB,QAAQ;QAC9B,UAAU,EAAY,WAAW;QACjC,QAAQ,EAAc,UAAU;QAChC,MAAM,EAAgB,QAAQ;QAC9B,SAAS,EAAa,WAAW;QACjC,MAAM,EAAgB,QAAQ;QAC9B,OAAO,EAAe,QAAQ;QAC9B,UAAU,EAAY,YAAY;QAClC,YAAY,EAAU,aAAa;KACtC,CAAC;IAEF,IAAM,cAAc,GAAc;QAC9B,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAU;QAClD,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW;KACvD,CAAC;;AAIF,QAAM,MAAM,GAAiB;QACzB,gBAAgB,EAAM,iBAAiB;QACvC,eAAe,EAAO,SAAS;QAC/B,UAAU,EAAY,WAAW;QACjC,IAAI,EAAkB,MAAM;QAC5B,WAAW,EAAW,aAAa;QACnC,UAAU,EAAY,WAAW;QACjC,UAAU,EAAY,WAAW;QACjC,KAAK,EAAiB,OAAO;QAC7B,MAAM,EAAgB,QAAQ;QAC9B,UAAU,EAAY,YAAY;QAClC,QAAQ,EAAc,UAAU;QAChC,WAAW,EAAW,aAAa;QACnC,aAAa,EAAS,cAAc;QACpC,KAAK,EAAiB,OAAO;QAC7B,MAAM,EAAgB,QAAQ;QAC9B,MAAM,EAAgB,QAAQ;QAC9B,MAAM,EAAgB,QAAQ;QAC9B,KAAK,EAAiB,MAAM;QAC5B,OAAO,EAAe,QAAQ;QAC9B,KAAK,EAAiB,OAAO;QAC7B,UAAU,EAAY,YAAY;KACrC,CAAC;IAEF,IAAM,cAAc,GAAc;QAC9B,MAAM,CAAC,KAAK;QACZ,MAAM,CAAC,UAAU;QACjB,MAAM,CAAC,aAAa;QACpB,MAAM,CAAC,eAAe;QACtB,MAAM,CAAC,UAAU;QACjB,MAAM,CAAC,UAAU;KACpB,CAAC;;;;;;;IASF,IAAM,YAAY,GAAiB,EAAE,CAAC;IACtC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,GAAa,UAAU,CAAC,KAAK,CAAC;IACxD,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,GAAY,UAAU,CAAC,SAAS,CAAC;IAC5D,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,GAAY,UAAU,CAAC,SAAS,CAAC;IAC5D,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,GAAQ,UAAU,CAAC,aAAa,CAAC;IAChE,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAU,UAAU,CAAC,WAAW,CAAC;IAC9D,YAAY,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC;IAC7D,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,GAAW,UAAU,CAAC,UAAU,CAAC;;IAO7D,IAAMC,sBAAoB,GAAyC;QAC/D,EAAE,KAAK,EAAC,WAAW,EAAQ,KAAK,EAAE,YAAY,EAAe;QAC7D,EAAE,KAAK,EAAC,YAAY,EAAO,KAAK,EAAE,YAAY,EAAe;QAC7D,EAAE,KAAK,EAAC,UAAU,EAAS,KAAK,EAAE,YAAY,EAAe;QAC7D,EAAE,KAAK,EAAC,WAAW,EAAQ,KAAK,EAAE,YAAY,EAAe;QAC7D,EAAE,KAAK,EAAC,eAAe,EAAI,KAAK,EAAE,wBAAwB,EAAG;QAC7D,EAAE,KAAK,EAAC,cAAc,EAAK,KAAK,EAAE,yBAAyB,EAAE;QAC7D,EAAE,KAAK,EAAC,aAAa,EAAM,KAAK,EAAE,WAAW,EAAgB;KAChE,CAAC;IAGF,IAAM,UAAU,GAAG,+DAA+D,CAAC;IAGnF,SAAS,OAAO,CAAC,KAAW;QACxB,IAAI,MAAM,GAAG,KAAK,CAAC;;QAEnB,IAAG,MAAM,KAAK,IAAI,IAAI,QAAO,MAAM,CAAC,IAAI,CAAC,KAAK,WAAW;YAAE,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC;;QAE7E,IAAG,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM;YAAE,MAAM,GAAG,IAAI,CAAC;QACpD,OAAO,MAAM,CAAC;KACjB;;;;;;;AAUD;;;;QAQI,eAAY,OAAmB;YAC3B,IAAI,CAAC,YAAY,GAAG,EAAG,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC;YACxD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,eAAe,CAAC;YAChE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1E,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1E,IAAG,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAC5B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACnD,OAAO,OAAO,CAAC,QAAQ,CAAC;aAC3B;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC3D,IAAG,OAAO,EAAE;gBACR,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;aACjC;SACJ;;;;QAMD,wBAAQ,GAAR;YACI,IAAI,MAAM,GAAc,EAAE,CAAC;YAC3B,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBACxB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAG,KAAK,KAAK,IAAI,IAAI,QAAO,KAAK,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;oBACrD,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC3B;gBACD,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;aACxB;YACD,OAAO,MAAM,CAAC;SACjB;;;;QAKD,qBAAK,GAAL;YACI,IAAI,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAClD,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7B,OAAO,MAAM,CAAC;SACjB;;;;;;;QAUD,yBAAS,GAAT,UAAU,IAAa,EAAE,KAAW;YAChC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;;;;;QAMD,4BAAY,GAAZ,UAAc,IAAa,EAAE,KAAU;YACnC,IAAG,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS;iBACnC,QAAO,KAAK,CAAC,IAAI,CAAC,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBACrD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;gBAExB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;SAChC;;;;;QAMD,4BAAY,GAAZ,UAAc,GAAY;YACtB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC1B;;;;QAKD,8BAAc,GAAd,UAAe,IAAa;YACxB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC3B;;;;QAKD,+BAAe,GAAf,UAAiB,GAAc;YAC3B,KAAI,IAAI,CAAC,IAAI,GAAG,EAAE;gBACd,IAAG,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;oBACtB,IAAI,CAAC,YAAY,CAAC,CAAW,EAAE,GAAG,CAAC,CAAC,CAAQ,CAAC,CAAC;iBACjD;aACJ;SACJ;;;;;;QAOD,iCAAiB,GAAjB,UAAmB,KAAa,EAAE,KAAa;YAC3C,IAAI,KAAK,GAAY,YAAY,CAAC,KAAK,CAAC,CAAC;YACzC,IAAG,CAAC,KAAK,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,uCAAuC;oBAC/C,0CAA0C,GAAG,KAAK,GAAG,WAAW;oBAChE,uDAAuD,CAAC,CAAC;aAChE;YACD,IAAI,CAAC,YAAY,CAAC,KAAK,IAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SAC1C;;;;;;QASD,iBAAC,GAAD,UAAE,IAAa,IAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,EAAE;;QAG1D,oBAAI,GAAJ,UAAM,IAAa,IAAW,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE;;QAE1E,oBAAI,GAAJ,cAAkB,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAW,CAAC,EAAE;;QAMzE,wBAAQ,GAAR,UAAS,IAAsB;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;;;;QAKD,2BAAW,GAAX,UAAa,IAAsB;YAC/B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;SACzD;QAED,2BAAW,GAAX;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACjD;;QAMD,mBAAG,GAAH,UAAK,GAAY;YACb,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,IAAI,CAAC;SACf;QAED,sBAAM,GAAN,UAAO,GAAY;YACf,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SAC1C;QAED,sBAAM,GAAN;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SAC5C;;QAMD,qBAAK,GAAL,UAAM,KAAuB;YACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC;SACf;;;;QAKD,wBAAQ,GAAR,UAAU,KAAuB;YAC7B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SACvD;QAED,wBAAQ,GAAR;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC9C;;QAMD,yBAAS,GAAT,UAAU,IAAa;YACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;;QAGD,4BAAY,GAAZ,UAAc,IAAa;YACvB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SAClD;;QAGD,4BAAY,GAAZ;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACnD;;QAMD,8BAAc,GAAd,UAAe,IAAa;YACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC;SACf;;QAGD,iCAAiB,GAAjB,UAAmB,IAAY;YAC3B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;SACxD;;QAGD,iCAAiB,GAAjB;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;SACzD;;;;;;;;;;;;QAgBD,sBAAM,GAAN,UAAO,MAAuB,EAAE,SAAiB;YAC7C,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YAClC,OAAO,IAAI,CAAC;SACf;;;;;;;;;QAWD,yBAAS,GAAT,UAAW,MAAsB,EAAE,SAAiB;;YAGhD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAE/C,IAAI,KAAK,GAAG,SAAS,IAAI,UAAU,CAAC,SAAS,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;SAC7C;QAED,yBAAS,GAAT;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC;gBAC1C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC;gBAC1C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAChD;;;;;;;;;;;;QAeD,sBAAM,GAAN,UAAO,MAAsB,EAAE,SAAmB;YAC9C,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YAClC,OAAO,IAAI,CAAC;SACf;;;;;;;;;QAWD,yBAAS,GAAT,UAAW,MAAsB,EAAE,SAAmB;;YAGlD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAE/C,IAAI,KAAK,GAAG,SAAS,IAAI,UAAU,CAAC,SAAS,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;SAC7C;QAED,yBAAS,GAAT;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC;gBAC1C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC;gBAC1C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAChD;;;;;;;;;;QAcD,0BAAU,GAAV,UAAW,UAA0B,EAAE,SAAiB;YACpD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;YAC1C,OAAO,IAAI,CAAC;SACf;;;;;;;;QASD,6BAAa,GAAb,UAAe,UAA0B,EAAE,SAAiB;;YAGxD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAEnD,IAAI,KAAK,GAAG,SAAS,IAAI,UAAU,CAAC,aAAa,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SACjD;QAED,6BAAa,GAAb;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,gBAAgB,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;SACpD;;;;;;;;;;QAcD,wBAAQ,GAAR,UAAS,QAAwB,EAAE,SAAiB;YAChD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;YACtC,OAAO,IAAI,CAAC;SACf;;;;;;;;QASD,2BAAW,GAAX,UAAa,QAAwB,EAAE,SAAiB;;YAGpD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAEjD,IAAI,KAAK,GAAG,SAAS,IAAI,UAAU,CAAC,WAAW,CAAC;YAChD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC/C;QAED,2BAAW,GAAX;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC;gBAC5C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC;gBAC5C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SAClD;;;;;;;;;;;;QAgBD,sBAAM,GAAN,UAAO,GAAmB,EAAE,SAAiB;YACzC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;;;;;;;;;;QAWD,yBAAS,GAAT,UAAW,GAAmB,EAAE,SAAiB;;YAG7C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAEhD,IAAI,KAAK,GAAG,SAAS,IAAI,UAAU,CAAC,UAAU,CAAC;YAC/C,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1C;QAED,yBAAS,GAAT;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC;gBAC3C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC;gBAC3C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SACjD;;;;;;;;;;;;QAgBD,uBAAO,GAAP,UAAQ,OAAuB,EAAE,SAAiB;YAC9C,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YACpC,OAAO,IAAI,CAAC;SACf;;;;;;;;;;QAWD,0BAAU,GAAV,UAAY,OAAuB,EAAE,SAAiB;;YAGlD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAEhD,IAAI,KAAK,GAAG,SAAS,IAAI,UAAU,CAAC,UAAU,CAAC;YAC/C,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;SAC9C;QAED,0BAAU,GAAV;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC;gBAC3C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC;gBAC3C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SACjD;;;;;QAQD,4BAAY,GAAZ,UAAa,KAAqB;YAC9B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC;SACf;;;;QAKD,+BAAe,GAAf,UAAiB,KAAqB;YAClC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/D;QAED,+BAAe,GAAf;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;SACtD;;QAMD,0BAAU,GAAV,UAAW,GAAsB;YAC7B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;;;;QAKD,6BAAa,GAAb,UAAe,UAA+B;YAC1C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;SACxD;QAED,6BAAa,GAAb;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACnD;;QAMD,sBAAM,GAAN,UAAO,KAAc;YACjB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;;;;QAKD,yBAAS,GAAT,UAAW,KAAc;YACrB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC/C;QAED,yBAAS,GAAT;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC/C;;QAMD,sBAAM,GAAN,UAAO,IAAU;YACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC;SACf;;;;QAKD,yBAAS,GAAT,UAAW,IAAU;YACjB,IAAG,IAAI,EAAE;gBACL,IAAG,QAAO,IAAI,CAAC,YAAY,CAAC,KAAK,WAAW,EAAE;;oBAE1C,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;iBAE9B;qBAAM,IAAG,QAAO,IAAI,CAAC,IAAI,CAAC,KAAK,WAAW,IAAI,IAAI,CAAC,MAAM;;;oBAGtD,QAAO,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;oBACtC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAElE;qBAAM,IAAG,QAAO,IAAI,CAAC,KAAK,QAAQ,EAAE;oBACjC,IAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;wBACvB,MAAM,IAAI,KAAK,CAAC,wCAAwC;4BACpD,kCAAkC,CAAC,CAAC;qBAC3C;iBACJ;qBAAM;oBACH,MAAM,IAAI,KAAK,CAAC,wCAAwC;wBACpD,8CAA8C,CAAC,CAAC;iBACvD;aACJ;YACD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;SAC9C;;;;QAKD,yBAAS,GAAT;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC/C;;;;;;;;;;;;;QAiBD,0BAAU,GAAV,UAAW,UAAmB,EAAE,KAAuB;YACnD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACtC,OAAO,IAAI,CAAC;SACf;;;;;;;;;;;QAYD,6BAAa,GAAb,UAAc,UAAmB,EAAE,KAAuB;YACtD,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,GAAG,GAAG,GAAG,UAAU,EAAE,GAAG,CAAC,CAAC;SACrE;;;;;QAMD,6BAAa,GAAb,UAAc,UAAmB;YAC7B,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,GAAG,GAAG,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;SAC7E;;;;;;;;;;;;;;;QAgBD,2BAAW,GAAX,UAAY,KAAW;YACnB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;SACf;;;;QAKD,8BAAc,GAAd,UAAgB,KAAW;YAA3B,iBAaC;YAZG,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAE,OAAA,WAAW,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;YAChE,IAAG,CAAC,KAAK,IAAI,QAAO,KAAK,CAAC,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC7D,OAAO,CAAC,OAAO,CAAE,UAAA,UAAU;oBACvB,KAAI,CAAC,cAAc,CAAE,UAAU,CAAC,WAAW,GAAG,GAAG,GAAG,UAAU,CAAE,CAAC;iBACpE,CAAC,CAAC;gBACH,OAAO;aACV;YACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,UAAA,UAAU;gBAClC,IAAG,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;oBAC7B,KAAI,CAAC,aAAa,CAAE,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,CAAE,CAAC;iBACvD;aACJ,CAAC,CAAC;SACN;;;;QAKD,8BAAc,GAAd;YAAA,iBAMC;YALG,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAE,OAAA,WAAW,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC,OAAO,CAAE,UAAA,UAAU;gBAC/D,MAAM,CAAC,UAAU,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;aACvD,CAAC,CAAC;YACH,OAAO,MAAM,CAAC;SACjB;;QAMD,wBAAQ,GAAR,UAAS,IAAkB,EAAE,aAAuB;YAChD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;YACtC,OAAO,IAAI,CAAC;SACf;;;;;QAMD,2BAAW,GAAX,UAAa,IAAkB,EAAE,aAAqB;;YAGlD,IAAG,CAAC,IAAI,EAAE;gBACN,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;gBACpD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;gBACnD,OAAO;aACV;YAED,IAAG,EAAE,IAAI,YAAY,IAAI,CAAC;gBACtB,IAAI,GAAG,IAAI,IAAI,CAAC,IAAc,CAAC,CAAC;YAEpC,IAAI,GAAG,GAAG,aAAa,KAAK,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,MAAM,CAAC,CAAC;YAChF,IAAI,IAAI,GAAG,GAAG,GAAG,UAAU,CAAC,eAAe,GAAG,UAAU,CAAC,cAAc,CAAC;YACxE,IAAI,OAAO,GAAG,GAAG,GAAG,UAAU,CAAC,cAAc,GAAG,UAAU,CAAC,eAAe,CAAC;YAC3E,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;YAEzD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAChC;QAED,2BAAW,GAAX;YACI,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,eAAe,CAAC;gBACrD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;YACjD,IAAG,KAAK,IAAI,QAAO,KAAK,CAAC,KAAK,QAAQ,EAAE;gBACpC,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;YACD,OAAO,KAAK,CAAC;SAChB;;QAMD,uBAAO,GAAP,UAAQ,IAAkB,EAAE,aAAqB;YAC7C,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC;SACf;;;;;QAMD,0BAAU,GAAV,UAAY,IAAkB,EAAE,aAAqB;;YAGjD,IAAG,CAAC,IAAI,EAAE;gBACN,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;gBACnD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;gBAClD,OAAO;aACV;YAED,IAAG,EAAE,IAAI,YAAY,IAAI,CAAC;gBACtB,IAAI,GAAG,IAAI,IAAI,CAAC,IAAc,CAAC,CAAC;YAEpC,IAAI,GAAG,GAAG,aAAa,KAAK,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,MAAM,CAAC,CAAC;YAChF,IAAI,IAAI,GAAG,GAAG,GAAG,UAAU,CAAC,cAAc,GAAG,UAAU,CAAC,aAAa,CAAC;YACtE,IAAI,OAAO,GAAG,GAAG,GAAG,UAAU,CAAC,aAAa,GAAG,UAAU,CAAC,cAAc,CAAC;YACzE,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;YAEzD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAChC;QAED,0BAAU,GAAV;YACI,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC;gBACpD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YAChD,IAAG,KAAK,IAAI,QAAO,KAAK,CAAC,KAAK,QAAQ,EAAE;gBACpC,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;YACD,OAAO,KAAK,CAAC;SAChB;;QAMD,sBAAM,GAAN,UAAO,IAAkB;YACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;QAED,4BAAY,GAAZ,UAAc,IAAkB;YAC5B,IAAG,IAAI,IAAI,IAAI,YAAY,IAAI;gBAC3B,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;SAC9C;QAED,4BAAY,GAAZ;YACI,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChD,IAAG,IAAI;gBAAE,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;;QAMD,oBAAI,GAAJ,UAAK,IAAkB;YACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAED,0BAAU,GAAV,UAAY,IAAiB;YACzB,IAAG,IAAI,IAAI,IAAI,YAAY,IAAI;gBAC3B,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC5C;QAED,0BAAU,GAAV;YACI,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAG,IAAI;gBAAE,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;;QAMD,uBAAO,GAAP,UAAQ,KAAmB,EAAE,GAAiB;YAC1C,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC;SACf;QAED,0BAAU,GAAV,UAAW,KAAmB,EAAE,GAAiB;YAC7C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;;QAMD,6BAAa,GAAb,UAAc,KAAsB;YAChC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC;SACf;QAED,gCAAgB,GAAhB,UAAiB,KAAsB;YACnC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/D;QAED,gCAAgB,GAAhB;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;SACtD;;QAMD,sBAAM,GAAN,UAAO,KAAuB;YAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;;;;QAKD,yBAAS,GAAT,UAAW,KAAsB;YAC7B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SACxD;QAED,yBAAS,GAAT;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC/C;;;;QAKD,wBAAQ,GAAR,UAAS,IAAY;YACjB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC1B;;;;QAKD,2BAAW,GAAX,UAAY,IAAY;YACpB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC;YACpC,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAG,GAAG,IAAE,CAAC,EAAE;gBACP,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aAC1B;SACJ;;QAMD,sBAAM,GAAN,UAAO,MAAuB;YAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;;;;QAKD,yBAAS,GAAT,UAAW,MAAuB;YAC9B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;SACzD;QAED,yBAAS,GAAT;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC/C;;;;QAKD,wBAAQ,GAAR,UAAS,KAAa;YAClB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC1B;;;;QAKD,2BAAW,GAAX,UAAY,KAAa;YACrB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC;YACpC,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAChC,IAAG,GAAG,IAAE,CAAC,EAAE;gBACP,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aAC1B;SACJ;;;;;QAUD,oBAAI,GAAJ,UAAM,IAAY;YACd,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;SACf;QAED,uBAAO,GAAP,UAAQ,IAAY;YAChB,IAAG,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,GAAC,CAAC,GAAC,CAAC;gBAAE,OAAO;YACnC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,GAAC,CAAC,CAAC,CAAC;SAC9C;QAED,uBAAO,GAAP;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC7C;QAED,wBAAQ,GAAR;YACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC,CAAC;SAClC;QAED,4BAAY,GAAZ;YACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC,CAAC;SAClC;;;;;QASD,wBAAQ,GAAR,UAAU,IAAY;YAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;QAED,2BAAW,GAAX,UAAa,IAAY;YACrB,IAAG,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,GAAC,CAAC,GAAC,CAAC;gBAAE,OAAO;YACnC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,GAAC,CAAC,CAAC,CAAC;SACnD;QAED,2BAAW,GAAX;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;SAClD;;;;;;QAUD,oBAAI,GAAJ,UAAM,IAAY,EAAE,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1B,OAAO,IAAI,CAAC;SACf;;;;;QAMA,uBAAO,GAAP,UAAQ,IAAY,EAAE,KAAa;YAC/B,KAAK,GAAG,KAAK,IAAI,MAAM,CAAC;YACxB,IAAG,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC;gBAC3B,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7C;QAED,uBAAO,GAAP;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC7C;QAED,4BAAY,GAAZ;YACI,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC3B,OAAO,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAC7D;QAED,4BAAY,GAAZ;YACI,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC3B,OAAO,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAC7D;;;;QAKD,8BAAc,GAAd;YACI,OAAOA,sBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACxC;;;;;QASD,qBAAK,GAAL;YACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;SAC9D;QACL,YAAC;KAAA;;aChpCuB,YAAY;QAChC,OAAO,IAAI,KAAK,EAAE,CAAC;KACtB;;eCCc,UAAS,OAAa;QAC7B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KAChC;AAPL,QAAI,MAAM,GAA4B;QAElC,MAAM,EAAE,6BAA6B;;QAGrC,SAAS,MAER;KACJ,CAAC;;ACPF;;;;;QAYI,sBAAY,OAAiC;YARnC,YAAO,GAAY,IAAI,CAAC;YAExB,mBAAc,GAAG,WAAW,CAAC;YAOnC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,IAAE,KAAK,CAAC,CAAC;YACxC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAClC;QAED,iCAAU,GAAV,UAAW,OAAgB;YACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SAC1B;;;;QAKD,mCAAY,GAAZ,UAAa,GAAqB;YAC9B,IAAG,GAAG,IAAI,QAAO,GAAG,CAAC,KAAK,QAAQ;gBAC9B,IAAI,CAAC,KAAK,GAAG,cAAa,OAAO,GAAG,CAAC,EAAE,CAAC;iBACvC,IAAG,GAAG,IAAI,QAAO,GAAG,CAAC,KAAK,UAAU;gBACrC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;;SAExB;QAED,+BAAQ,GAAR;YACI,IAAG,IAAI,CAAC,KAAK,IAAI,QAAO,IAAI,CAAC,KAAK,CAAC,KAAK,UAAU;gBAAE,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;;gBACnE,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;SAClC;QAED,gCAAS,GAAT,UAAU,MAAM;YACZ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACxB;QAED,gCAAS,GAAT;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;QAED,wCAAiB,GAAjB;;QAEI,OAAgC;YAEhC,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACxE;QAED,8BAAO,GAAP;;QAEI,IAAU;YAEV,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC,CAAC;SAC9E;QAEL,mBAAC;KAAA,IAAA;;ACzDD;QAA4BF,iCAAY;;;;;QAMpC,uBAAY,OAAiC;mBACzC,kBAAM,OAAO,CAAC;SACjB;QAGD,yCAAiB,GAAjB,UAAkB,OAAgC;YAE9C,IAAI,IAAI,GAA4B;gBAChC,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,GAAG,EAAE,OAAO,CAAC,GAAG;gBAChB,OAAO,EAAE,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO;aAC3C,CAAC;YAEF,IAAG,OAAO,CAAC,IAAI,KAAK,IAAI;gBACpB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;YAE/B,IAAG,OAAO,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;aAChC;YAED,IAAG,OAAO,CAAC,IAAI,EAAE;gBACb,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gBACzB,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;aACzC;;YAGD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAG,OAAO,CAAC,OAAO,EAAE;gBAChB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;aAChD;;YAGD,IAAG,IAAI,CAAC,KAAK,EAAE;gBACX,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;gBACzB,IAAG,KAAK,EAAE;oBACN,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,SAAS,GAAG,KAAK,CAAC;oBAC/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;iBAC/B;aACJ;YACD,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAC9B,IAAG,MAAM;gBAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,MAAM,CAAC;;YAGpE,IAAG,OAAO,CAAC,OAAO,EAAE;gBAChB,KAAI,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE;oBAC1B,IAAG,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;wBAClC,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;qBAChC;iBACJ;aACJ;YAED,OAAO,IAAI,CAAC;SACf;QAGD,+BAAO,GAAP,UAAQ,IAAU;YAEd,IAAG,QAAO,KAAK,CAAC,KAAK,WAAW,EAAE;gBAC9B,MAAM,IAAI,KAAK,CAAC,gDAAgD;oBAC5D,2DAA2D;oBAC3D,2BAA2B,CAAC,CAAA;aACnC;YAED,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC;iBACxB,IAAI,CAAE,UAAA,QAAQ,IAAM,OAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;iBAC5C,KAAK,CAAE,UAAA,KAAK;gBACT,IAAI,GAAG,GAAa,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC/C,IAAI,KAAK,CAAC,QAAQ,EAAE;oBAChB,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC1C;gBACD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;YACH,OAAO,OAAO,CAAC;SAClB;QAEL,oBAAC;KAjFD,CAA4B,YAAY,GAiFvC;;IClFD;;;;;;AAMA;QASI,qBAAY,GAAY,EAAE,UAAyB;YAJzC,aAAQ,GAAY,KAAK,CAAC;YAE1B,gBAAW,GAAc,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;YAGzE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;SAC5B;QAED,4BAAM,GAAN,UAAO,OAAgB;YACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,YAAY,CAAC;SACzC;;;;QAKD,gCAAU,GAAV,UAAW,YAAqB;YAC5B,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;SAChC;;;;QAKD,6BAAO,GAAP,UAAQ,YAAqB;YACzB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YAC9B,OAAO,IAAI,CAAC;SACf;;;;QAKD,+BAAS,GAAT;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;QAED,mCAAa,GAAb,UAAgB,GAA6E;YACzF,OAAO,IAAI,OAAO,CAAO,GAAG,CAAE,CAAC;SAClC;QACD,6CAAuB,GAAvB,UAAyB,KAAW;YAChC,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACjC;QACD,4CAAsB,GAAtB,UAAyB,KAAa;YAClC,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAChC;;;;QAKD,+BAAS,GAAT,UAAU,MAAY;YAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACxB;;;;QAKD,8BAAQ,GAAR,UAAS,CAAgB;YACrB,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBACjC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACxB;SACJ;;;;QAKD,8BAAQ,GAAR,UAAS,GAAY;YACjB,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBACjC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC1B;SACJ;;;;;;;;;QAaD,kCAAY,GAAZ,UAAc,OAA4B;YAEtC,IAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAC,CAAC;gBACzC,MAAM,IAAI,KAAK,CAAC,6BAA2B,OAAO,CAAC,MAAQ,CAAC,CAAC;YAEjE,IAAG,CAAC,OAAO,CAAC,GAAG;gBACX,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;YAE5D,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC;YACzC,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACf;QAED,uCAAiB,GAAjB,UAAkB,OAA4B;YAE1C,IAAG,QAAO,OAAO,CAAC,OAAO,CAAC,KAAG,QAAQ,EAAE;gBACnC,IAAI,KAAG,GAAG,OAAO,CAAC,OAAO,CAAC;gBAC1B,OAAO,OAAO,CAAC,OAAO,CAAC;gBAEvB,IAAG,KAAG,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;;;oBAG7B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAE,UAAA,KAAK;wBACtC,KAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBAC7C,CAAC,CAAC;oBACH,OAAO,OAAO,CAAC,MAAM,CAAC;iBACzB;gBAED,MAAM,CAAC,MAAM,CAAC,KAAG,EAAE,OAAO,CAAC,CAAC;gBAC5B,OAAO,GAAG,KAAG,CAAC;aACjB;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YACrD,IAAI,CAAC,QAAQ,CAAC,oCAAoC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9E,OAAO,OAAO,CAAC;SAClB;QAED,6BAAO,GAAP,UAAQ,IAAyB;YAAjC,iBASC;YARG,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;iBAC/B,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAG,CAAC,KAAK,IAAI,IAAI,QAAO,CAAC,CAAC,KAAK,WAAW,EAAE;oBACxC,CAAC,GAAG,IAAI,KAAK,CAAC,sCAAsC;wBACpD,0DAA0D,CAAC,CAAC;iBAC/D;gBACD,OAAO,KAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;aACzC,CAAC,CAAC;SACN;QAEL,kBAAC;KAAA,IAAA;;IC3ID;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;QAA0BA,+BAAW;QAEjC,qBAAY,GAAY,EAAE,UAAyB;mBAC/C,kBAAM,GAAG,EAAE,UAAU,CAAC;SACzB;;;;;;QAQD,yBAAG,GAAH,UAAK,EAAW,EAAE,OAAc;YAAhC,iBAkBC;YAhBG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;YAClC,IAAG,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE;gBAC3B,GAAG,IAAI,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC;;aAEzC;YACD,OAAO,IAAI,CAAC,uBAAuB,CAAE,GAAG,CAAE;iBACzC,IAAI,CAAE,UAAA,GAAG;gBACN,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAE,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,OAAO,EAAC,OAAO,EAAE,CAAC,CAAC;gBACzE,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,yBAAuB,EAAE,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC/D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,sBAAsB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACpD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAOD,0BAAI,GAAJ,UAAM,OAAc,EAAE,OAAc;YAApC,iBAkCC;YAhCG,OAAO,IAAI,CAAC,uBAAuB,CAAE,OAAO,CAAE;iBAC7C,IAAI,CAAE,UAAA,IAAI;gBAEP,IAAI,MAAM,GAAG,MAAM,EACf,GAAG,GAAG,KAAI,CAAC,OAAO,CAAC;gBACvB,IAAG,IAAI,CAAC,EAAE,EAAE;oBACR,MAAM,GAAG,KAAK,CAAC;oBACf,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;iBACxB;qBAAM;;;;oBAIH,IAAG,CAAC,IAAI,CAAC,GAAG,EAAE;wBACV,OAAO,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC;6BAChC,IAAI,CAAE,UAAA,GAAG;4BACN,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;4BACf,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAC,MAAM,EAAC,MAAM,EAAE,GAAG,EAAC,GAAG,EAAE,IAAI,EAAC,IAAI,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;4BACnF,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;yBAC7B,CAAC,CAAC;qBACN;iBACJ;gBAED,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAC,MAAM,EAAC,MAAM,EAAE,GAAG,EAAC,GAAG,EAAE,IAAI,EAAC,IAAI,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;gBACnF,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAE7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,wBAAsB,CAAC,CAAC,OAAS,CAAC,CAAC;gBACvD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,uBAAuB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAOD,4BAAM,GAAN,UAAQ,EAAW,EAAE,OAAc;YAAnC,iBAgBC;YAdG,OAAO,IAAI,CAAC,uBAAuB,CAAE,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,CAAE;iBAC7D,IAAI,CAAE,UAAA,GAAG;gBACN,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO;iBAC9C,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,IAAI,CAAE,cAAM,OAAA,IAAI,GAAA,CAAC;iBACjB,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,yBAAuB,EAAE,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC/D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,yBAAyB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACvD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;QAQD,2BAAK,GAAL,UAAO,EAAW,EAAE,KAAW,EAAE,OAAc;YAA/C,iBAeC;YAbG,OAAO,IAAI,CAAC,uBAAuB,CAAE,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,CAAE;iBAC7D,IAAI,CAAE,UAAA,GAAG;gBACN,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO;iBAC3D,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,yBAAuB,EAAE,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC/D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,wBAAwB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACtD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;QASD,2BAAK,GAAL,UAAO,EAAW,EAAE,SAAe,EAAE,OAAc;YAAnD,iBAeC;YAbG,OAAO,IAAI,CAAC,uBAAuB,CAAE,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,QAAQ,CAAE;iBACxE,IAAI,CAAE,UAAA,GAAG;gBACN,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO;iBAC9D,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,wBAAsB,EAAE,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC9D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,wBAAwB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACtD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAOD,4BAAM,GAAN,UAAQ,GAAU,EAAE,OAAc;YAAlC,iBAsBC;YApBG,OAAO,IAAI,CAAC,uBAAuB,CAAE,GAAG,CAAE;iBACzC,IAAI,CAAE,UAAA,MAAM;gBACT,IAAI,EAAE,GAAG,EAAE,CAAC;gBACZ,IAAG,MAAM,IAAI,QAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,UAAU;oBAAE,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;qBACvE,IAAG,QAAO,MAAM,CAAC,KAAK,QAAQ;oBAAE,EAAE,GAAG,MAAM,CAAC;;oBAC5C,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK;oBACZ,GAAG,EAAE,KAAI,CAAC,OAAO;oBACjB,MAAM,EAAE,EAAE;oBACV,OAAO,EAAE,OAAO;iBACnB,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,4BAA0B,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC3D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,yBAAyB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACvD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;QASD,4BAAM,GAAN,UAAQ,GAAS,EAAE,MAAe,EAAE,OAAc;YAAlD,iBAuCC;YArCG,OAAO,IAAI,CAAC,uBAAuB,CAAE,IAAI,CAAE;iBAC1C,IAAI,CAAE;gBACH,IAAG,GAAG,KAAG,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;oBAChC,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;iBACvD;gBACD,IAAI,MAAM,GAAG,QAAO,GAAG,CAAC,KAAK,QAAQ,CAAC;gBACtC,IAAI,EAAE,GAA0B;oBAC5B,MAAM,EAAC,MAAM;oBACb,GAAG,EAAE,KAAI,CAAC,OAAO,GAAG,aAAa;oBACjC,WAAW,EAAE,IAAI;oBACjB,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE,OAAO;iBACnB,CAAC;gBACF,IAAG,MAAM,EAAE;oBACP,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC;oBACd,EAAE,CAAC,IAAI,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;iBAChC;qBAAM;oBACH,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACpB,EAAE,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;iBAC1C;gBACD,IAAG,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE;oBAC7B,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,IAAE,EAAE,CAAC;oBAC7C,OAAO,OAAO,CAAC,SAAS,CAAC;iBAC5B;gBACD,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;gBACjC,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAE,UAAA,CAAC;gBACL,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,4BAAyB,CAAC,CAAC,OAAO,IAAE,CAAC,CAAE,CAAC,CAAC;gBAC7D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,IAAG,CAAC,CAAC,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAE;oBAC5E,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,EAAC,MAAM,EAAE,GAAG,EAAC,CAAC,CAAC;gBACtC,IAAG,CAAC,CAAC,IAAI;oBACL,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,IAAI,EAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC1C,KAAI,CAAC,QAAQ,CAAC,yBAAyB,IAAI,GAAG,CAAC,OAAO,IAAE,CAAC,CAAC,CAAC,CAAC;gBAC5D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QASD,4BAAM,GAAN,UAAQ,EAAW,EAAE,MAAe,EAAE,OAAc;YAApD,iBAwBC;YAtBG,OAAO,IAAI,CAAC,uBAAuB,CAAE,IAAI,CAAE;iBAC1C,IAAI,CAAE;gBACH,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,SAAS,CAAC;gBAC9C,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;oBACvB,MAAM,EAAE,EAAC,MAAM,EAAC,MAAM,EAAC;oBACvB,IAAI,EAAE,KAAK;oBACX,OAAO,EAAE,OAAO;iBACnB,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAE,UAAA,CAAC;gBACL,IAAI,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC;;gBAEpB,IAAG,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,KAAG,GAAG,IAAI,CAAC,CAAC,UAAU,KAAG,KAAK,EAAE;oBAC3D,GAAG,GAAG,0CAAwC,MAAM,MAAG,CAAC;iBAC3D;gBACD,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,2BAAyB,GAAK,CAAC,CAAC;gBACpD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,yBAAyB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACvD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAQD,4BAAM,GAAN,UAAQ,MAAY,EAAE,OAAc;YAApC,iBAqBC;YAnBG,OAAO,IAAI,CAAC,uBAAuB,CAAE,MAAM,CAAE;iBAC5C,IAAI,CAAE,UAAA,GAAG;gBACN,IAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI;oBAChB,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;gBACnE,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC;gBAC1C,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;gBACxB,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC;gBAC9B,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO;iBACxD,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAE,UAAA,CAAC;gBACL,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,iCAA+B,CAAC,CAAC,OAAS,CAAC,CAAC;gBAChE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,yBAAyB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACvD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SAEN;;;;;;QAQD,iCAAW,GAAX,UAAa,GAAc,EAAE,OAAc;YAA3C,iBAkBC;YAhBG,OAAO,IAAI,CAAC,uBAAuB,CAAE,GAAG,CAAE;iBACzC,IAAI,CAAE,UAAA,WAAW;gBAEd,IAAI,MAAM,GAAG,MAAM,EACf,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,YAAY,CAAC;gBAEtC,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAC,MAAM,EAAC,MAAM,EAAE,GAAG,EAAC,GAAG,EAAE,IAAI,EAAC,WAAW,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;gBAC1F,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAE7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,2BAAyB,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC1D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,8BAA8B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC5D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAQD,4BAAM,GAAN,UAAO,IAAe,EAAE,OAAc;YAAtC,iBAaC;YAZG,OAAO,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC;iBACxC,IAAI,CAAE,UAAA,IAAI;gBACP,IAAI,MAAM,GAAG,MAAM,EAAE,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;gBAC9D,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAC,MAAM,EAAC,MAAM,EAAE,GAAG,EAAC,GAAG,EAAE,IAAI,EAAC,IAAI,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;gBACnF,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,4BAA0B,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC3D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,yBAAyB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACvD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;QAGD,0BAAI,GAAJ,UAAK,IAAU,EAAE,OAAc;YAA/B,iBAaC;YAZG,OAAO,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC;iBAC3C,IAAI,CAAE,UAAA,EAAE;gBACL,IAAI,MAAM,GAAG,KAAK,EAAE,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,aAAa,GAAG,EAAE,GAAG,QAAQ,CAAC;gBACvE,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAC,MAAM,EAAC,MAAM,EAAE,GAAG,EAAC,GAAG,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;gBACxE,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,uBAAqB,IAAI,CAAC,EAAE,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBAClE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,uBAAuB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;QAED,0BAAI,GAAJ,UAAK,IAAU,EAAE,OAAc;YAA/B,iBAaC;YAZG,OAAO,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC;iBAC3C,IAAI,CAAE,UAAA,EAAE;gBACL,IAAI,MAAM,GAAG,KAAK,EAAE,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,aAAa,GAAG,EAAE,GAAG,QAAQ,CAAC;gBACvE,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAC,MAAM,EAAC,MAAM,EAAE,GAAG,EAAC,GAAG,EAAE,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC;gBACxE,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,uCAAqC,IAAI,CAAC,EAAE,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBAClF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,uBAAuB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAQD,kCAAY,GAAZ,UAAc,EAAW,EAAE,MAAY,EAAE,OAAc;YAAvD,iBAmBC;YAjBG,OAAO,IAAI,CAAC,uBAAuB,CAAE,EAAE,CAAE;iBACxC,IAAI,CAAE,UAAA,EAAE;gBACL,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,eAAe,CAAC;gBACpD,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK;oBACZ,GAAG,EAAC,GAAG;oBACP,MAAM,EAAE,MAAM,IAAI,EAAE;oBACpB,OAAO,EAAE,OAAO;iBACnB,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,0CAAwC,EAAE,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBAChF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,+BAA+B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC7D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;QAQD,8BAAQ,GAAR,UAAU,EAAW,EAAE,MAAa,EAAE,OAAc;YAApD,iBAgBC;YAdG,OAAO,IAAI,CAAC,uBAAuB,CAAE,EAAE,CAAE;iBACxC,IAAI,CAAE,UAAA,EAAE;gBACL,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,WAAW,CAAC;gBAChD,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAC,OAAO;iBACzD,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,sCAAoC,EAAE,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC5E,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,2BAA2B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACzD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;QA6CL,kBAAC;KAtcD,CAA0B,WAAW,GAscpC;;ICjeD;;;;;;;AAQA;QAA6BA,kCAAW;QAEpC,wBAAY,GAAY,EAAE,UAAyB;mBAC/C,kBAAM,GAAG,EAAE,UAAU,CAAC;SACzB;QAED,+BAAM,GAAN,UAAO,OAAgB;YACnB,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,eAAe,CAAC;SAC5C;QAEL,qBAAC;KAXD,CAA6B,WAAW,GAWvC;;IClBD;;;;;;;AAQA;QAAyBA,8BAAW;QAEhC,oBAAY,GAAU,EAAE,UAAuB;mBAC3C,kBAAM,GAAG,EAAE,UAAU,CAAC;SACzB;QAED,2BAAM,GAAN,UAAO,OAAc;YACjB,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,WAAW,CAAC;SACxC;QAGL,iBAAC;KAZD,CAAyB,WAAW,GAYnC;;ICpBD;;;;;;;AAQA;QAA2BA,gCAAW;QAElC,sBAAY,GAAY,EAAE,UAAyB;mBAC/C,kBAAM,GAAG,EAAE,UAAU,CAAC;SACzB;QAED,6BAAM,GAAN,UAAO,OAAgB;YACnB,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,aAAa,CAAC;SAC1C;;;;;;;;;;;;;;;QAgBD,4BAAK,GAAL,UAAO,EAAW;YAAlB,iBAwBC;YAxBmB,cAAO;iBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;gBAAP,6BAAO;;YACvB,OAAO,OAAO,CAAC,OAAO,CAAE,EAAE,CAAE;iBAC3B,IAAI,CAAE,UAAC,EAAE;gBAEN,IAAI,OAAO,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;gBAC/B,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,QAAQ,CAAC;gBAE7C,IAAG,IAAI,CAAC,CAAC,CAAC,IAAI,QAAO,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;oBACxC,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACtB,IAAG,IAAI,CAAC,CAAC,CAAC;wBAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;iBAExC;qBAAM,IAAG,IAAI,CAAC,CAAC,CAAC,IAAI,QAAO,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;oBAC/C,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC5B;gBAED,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAE,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,OAAO,EAAC,OAAO,EAAE,CAAC,CAAC;gBACzE,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,2BAAyB,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC1D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,yBAAyB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACvD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;QAQD,6BAAM,GAAN,UAAS,EAAW,EAAE,OAAc;YAApC,iBAaC;YAZG,OAAO,OAAO,CAAC,OAAO,CAAE,EAAE,CAAE;iBAC3B,IAAI,CAAE,UAAC,EAAE;gBACN,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,SAAS,CAAC;gBAC9C,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAE,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,OAAO,EAAC,OAAO,EAAE,CAAC,CAAC;gBACzE,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,2BAAyB,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC1D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,yBAAyB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACvD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;QASD,+BAAQ,GAAR,UAAU,EAAW,EAAE,GAAS,EAAE,OAAc;YAAhD,iBAuCC;YArCG,OAAO,OAAO,CAAC,OAAO,CAAE,GAAG,CAAE;iBAC5B,IAAI,CAAE,UAAC,GAAG;gBAEP,IAAG,CAAC,GAAG,EAAE;oBACL,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;iBAC9D;gBAED,IAAI,IAAI,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBACjD,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;gBAC1C,IAAG,OAAO,EAAE;oBACR,MAAM,IAAI,KAAK,CAAC,kBAAgB,OAAO,qBAAkB,CAAC,CAAC;iBAC9D;gBAED,IAAI,MAAM,GAAG;oBACT,GAAG,EAAW,WAAW;oBACzB,IAAI,EAAU,GAAG,CAAC,IAAI;oBACtB,MAAM,EAAQ,GAAG,CAAC,MAAM;oBACxB,KAAK,EAAS,GAAG,CAAC,KAAK;oBACvB,WAAW,EAAG,UAAU;oBACxB,CAAC,EAAa,GAAG,CAAC,CAAC;oBACnB,CAAC,EAAa,GAAG,CAAC,CAAC;oBACnB,CAAC,EAAa,GAAG,CAAC,CAAC;oBACnB,CAAC,EAAa,GAAG,CAAC,CAAC;iBACtB,CAAC;gBAEF,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,WAAW,CAAC;gBAChD,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,MAAM,EAAC,MAAM,EAAE,OAAO,EAAC,OAAO;iBACxD,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,qCAAmC,CAAC,CAAC,OAAS,CAAC,CAAC;gBACpE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,4BAA4B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;QAQD,+BAAQ,GAAR,UAAS,EAAW,EAAE,MAAY,EAAE,OAAc;YAAlD,iBAqBC;YAnBG,OAAO,OAAO,CAAC,OAAO,CAAE,MAAM,CAAE;iBAC/B,IAAI,CAAE,UAAA,MAAM;gBAET,IAAG,CAAC,MAAM,EAAE;oBACR,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;iBACzE;gBAED,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,WAAW,CAAC;gBAChD,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,MAAM,EAAC,MAAM,EAAE,OAAO,EAAC,OAAO;iBACxD,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,qCAAmC,CAAC,CAAC,OAAS,CAAC,CAAC;gBACpE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,4BAA4B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;QAEL,mBAAC;KArJD,CAA2B,WAAW,GAqJrC;;IC3JD;;;;;;;AAQA;QAA6BA,kCAAW;QAEpC,wBAAY,GAAU,EAAE,UAAuB;mBAC3C,kBAAM,GAAG,EAAE,UAAU,CAAC;SACzB;QAED,+BAAM,GAAN,UAAO,OAAc;YACjB,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,eAAe,CAAC;SAC5C;;;;;;;;;QAWD,8BAAK,GAAL,UAAO,OAAa,EAAE,OAAc;YAApC,iBAiBC;YAfG,OAAO,OAAO,CAAC,OAAO,CAAE,OAAO,CAAE;iBAChC,IAAI,CAAE,UAAA,GAAG;gBACN,IAAG,CAAC,GAAG;oBACH,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;gBAClE,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,MAAM,EAAE,GAAG,EAAC,KAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,IAAI,EAAC,GAAG,EAAE,OAAO,EAAC,OAAO;iBACxE,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,+BAA6B,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC9D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,2BAA2B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACzD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;QAQD,8BAAK,GAAL,UAAO,OAAc;YAArB,iBAuBC;YArBG,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE;iBACtB,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;iBACzB,aAAa,CAAC,aAAa,CAAC;iBAC5B,QAAQ,CAAC,EAAE,CAAC;iBACZ,QAAQ,EAAE,CAAC;YAEZ,OAAO,OAAO,CAAC,OAAO,CAAE,KAAK,CAAE;iBAC9B,IAAI,CAAE,UAAC,MAAM;gBACV,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,YAAY,CAAC;gBACtC,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,MAAM,EAAC,MAAM,EAAE,OAAO,EAAC,OAAO;iBACxD,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,OAAO,GAAA,CAAC;iBAClC,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,mCAAiC,CAAC,CAAC,OAAS,CAAC,CAAC;gBAClE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,2BAA2B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACzD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAQD,+BAAM,GAAN,UAAQ,OAAa,EAAE,OAAc;YAArC,iBAgBC;YAdG,OAAO,OAAO,CAAC,OAAO,CAAE,OAAO,CAAE;iBAChC,IAAI,CAAE,UAAA,GAAG;gBACN,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;gBACnC,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,MAAM,EAAE,GAAG,EAAC,GAAG,EAAE,IAAI,EAAC,GAAG,EAAE,OAAO,EAAC,OAAO;iBACpD,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,8BAA4B,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC7D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,4BAA4B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAQD,gCAAO,GAAP,UAAS,EAAW,EAAE,OAAc;YAApC,iBAiBC;YAfG,OAAO,OAAO,CAAC,OAAO,CAAE,EAAE,CAAE;iBAC3B,IAAI,CAAE,UAAA,EAAE;gBACL,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,UAAU,CAAC;gBAC/C,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,OAAO,EAAC,OAAO;iBACzC,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,2CAAyC,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC1E,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,6BAA6B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC3D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SAEN;;;;;;QAOD,iCAAQ,GAAR,UAAU,EAAW,EAAE,OAAc;YAArC,iBAgBC;YAdG,OAAO,OAAO,CAAC,OAAO,CAAE,EAAE,CAAE;iBAC3B,IAAI,CAAE,UAAA,EAAE;gBACL,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,CAAC;gBAC5C,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,OAAO,EAAC,OAAO;iBACzC,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,4BAA0B,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC3D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,8BAA8B,GAAI,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC7D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAOD,mCAAU,GAAV,UAAY,EAAW,EAAE,OAAc;YAAvC,iBAeC;YAdG,OAAO,OAAO,CAAC,OAAO,CAAE,EAAE,CAAE;iBAC3B,IAAI,CAAE,UAAA,EAAE;gBACL,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,aAAa,CAAC;gBAClD,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,OAAO,EAAC,OAAO;iBACzC,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,uCAAqC,CAAC,CAAC,OAAS,CAAC,CAAC;gBACtE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,gCAAgC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC9D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;QAEL,qBAAC;KApKD,CAA6B,WAAW,GAoKvC;;IC/KD;;;;;;;AAQA;QAA6BA,kCAAW;QAEpC,wBAAY,GAAY,EAAE,UAAyB;mBAC/C,kBAAM,GAAG,EAAE,UAAU,CAAC;SACzB;QAED,+BAAM,GAAN,UAAO,OAAgB;YACnB,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,gBAAgB,CAAC;SAC7C;QAED,gCAAO,GAAP,UAAS,SAAkB,EAAE,OAAa,EAAE,OAAc;YAA1D,iBAeC;YAdG,OAAO,OAAO,CAAC,OAAO,CAAE,IAAI,CAAE;iBAC7B,IAAI,CAAE;gBACH,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,QAAQ,CAAC;gBACpD,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,MAAM,EAAE,GAAG,EAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAC,OAAO;iBACzD,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,qBAAqB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;gBACvD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,6BAA6B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC3D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;QAED,mCAAU,GAAV,UAAY,SAAkB,EAAE,MAAY,EAAE,OAAc;YAA5D,iBAeC;YAdG,OAAO,OAAO,CAAC,OAAO,CAAE,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,SAAS,GAAG,MAAM,CAAE;iBAC5E,IAAI,CAAE,UAAA,GAAG;gBACN,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,QAAQ,EAAE,GAAG,EAAC,GAAG,EAAE,OAAO,EAAC,OAAO;iBAC5C,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,IAAI,CAAE,cAAK,OAAA,IAAI,GAAA,CAAC;iBAChB,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,qBAAqB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;gBACvD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,6BAA6B,GAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;QAEL,qBAAC;KA7CD,CAA6B,WAAW,GA6CvC;;ACnDD;QAA2BA,gCAAW;QAElC,sBAAY,GAAY,EAAE,UAAyB;YAAnD,YACI,kBAAM,GAAG,EAAE,UAAU,CAAC,SAEzB;YADG,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;SAC1B;QAED,6BAAM,GAAN,UAAO,OAAgB;YACnB,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SAC1B;;;;;;;QAQD,mCAAY,GAAZ,UAAc,QAAsB,EAAE,KAAW,EAAE,OAAc;YAAjE,iBAmBC;YAjBG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;YAC7C,IAAG,QAAQ;gBACP,GAAG,IAAI,GAAG,GAAG,QAAQ,CAAC;YAE1B,OAAO,IAAI,CAAC,uBAAuB,CAAE,GAAG,CAAE;iBACzC,IAAI,CAAE,UAAC,GAAG;gBACP,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,MAAM,EAAC,KAAK,IAAE,EAAE,EAAE,OAAO,EAAC,OAAO;iBAC3D,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,iCAA+B,CAAC,CAAC,OAAS,CAAC,CAAC;gBAChE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,gCAAgC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC9D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;QAQD,gCAAS,GAAT,UAAW,IAAU,EAAE,MAAe,EAAE,OAAc;YAAtD,iBAuBC;YArBG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,kBAAkB,CAAC;YAE5C,OAAO,IAAI,CAAC,uBAAuB,CAAE,GAAG,CAAE;iBACzC,IAAI,CAAE,UAAA,GAAG;gBAEN,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,MAAM,EAAG,GAAG,EAAC,GAAG;oBACvB,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;oBACxB,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE,OAAO;iBACnB,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,IAAI,CAAE,UAAA,QAAQ,IAAI,OAAA,QAAQ,GAAA,CAAE;iBAC5B,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,yBAAuB,CAAC,CAAC,OAAS,CAAC,CAAC;gBACxD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,6BAA6B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC3D,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;QASD,6BAAM,GAAN,UAAO,KAAW,EAAE,OAAc;YAAlC,iBAoBC;YAlBG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,sBAAsB,CAAC;YAChD,OAAO,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC;iBACvC,IAAI,CAAE,UAAA,GAAG;gBACN,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAE,KAAK;oBACb,GAAG,EAAE,GAAG;oBACR,MAAM,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE;oBAC3B,OAAO,EAAE,OAAO;iBACnB,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,GAAA,CAAC;iBAC1B,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,+BAA6B,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC9D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,0BAA0B,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACxD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;;;;QAYD,4BAAK,GAAL,UAAO,IAAU,EAAE,MAAe,EAAE,OAAc;YAAlD,iBAwBC;YAtBG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;YAEtC,OAAO,IAAI,CAAC,uBAAuB,CAAE,GAAG,CAAE;iBACzC,IAAI,CAAE,UAAA,GAAG;gBAEN,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,MAAM;oBACb,GAAG,EAAC,GAAG;oBACP,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;oBACxB,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE,OAAO;iBACnB,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,IAAI,CAAE,UAAA,QAAQ,IAAI,OAAA,QAAQ,GAAA,CAAE;iBAC5B,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,uCAAqC,CAAC,CAAC,OAAS,CAAC,CAAC;gBACtE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,yBAAyB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACvD,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;QAEL,mBAAC;KAvID,CAA2B,WAAW,GAuIrC;;ICxID;;;;;;;AAQA;QAAiCA,sCAAW;QAExC,4BAAY,GAAU,EAAE,UAAuB;mBAC3C,kBAAM,GAAG,EAAE,UAAU,CAAC;SACzB;;;;;;QAQD,mCAAM,GAAN,UAAQ,MAAe,EAAE,MAAa,EAAE,OAAc;YAAtD,iBAsBC;YApBG,OAAO,IAAI,CAAC,uBAAuB,CAAE,MAAM,CAAE;iBAC5C,IAAI,CAAE,UAAA,EAAE;gBAEL,IAAG,CAAC,EAAE;oBAAE,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;gBAEhG,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,eAAe,CAAC;gBACpD,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK;oBACZ,GAAG,EAAC,GAAG;oBACP,MAAM,EAAE,MAAM,IAAI,EAAE;oBACpB,OAAO,EAAE,OAAO;iBACnB,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,0CAAwC,MAAM,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBACpF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,+BAA6B,MAAM,YAAO,GAAG,CAAC,OAAS,CAAC,CAAC;gBACvE,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;QAQD,gCAAG,GAAH,UAAK,MAAe,EAAE,aAAsB,EAAE,OAAc;YAA5D,iBAkBC;YAhBG,OAAO,IAAI,CAAC,uBAAuB,CAAE,MAAM,CAAE;iBAC5C,IAAI,CAAE,UAAA,MAAM;gBAET,IAAG,CAAC,MAAM,IAAI,CAAC,aAAa;oBACxB,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;gBAE9F,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,MAAM,GAAG,gBAAgB,GAAG,aAAa,CAAC;gBACzE,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAE,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;gBAC1E,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,yCAAuC,MAAM,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBACnF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,4BAA0B,MAAM,SAAI,aAAa,YAAO,GAAG,CAAC,OAAS,CAAC,CAAC;gBACrF,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;QAQD,mCAAM,GAAN,UAAQ,MAAe,EAAE,aAAsB,EAAE,OAAc;YAA/D,iBAkBC;YAhBG,OAAO,IAAI,CAAC,uBAAuB,CAAE,MAAM,CAAE;iBAC5C,IAAI,CAAE,UAAA,MAAM;gBAET,IAAG,CAAC,MAAM,IAAI,CAAC,aAAa;oBACxB,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;gBAE9F,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,MAAM,GAAG,gBAAgB,GAAG,aAAa,CAAC;gBACzE,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,EAAE,MAAM,EAAC,QAAQ,EAAE,GAAG,EAAC,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;gBAC7E,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,yCAAuC,MAAM,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBACnF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,QAAQ,CAAC,+BAA6B,MAAM,SAAI,aAAa,YAAO,GAAG,CAAC,OAAS,CAAC,CAAC;gBACxF,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;QAEL,yBAAC;KAxFD,CAAiC,WAAW,GAwF3C;;;QC1FG,mBAAY,OAA+B;YACvC,IAAI,CAAC,MAAM,GAAG;gBACV,IAAI,EAAE,CAAC;gBACP,IAAI,EAAE,EAAE;aACX,CAAC;YAEF,IAAG,OAAO,EAAE;gBACR,KAAI,IAAI,CAAC,IAAI,OAAO,EAAE;oBAClB,IAAG,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;wBAC1B,IAAI,CAAC,MAAM,CAAE,CAAW,CAAE,GAAG,OAAO,CAAC,CAAC,CAAQ,CAAC;qBAClD;iBACJ;aACJ;SACJ;QAED,4BAAQ,GAAR;YACI,IAAI,MAAM,GAA0B,EAAE,CAAC;YACvC,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;gBACzB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAG,KAAK,KAAK,IAAI,IAAI,QAAO,KAAK,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;oBACrD,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC3B;gBACD,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;aACxB;YACD,OAAO,MAAM,CAAC;SACjB;;QAID,qBAAC,GAAD,UAAE,KAAc,IAAgB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,EAAE;QAChE,wBAAI,GAAJ,UAAK,KAAc,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE;QAC/C,wBAAI,GAAJ,cAAkB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;;QAIzC,yBAAK,GAAL,UAAM,KAAuB;YACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAAC,OAAO,IAAI,CAAC;SACrC;QACD,4BAAQ,GAAR,UAAS,KAAuB;YAC5B,IAAI,GAAY,CAAC;YACjB,IAAG,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC5B,GAAG,GAAI,KAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;gBACxC,GAAG,GAAG,KAAe,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;SAC3B;QACD,4BAAQ,GAAR,cAAwB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;;QAInD,0BAAM,GAAN,UAAO,KAAuB;YAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAAC,OAAO,IAAI,CAAC;SACtC;QACD,6BAAS,GAAT,UAAU,KAAuB;YAC7B,IAAI,GAAY,CAAC;YACjB,IAAG,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC5B,GAAG,GAAI,KAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;gBACxC,GAAG,GAAG,KAAe,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;SAC5B;QACD,6BAAS,GAAT,cAAyB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;;QAIrD,wBAAI,GAAJ,UAAK,KAAuB;YACxB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAAC,OAAO,IAAI,CAAC;SACpC;QACD,2BAAO,GAAP,UAAQ,KAAuB;YAC3B,IAAI,GAAY,CAAC;YACjB,IAAG,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC5B,GAAG,GAAI,KAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;gBACxC,GAAG,GAAG,KAAe,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;SAC1B;QACD,2BAAO,GAAP,cAAuB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;;QAIjD,0BAAM,GAAN,UAAO,KAAW,IAAgB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,EAAE;QACvE,6BAAS,GAAT,UAAU,KAAW,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;QACpD,6BAAS,GAAT,cAAoB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;;;;;;QAQ9C,wBAAI,GAAJ,UAAM,IAAa,EAAE,KAAc;YAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAAC,OAAO,IAAI,CAAC;SAC1C;;;;;QAKA,2BAAO,GAAP,UAAQ,IAAa,EAAE,KAAc;YACjC,KAAK,GAAG,KAAK,IAAI,MAAM,CAAC;YACxB,IAAG,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC;gBAC3B,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;SAC5B;QACD,2BAAO,GAAP,cAAqB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QAC/C,gCAAY,GAAZ,cAA0B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAClE,gCAAY,GAAZ,cAA2B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;;;;;QAS7E,wBAAI,GAAJ,UAAM,IAAa;YACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;SACf;QAED,2BAAO,GAAP,UAAQ,IAAa;YACjB,IAAG,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,GAAC,CAAC,GAAC,CAAC;gBAAE,OAAO;YACnC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,GAAC,CAAC,CAAC;SAC7B;QAED,2BAAO,GAAP;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;SAC3B;QAED,4BAAQ,GAAR;YACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAC,CAAC,CAAC,CAAC;SACpC;QAED,gCAAY,GAAZ;YACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAC,CAAC,CAAC,CAAC;SACpC;;;;;QASD,4BAAQ,GAAR,UAAU,IAAa;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;QAED,+BAAW,GAAX,UAAa,IAAa;YACtB,IAAG,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,GAAC,CAAC,GAAC,CAAC;gBAAE,OAAO;YACnC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,GAAC,CAAC,CAAC;SAC7B;QAED,+BAAW,GAAX;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;SAC3B;QAEL,gBAAC;KAAA,IAAA;AAGD;QAA0BA,+BAAW;QAEjC,qBAAY,GAAY,EAAE,UAAyB;YAAnD,YACI,kBAAM,GAAG,EAAE,UAAU,CAAC,SAEzB;YADG,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;SAC1B;QAED,4BAAM,GAAN,UAAO,OAAgB;YACnB,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,WAAW,CAAC;SACxC;;;;;;;;QAWD,4BAAM,GAAN,UAAQ,EAAW,EAAE,OAAc;YAAnC,iBAcC;YAZG,OAAO,IAAI,CAAC,uBAAuB,CAAE,EAAE,CAAE;iBACxC,IAAI,CAAE,UAAA,EAAE;gBACL,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,KAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAE,OAAO,EAAC,OAAO;iBAClE,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,+CAA6C,EAAE,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBACrF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAOD,gCAAU,GAAV,UAAY,GAAe,EAAE,OAAc;YAA3C,iBAmBC;YAjBG,OAAO,IAAI,CAAC,uBAAuB,CAAE,GAAG,CAAE;iBACzC,IAAI,CAAE,UAAA,MAAM;gBAET,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAC3B,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK;oBACZ,GAAG,EAAE,KAAI,CAAC,OAAO,GAAG,OAAO;oBAC3B,MAAM,EAAE,EAAE;oBACV,OAAO,EAAE,OAAO;iBACnB,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,sDAAoD,CAAC,CAAC,OAAS,CAAC,CAAC;gBACrF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;;QAcD,8BAAQ,GAAR,UAAU,EAAW,EAAE,OAAc;YAArC,iBAcC;YAZG,OAAO,IAAI,CAAC,uBAAuB,CAAE,EAAE,CAAE;iBACxC,IAAI,CAAE,UAAA,EAAE;gBACL,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,KAAI,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,EAAE,OAAO,EAAC,OAAO;iBACpE,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,mDAAiD,EAAE,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBACzF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAQD,kCAAY,GAAZ,UAAc,GAAe,EAAE,OAAc;YAA7C,iBAmBC;YAjBG,OAAO,IAAI,CAAC,uBAAuB,CAAE,GAAG,CAAE;iBACzC,IAAI,CAAE,UAAA,MAAM;gBAET,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAC3B,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK;oBACZ,GAAG,EAAE,KAAI,CAAC,OAAO,GAAG,SAAS;oBAC7B,MAAM,EAAE,EAAE;oBACV,OAAO,EAAE,OAAO;iBACnB,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,0DAAwD,CAAC,CAAC,OAAS,CAAC,CAAC;gBACzF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;;;QAaD,6BAAO,GAAP,UAAS,EAAW,EAAE,OAAc;YAApC,iBAgBC;YAdG,OAAO,IAAI,CAAC,uBAAuB,CAAE,EAAE,CAAE;iBACxC,IAAI,CAAE,UAAC,EAAW;gBACf,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK;oBACZ,GAAG,EAAC,KAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE;oBACjC,OAAO,EAAC,OAAO;iBAClB,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,iDAA+C,EAAE,UAAK,CAAC,CAAC,OAAS,CAAC,CAAC;gBACvF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAQD,iCAAW,GAAX,UAAa,GAAe,EAAE,OAAc;YAA5C,iBAmBC;YAjBG,OAAO,IAAI,CAAC,uBAAuB,CAAE,GAAG,CAAE;iBACzC,IAAI,CAAE,UAAA,MAAM;gBAET,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAC3B,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK;oBACZ,GAAG,EAAE,KAAI,CAAC,OAAO,GAAG,QAAQ;oBAC5B,MAAM,EAAE,EAAE;oBACV,OAAO,EAAE,OAAO;iBACnB,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,wDAAsD,CAAC,CAAC,OAAS,CAAC,CAAC;gBACvF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;QAMD,+BAAS,GAAT,UAAW,GAAS;YAChB,IAAG,CAAC,GAAG;gBAAE,OAAO,IAAI,CAAC;YAErB,IAAG,CAAC,GAAG,CAAC,IAAI;gBAAE,OAAO,IAAI,CAAC;YAE1B,IAAG,SAAS,CAAC,YAAY,KAAK,GAAG,CAAC,IAAI,IAAI,OAAO,KAAK,GAAG,CAAC,IAAI,EAAE;gBAC5D,OAAO,GAAG,CAAC,EAAE,CAAC;aACjB;YAED,IAAG,CAAC,GAAG,CAAC,WAAW,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM;gBAAE,OAAO,IAAI,CAAC;YAC5D,IAAI,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,MAAM,CAAE,UAAC,EAAS,IAAK,OAAA,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,GAAA,CAAC,CAAC;YACvE,IAAG,CAAC,GAAG,CAAC,MAAM;gBAAE,OAAO,IAAI,CAAC;YAC5B,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAC,EAAE,CAAC,CAAC;SACrC;QAEL,kBAAC;KAjMD,CAA0B,WAAW;;QCnK/B,UAAU,GAA2B;QACvC,OAAO,EAAU,kBAAkB;QACnC,OAAO,EAAU,SAAS;QAC1B,OAAO,EAAU,SAAS;QAC1B,KAAK,EAAY,OAAO;QACxB,GAAG,EAAc,KAAK;QACtB,OAAO,EAAU,SAAS;QAC1B,SAAS,EAAQ,WAAW;QAC5B,OAAO,EAAU,SAAS;QAC1B,YAAY,EAAK,cAAc;QAC/B,OAAO,EAAU,SAAS;QAC1B,cAAc,EAAG,gBAAgB;QACjC,WAAW,EAAM,aAAa;QAC9B,KAAK,EAAY,OAAO;QACxB,OAAO,EAAU,SAAS;QAC1B,aAAa,EAAI,eAAe;QAChC,gBAAgB,EAAC,iBAAiB;QAClC,eAAe,EAAE,iBAAiB;QAClC,IAAI,EAAa,MAAM;QACvB,cAAc,EAAG,gBAAgB;QACjC,cAAc,EAAG,gBAAgB;QACjC,QAAQ,EAAS,kBAAkB;KACtC,CAAC;AAEF,QAAM,MAAM,GAA2B;QACnC,QAAQ,EAAI,UAAU;QACtB,SAAS,EAAG,WAAW;QACvB,MAAM,EAAM,QAAQ;QACpB,OAAO,EAAK,SAAS;QACrB,MAAM,EAAM,QAAQ;QACpB,OAAO,EAAK,SAAS;QACrB,MAAM,EAAM,QAAQ;QACpB,KAAK,EAAO,OAAO;QACnB,OAAO,EAAK,SAAS;QACrB,QAAQ,EAAI,UAAU;QACtB,QAAQ,EAAI,UAAU;KACzB,CAAC;IAGF,SAAS,WAAW,CAAC,IAAa;QAC9B,IAAI,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC;QAChC,IAAG,IAAI,EAAE;YACL,IAAI,IAAI,GAAc,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,UAAC,CAAQ,IAAG,OAAA,UAAU,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;;YAE7E,IAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAClB,OAAO,IAAI,CAAC;;iBAEX,IAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACxB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;oBACjB,OAAO,GAAG,CAAC;aAClB;SACJ;QACD,OAAO,MAAM,CAAC;KACjB;;;;AAOD;QAOI,eAAY,QAAiB,EAAE,IAAa,EAAE,IAAW,EAAE,OAAc;YAHjE,SAAI,GAAS,IAAI,CAAC;YAClB,YAAO,GAAS,IAAI,CAAC;YAGzB,IAAG,CAAC,QAAQ,IAAI,CAAE,IAAI,EAAE;gBACpB,MAAM,IAAI,KAAK,CAAC,iDAAiD;oBACjE,kDAAkD,CAAC,CAAC;aACvD;YACD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SAC5B;QACD,2BAAW,GAAX,cAAyB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;QAChD,uBAAO,GAAP,cAAqB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;QACxC,uBAAO,GAAP,cAAkB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;QACrC,uBAAO,GAAP,UAAQ,IAAU,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE;QACpE,0BAAU,GAAV,cAAqB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;QAC3C,0BAAU,GAAV,UAAW,OAAa;YACpB,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,OAAO,CAAC,EAAE,IAAI,OAAO,IAAI,IAAI,CAAC;SAC3D;QACL,YAAC;KAAA,IAAA;;;;;;IASD,SAAS,oBAAoB,CAAC,SAAkB,EAAE,IAAU;QACxD,IAAI,MAAM,GAAa,EAAa,CAAC;QACrC,IAAG,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;YAC/B,IAAG,SAAS,CAAC,GAAG,KAAK,IAAI,CAAC,IAAI,EAAE;gBAC5B,MAAM,CAAC,IAAI,CAAE,IAAI,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,CAAE,CAAC;gBAC1D,IAAG,MAAM,CAAC,SAAS,KAAK,SAAS,EAAE;oBAE/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,UAAC,UAAgB;wBAClC,IAAG,UAAU,CAAC,KAAK,EAAE;4BACjB,IAAI,WAAW,GAAG,oBAAoB,CAAC,SAAS,EAAE,UAAU,CAAC,KAAK,CAAC;iCAC9D,MAAM,CAAC,UAAA,CAAC,IAAE,OAAA,CAAC,KAAG,IAAI,GAAA,CAAC,CAAC;4BACzB,IAAG,WAAW,IAAI,WAAW,CAAC,MAAM,EAAE;gCAClC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;6BACvC;yBACJ;qBACJ,CAAC,CAAC;oBAEH,IAAG,IAAI,CAAC,SAAS,EAAE;wBACf,IAAI,UAAU,GAAG,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;6BAC3D,MAAM,CAAC,UAAA,CAAC,IAAE,OAAA,CAAC,KAAG,IAAI,GAAA,CAAC,CAAC;wBACzB,IAAG,UAAU,IAAI,UAAU,CAAC,MAAM;4BAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAE,UAAU,CAAE,CAAC;qBAC5C;iBACJ;aAEJ;iBAAM,IAAG,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,EAAE;gBACrC,MAAM,CAAC,IAAI,CAAE,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,CAAE,CAAC;gBAC5D,IAAG,MAAM,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;oBACxE,MAAM,CAAC,IAAI,CAAE,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;iBAC7E;aACJ;iBAAM;gBACH,IAAI,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtC,MAAM,CAAC,IAAI,CAAE,IAAI,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAE,CAAC;aACvD;SACJ;;;;;;QAMD,OAAO,MAAM,CAAC;KACjB;;;;IASD;QACI;SAAgB;QAChB,iDAAQ,GAAR,UACI,QAAiB,EACjB,KAAc,EACd,IAAW;;QAEX,OAAc;YAEd,OAAO,CAAC,GAAG,CAAE,SAAS,GAAG,QAAQ,GAAG,MAAM,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;SACtE;QACD,oDAAW,GAAX,UAAa,IAAI,EAAE,IAAI;YACnB,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAE,CAAC;SAClF;QACD,kDAAS,GAAT,UAAU,MAAe,EAAE,WAA2B;YAClD,OAAO,CAAC,GAAG,CAAE,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,SAAS,GAAG,WAAW,GAAE,UAAU,CAAC,CAAC;SAC3F;QACL,qCAAC;KAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCD;QAII,yBAAY,OAAc;YAFlB,aAAQ,GAAS,IAAI,CAAC;YAG1B,IAAG,OAAO,IAAI,QAAO,OAAO,CAAC,KAAK,QAAQ;gBACtC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAEjC,IAAG,CAAC,IAAI,CAAC,QAAQ;gBACb,IAAI,CAAC,WAAW,CAAC,IAAI,8BAA8B,EAAE,CAAC,CAAC;SAC9D;;;;QAKD,qCAAW,GAAX,UAAY,QAAc;YACtB,IAAG,QAAQ;gBACP,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAChC;;;;;QAMD,+BAAK,GAAL,UAAO,KAAa;YAChB,IAAI,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;;;;QAKD,kCAAQ,GAAR,UAAU,KAAqB;YAA/B,iBAwBC;YAvBG,IAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,KAAK;gBAAE,OAAO;YAE/D,IAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACrB,IAAI,MAAM,GAAa,KAAgB,CAAC;gBACxC,MAAM,CAAC,OAAO,CAAE,UAAC,GAAW,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAA,CAAE,CAAC;aAEzD;iBAAM;gBACH,IAAI,GAAG,GAAW,KAAc,CAAC;gBACjC,IAAI;oBACA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAClB,GAAG,CAAC,WAAW,EAAE,EACjB,GAAG,CAAC,OAAO,EAAE,EACb,GAAG,CAAC,OAAO,EAAE,EACb,GAAG,CAAC,UAAU,EAAE,CACnB,CAAC;iBACL;gBAAC,OAAM,CAAC,EAAE;oBACP,OAAO,CAAC,GAAG,CACP,oDAAoD;wBACpD,GAAG,CAAC,WAAW,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI;wBAC/C,GAAG,CAAC,OAAO,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,OAAO,CACrC,CAAC;iBACL;aACJ;SACJ;;;;;;;QASD,kCAAQ,GAAR,UAAU,IAAa,EAAE,IAAU;YAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC;SACf;;;;;;QAOD,qCAAW,GAAX,UACI,IAAa;;QAEb,IAAW;YAEX,IAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;gBAC3C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACzC;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAE,IAAI,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAE,CAAC;aACxE;SACJ;;;;;QAMD,mCAAS,GAAT,UAAW,MAAY,EAAE,WAA2B;YAChD,IAAG,IAAI,CAAC,QAAQ,CAAC,SAAS;gBACtB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SACpD;QAEL,sBAAC;KAAA;;ACpSD;QAAwBA,6BAAW;;;;;;;;QAU/B,mBAAY,GAAY,EAAE,UAAyB;mBAC/C,kBAAM,GAAG,EAAE,UAAU,CAAC;SACzB;QAED,0BAAM,GAAN,UAAO,OAAgB;YACnB,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,kBAAkB,CAAC;SAC/C;;;;;;QAOD,2BAAO,GAAP,UAAS,KAAe,EAAE,OAAc;YAAxC,iBAUC;YARG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;YACpC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC;iBACvC,KAAK,CAAC,UAAA,CAAC;gBACJ,KAAI,CAAC,QAAQ,CAAC,wBAAwB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;gBACpD,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,gCAA8B,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC/D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QAQD,yBAAK,GAAL,UAAO,KAAe,EAAE,OAAc;YAAtC,iBASC;YARG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;YAClC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC;iBACvC,KAAK,CAAC,UAAA,CAAC;gBACJ,KAAI,CAAC,QAAQ,CAAC,sBAAsB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;gBAClD,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,4BAA0B,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC3D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;;QASD,2BAAO,GAAP,UAAS,KAAe,EAAE,OAAc;YAAxC,iBASC;YARG,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;YACpC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC;iBACvC,KAAK,CAAC,UAAA,CAAC;gBACJ,KAAI,CAAC,QAAQ,CAAC,wBAAwB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;gBACpD,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,8BAA4B,CAAC,CAAC,OAAS,CAAC,CAAC;gBAC7D,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,CAAC;aACb,CAAC,CAAC;SACN;;;;;QAYD,2BAAO,GAAP,UAAS,GAAY,EAAE,KAAe,EAAE,OAAc;YAAtD,iBASC;YARG,OAAO,IAAI,CAAC,uBAAuB,CAAE,GAAG,CAAE;iBACzC,IAAI,CAAE,UAAC,GAAG;gBACP,IAAI,CAAC,GAA0B,KAAK,CAAC,QAAQ,EAAE,CAAC;gBAChD,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;oBACzB,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,EAAE,MAAM,EAAC,CAAC,EAAE,OAAO,EAAC,OAAO;iBACnD,CAAC,CAAC;gBACH,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B,CAAC,CAAC;SACN;QAwCL,gBAAC;KAlID,CAAwB,WAAW,GAkIlC;;ICjID;;;;;AAKA,QAAM,cAAc,GAAG,UAAS,GAAS,EAAE,OAAgB,EAAE,UAAyB;QAClF,IAAI,IAAI,GAAG,CAAC,QAAO,GAAG,CAAC,KAAK,QAAQ;YAChC,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QAC9C,IAAG,CAAC,IAAI;YAAE,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;QACjF,IAAG,CAAC,OAAO;YAAE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QACxD,IAAG,CAAC,UAAU;YAAE,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;QACvF,QAAO,IAAI;YACP,KAAK,SAAS,CAAC,KAAK,EAAI,OAAO,IAAI,YAAY,CAAG,OAAO,EAAE,UAAU,CAAC,CAAC;YACvE,KAAK,SAAS,CAAC,OAAO,EAAE,OAAO,IAAI,cAAc,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACvE,KAAK,SAAS,CAAC,GAAG,EAAM,OAAO,IAAI,UAAU,CAAK,OAAO,EAAE,UAAU,CAAC,CAAC;YACvE,KAAK,SAAS,CAAC,OAAO,EAAE,OAAO,IAAI,cAAc,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACvE,KAAK,SAAS,CAAC,OAAO,EAAE,OAAO,IAAI,cAAc,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACvE,SAAwB,OAAO,IAAI,WAAW,CAAI,OAAO,EAAE,UAAU,CAAC,CAAC;SAC1E;KACJ,CAAC;;;IC5BF;;;;AAIA,QAAa,aAAa,GAAG,OAAO,CAAC;IAErC,SACS,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}