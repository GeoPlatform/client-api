{"version":3,"file":"geoplatform-client-angular.js.map","sources":["ng://@geoplatform/client/angular/http/ng.ts"],"sourcesContent":["\nimport { NgZone } from \"@angular/core\";\nimport {\n    HttpClient, HttpRequest, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent //, HttpErrorResponse\n} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { GPHttpClient } from '@geoplatform/client';\n\n\nclass NG2HttpClient extends GPHttpClient {\n\n    //for use to ensure executed requests are handled inside angular zone\n    // (see issues with Observable.subscribe() and NgZone)\n    private zone : NgZone;\n\n    constructor(private http: HttpClient, options?: any) {\n        super(options);\n    }\n\n    setZone(zone : NgZone) {\n        this.zone = zone;\n    }\n\n    /**\n     *\n     */\n    createRequestOpts(options: {[key:string]:any}) : HttpRequest<any> {\n\n        let opts : any = {};\n\n        if(options.options && options.options.responseType) {\n            opts.responseType = options.options.responseType;\n        } else opts.responseType = 'json';  //default response type\n\n        if(options.params) {\n            opts.params = new HttpParams({fromObject: options.params});\n        }\n\n        if(options.data) {\n            opts.body = options.data;\n        }\n\n        opts.headers = new HttpHeaders();\n\n        //set authorization token if one was provided\n        let token = this.getToken();\n        if(token) {\n            opts.headers.set('Authorization', 'Bearer ' + token);\n        }\n\n        if(opts.body) {\n            return new HttpRequest<any>(options.method, options.url, opts.body, opts);\n        } else {\n            return new HttpRequest<any>(options.method, options.url, opts);\n        }\n\n    }\n\n    /**\n     * @param request - Angular HttpRequest object\n     * @return resolving the response or an error\n     */\n    execute(request : HttpRequest<any>) : Promise<any> {\n\n        let value : any = null;\n        return new Promise<any>( (resolve, reject) => {\n\n            this.http.request(request)\n            .pipe(\n                map( (event: HttpEvent<any>) => {\n                    if (event instanceof HttpResponse) {\n                        return (event as HttpResponse<any>).body;\n                    }\n                    return {};\n                })\n            )\n            .subscribe( (v: any) => { value = v; },\n                (err : Error) => { reject(err); },\n                () => {\n                    if(this.zone) {\n                        this.zone.run( () => {\n                            resolve(value);\n                        });\n                    } else {\n                        resolve(value);\n                    }\n                }\n            );\n        });\n\n\n        /*\n        .toPromise()\n        .then( (result) => Promise.resolve(result))\n        .catch( (err : any) => {\n            // console.log(\"NG2HttpClient.catch() - \" + JSON.stringify(err));\n            if (err instanceof HttpErrorResponse) {\n                let msg = \"An error occurred communicating with the GeoPlatform API\";\n                if(err.error && err.error.error && err.error.error.message) {\n                    msg = err.error.error.message;\n                } else if (err.error && err.error.message) {\n                    msg = err.error.message;\n                } else if(err.message) {\n                    msg = err.message;\n                }\n                throw new Error(msg);\n            }\n            return {};\n        });\n        */\n    }\n\n}\n\nexport default NG2HttpClient;\n"],"names":[],"mappings":";;;;;;;;AAEA,AASA,mBAAoB,SAAQ,YAAY;;;;;IAMpC,YAAoB,IAAgB,EAAE,OAAa;QAC/C,KAAK,CAAC,OAAO,CAAC,CAAC;QADC,SAAI,GAAJ,IAAI,CAAY;KAEnC;;;;;IAED,OAAO,CAAC,IAAa;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;;;;;;IAKD,iBAAiB,CAAC,OAA2B;;QAEzC,IAAI,IAAI,GAAS,EAAE,CAAC;QAEpB,IAAG,OAAO,eAAY,OAAO,YAAS,YAAY,EAAE;YAChD,IAAI,CAAC,YAAY,GAAG,OAAO,YAAS,YAAY,CAAC;SACpD;;YAAM,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAElC,IAAG,OAAO,YAAS;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,EAAC,UAAU,EAAE,OAAO,UAAO,EAAC,CAAC,CAAC;SAC9D;QAED,IAAG,OAAO,UAAO;YACb,IAAI,CAAC,IAAI,GAAG,OAAO,QAAK,CAAC;SAC5B;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;;QAGjC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAG,KAAK,EAAE;YACN,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,CAAC;SACxD;QAED,IAAG,IAAI,CAAC,IAAI,EAAE;YACV,OAAO,IAAI,WAAW,CAAM,OAAO,YAAS,OAAO,SAAM,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7E;aAAM;YACH,OAAO,IAAI,WAAW,CAAM,OAAO,YAAS,OAAO,SAAM,IAAI,CAAC,CAAC;SAClE;KAEJ;;;;;IAMD,OAAO,CAAC,OAA0B;;QAE9B,IAAI,KAAK,GAAS,IAAI,CAAC;QACvB,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;YAErC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;iBACzB,IAAI,CACD,GAAG,CAAE,CAAC,KAAqB;gBACvB,IAAI,KAAK,YAAY,YAAY,EAAE;oBAC/B,OAAO,mBAAC,KAA0B,GAAE,IAAI,CAAC;iBAC5C;gBACD,OAAO,EAAE,CAAC;aACb,CAAC,CACL;iBACA,SAAS,CAAE,CAAC,CAAM,OAAO,KAAK,GAAG,CAAC,CAAC,EAAE,EAClC,CAAC,GAAW,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EACjC;gBACI,IAAG,IAAI,CAAC,IAAI,EAAE;oBACV,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE;wBACX,OAAO,CAAC,KAAK,CAAC,CAAC;qBAClB,CAAC,CAAC;iBACN;qBAAM;oBACH,OAAO,CAAC,KAAK,CAAC,CAAC;iBAClB;aACJ,CACJ,CAAC;SACL,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;KAsBN;CAEJ;;;;;;;;;;;;;;;;;;;"}
