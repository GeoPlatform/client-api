{"version":3,"file":"geoplatform-client-angular.js.map","sources":["ng://@geoplatform/client/angular/http/ng.ts"],"sourcesContent":["\nimport * as Q from 'q';\n\nimport { NgZone } from \"@angular/core\";\nimport {\n    HttpClient, HttpRequest, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent //, HttpErrorResponse\n} from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n// import 'rxjs/add/operator/toPromise';\n\nimport { GPHttpClient } from '@geoplatform/client';\n\n\nclass NG2HttpClient extends GPHttpClient {\n\n    //for use to ensure executed requests are handled inside angular zone\n    // (see issues with Observable.subscribe() and NgZone)\n    private zone : NgZone;\n\n    constructor(private http: HttpClient, options?: any) {\n        super(options);\n    }\n\n    setZone(zone : NgZone) {\n        this.zone = zone;\n    }\n\n    /**\n     *\n     */\n    createRequestOpts(options: {[key:string]:any}) : HttpRequest<any> {\n\n        let opts : any = {};\n\n        if(options.options && options.options.responseType) {\n            opts.responseType = options.options.responseType;\n        } else opts.responseType = 'json';  //default response type\n\n        if(options.params) {\n            opts.params = new HttpParams({fromObject: options.params});\n        }\n\n        if(options.data) {\n            opts.body = options.data;\n        }\n\n        opts.headers = new HttpHeaders();\n\n        //set authorization token if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers.set('Authorization', 'Bearer ' + token);\n            }\n        }\n\n        if(opts.body) {\n            return new HttpRequest<any>(options.method, options.url, opts.body, opts);\n        } else {\n            return new HttpRequest<any>(options.method, options.url, opts);\n        }\n\n    }\n\n    /**\n     * @param request - Angular HttpRequest object\n     * @return resolving the response or an error\n     */\n    execute(request : HttpRequest<any>) : Q.Promise<any> {\n\n        let value : any = null;\n        let deferred = Q.defer();\n\n        let promise = this.http.request(request)\n        .map( (event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n                return (event as HttpResponse<any>).body;\n            }\n            return {};\n        })\n        .subscribe( (v: any) => { value = v; },\n            (err : Error) => { deferred.reject(err); },\n            () => {\n                if(this.zone) {\n                    this.zone.run( () => { deferred.resolve(value); });\n                } else {\n                    deferred.resolve(value);\n                }\n            }\n        );\n        return deferred.promise;\n\n        /*\n        .toPromise()\n        .then( (result) => Q.resolve(result))\n        .catch( (err : any) => {\n            // console.log(\"NG2HttpClient.catch() - \" + JSON.stringify(err));\n            if (err instanceof HttpErrorResponse) {\n                let msg = \"An error occurred communicating with the GeoPlatform API\";\n                if(err.error && err.error.error && err.error.error.message) {\n                    msg = err.error.error.message;\n                } else if (err.error && err.error.message) {\n                    msg = err.error.message;\n                } else if(err.message) {\n                    msg = err.message;\n                }\n                throw new Error(msg);\n            }\n            return {};\n        });\n        */\n    }\n\n}\n\nexport default NG2HttpClient;\n"],"names":["Q.defer"],"mappings":";;;;;;;;;AACA,AAaA,mBAAoB,SAAQ,YAAY;;;;;IAMpC,YAAoB,IAAgB,EAAE,OAAa;QAC/C,KAAK,CAAC,OAAO,CAAC,CAAC;QADC,SAAI,GAAJ,IAAI,CAAY;KAEnC;;;;;IAED,OAAO,CAAC,IAAa;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;;;;;;IAKD,iBAAiB,CAAC,OAA2B;;QAEzC,IAAI,IAAI,GAAS,EAAE,CAAC;QAEpB,IAAG,OAAO,eAAY,OAAO,YAAS,YAAY,EAAE;YAChD,IAAI,CAAC,YAAY,GAAG,OAAO,YAAS,YAAY,CAAC;SACpD;;YAAM,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAElC,IAAG,OAAO,YAAS;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,EAAC,UAAU,EAAE,OAAO,UAAO,EAAC,CAAC,CAAC;SAC9D;QAED,IAAG,OAAO,UAAO;YACb,IAAI,CAAC,IAAI,GAAG,OAAO,QAAK,CAAC;SAC5B;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;;QAGjC,IAAG,IAAI,CAAC,KAAK,EAAE;;YACX,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACzB,IAAG,KAAK,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,CAAC;aACxD;SACJ;QAED,IAAG,IAAI,CAAC,IAAI,EAAE;YACV,OAAO,IAAI,WAAW,CAAM,OAAO,YAAS,OAAO,SAAM,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7E;aAAM;YACH,OAAO,IAAI,WAAW,CAAM,OAAO,YAAS,OAAO,SAAM,IAAI,CAAC,CAAC;SAClE;KAEJ;;;;;IAMD,OAAO,CAAC,OAA0B;;QAE9B,IAAI,KAAK,GAAS,IAAI,CAAC;;QACvB,IAAI,QAAQ,GAAGA,KAAO,EAAE,CAAC;;QAEzB,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;aACvC,GAAG,CAAE,CAAC,KAAqB;YACxB,IAAI,KAAK,YAAY,YAAY,EAAE;gBAC/B,OAAO,mBAAC,KAA0B,GAAE,IAAI,CAAC;aAC5C;YACD,OAAO,EAAE,CAAC;SACb,CAAC;aACD,SAAS,CAAE,CAAC,CAAM,OAAO,KAAK,GAAG,CAAC,CAAC,EAAE,EAClC,CAAC,GAAW,OAAO,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EAC1C;YACI,IAAG,IAAI,CAAC,IAAI,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,QAAQ,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;aACtD;iBAAM;gBACH,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC3B;SACJ,CACJ,CAAC;QACF,OAAO,QAAQ,CAAC,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;KAqB3B;CAEJ;;;;;;;;;;;;;;"}
