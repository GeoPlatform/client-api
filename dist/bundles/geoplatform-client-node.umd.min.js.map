{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@geoplatform/client/node/http/node.ts","ng://@geoplatform/client/node/services/proxies/base.ts","ng://@geoplatform/client/node/services/proxies/item.ts","ng://@geoplatform/client/node/services/proxies/service.ts","ng://@geoplatform/client/node/services/proxies/layer.ts","ng://@geoplatform/client/node/services/proxies/dataset.ts","ng://@geoplatform/client/node/services/proxies/map.ts","ng://@geoplatform/client/node/services/proxies/gallery.ts","ng://@geoplatform/client/node/services/proxies/utils.ts","ng://@geoplatform/client/node/services/proxies/agol.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","_super","NodeHttpClient","__extends","__","this","constructor","prototype","create","tslib_1.__extends","GPHttpClient","createRequestOpts","options","opts","method","url","json","timeout","fs","require","Error","file","value","createReadStream","path","filename","originalFilename","assign","token","bearer","o","execute","_this","deferred","Q.defer","request","error","response","body","checkAndHandleError","then","resolve","catch","e","reject","promise","props","message","status","code","Q.reject","connect","statusCode","sidx","indexOf","eidx","substring","uri","pathname","JSON","parse","err","Q.resolve","call","ServiceProxy","bindRoutes","router","routes","paths","forEach","route","key","req","res","next","svc","getService","auth","execFn","result","respFn","onError","finally","onFinish","getClient","needsAuth","accessToken","logger","warn","debug","jwt","Config","client","service","serviceClass","ItemService","setLogger","Routes","search","query","get","params","id","save","remove","end","patch","export","format","mimeType","headers","disposition","set","setHeader","send","getUri","Query","fields","input","files","import","associations","versions","version","types","about","harvest","liveTest","statistics","style","describe","validate","locate","q","parseFile","capabilities","searchItems","searchGroups","searchOrgs","getItem","getGroup","getOrg","ItemServiceProxy","express","Router","pathBaseDefault","ServiceServiceProxy","ServiceService","LayerServiceProxy","LayerService","DatasetServiceProxy","DatasetService","MapServiceProxy","MapService","GalleryServiceProxy","GalleryService","UtilsServiceProxy","UtilsService","AgolServiceProxy","AgolService"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nimport * as Q from 'q';\nimport { GPHttpClient } from '@geoplatform/client';\n\n\nclass NodeHttpClient extends GPHttpClient {\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options ?: { [key:string] : any }) {\n        super(options);\n    }\n\n    createRequestOpts(options : { [key:string] : any }) : any {\n\n        let opts : {[key:string]: any} = {\n            method: options.method,\n            url: options.url,\n            json: false !== options.json,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.params) {\n            opts.qs = options.params;\n        }\n\n        if(options.file) {\n            const fs = require('fs');\n            if(!fs) throw new Error(\"Module 'fs' not available\");\n            opts.formData = {\n                file: {\n                    value:  fs.createReadStream(options.file.path),\n                    options: {\n                        filename: options.file.originalFilename\n                    }\n                }\n            };\n            Object.assign(opts.formData, options.data||{});\n\n        } else if(options.data) {\n            if(options.formData) {\n                opts.formData = options.data;\n            } else {\n                opts.body = options.data;\n            }\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.auth = { 'bearer': token };\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        // console.log(JSON.stringify(opts));\n\n        return opts;\n    }\n\n\n\n    /**\n     *\n     */\n    execute(options : any) : Q.Promise<any> {\n        let deferred = Q.defer();\n\n        const request = require('request');\n        if(!request) {\n            throw new Error(\"Module 'request' not available\");\n        }\n        // require('request-debug')(request);\n\n        request(options, (error : any, response : any, body : any) => {\n            this.checkAndHandleError(error, response)\n            .then( () =>  {\n                if(options.json === false)\n                    deferred.resolve( response );\n                else\n                    deferred.resolve( body );\n            })\n            .catch( e => deferred.reject(e) );\n        });\n        return deferred.promise;\n    }\n\n\n    /**\n     *\n     */\n    checkAndHandleError (error : any, response : any) : Q.Promise<any> {\n\n        let props : { [key:string]: any } = {\n            message: null,\n            error: null,    //error type\n            status: 200\n        };\n\n        if(error) {\n            // Logger.debug(\"Error generated by request library: \" + error.code);\n\n            if(error.code === 'ETIMEDOUT' || error.code === 'ESOCKETTIMEDOUT') {\n\n                props.status = 500;\n                props.error = \"Connection Timeout\";\n                props.message = \"The response from the service took too long to read\";\n\n                if(error.connect === true) {\n                    props.message = \"Unable to establish a connection to the service\";\n                }\n\n            } else {\n                return Q.reject(error);\n            }\n\n        } else if(response.statusCode < 200 || response.statusCode > 204) {\n\n            // Logger.debug('Error returned by remote endpoint (' + response.statusCode + ')');\n            // Logger.debug(JSON.stringify(response));\n\n            props.status = response.statusCode;\n\n            if(response.body && typeof(response.body) === 'object') {\n                props = response.body;\n                props.status = props.status || response.statusCode;\n                props.message = props.message || \"An error occurred communicating with service\";\n\n                if(response.statusCode === 409) {\n                    let sidx = response.body.message.indexOf(\" \");\n                    let eidx = response.body.message.indexOf(' already exists');\n                    if(sidx >= 0 && eidx > sidx) {\n                        props.item = response.body.message.substring(sidx+1, eidx);\n                    }\n                }\n\n            } else {\n\n                switch(response.statusCode) {\n                    case 404 :\n                        props.error = \"Not Found\";\n                        props.message = response.request.uri.pathname + \" cannot be found\";\n                        break;\n                    case 401 :\n                        props.error = \"Unauthenticated\";\n                        props.message = \"You are not authenticated\";\n                        break;\n                    case 403 :\n                        props.error = \"Unauthorized\";\n                        props.message = \"You are not authorized to access \" + response.request.uri.pathname;\n                        break;\n                    case 409 :\n                        props.error = \"Conflict\";\n                        props.message = \"Item already exists\";\n\n                        // pattern received is: { ..., message: 'Resource <identifier> already exists', ... }\n                        try {\n                            let json = JSON.parse(response.body);\n                            let sidx = json.message.indexOf(\" \");\n                            let eidx = json.message.indexOf(' already exists');\n                            if(sidx >= 0 && eidx > sidx) {\n                                props.item = json.message.substring(sidx+1, eidx);\n                            }\n                        } catch( e ) {\n                            props.message += '.  Unable to extract existing identifier from service response';\n                        }\n                        break;\n\n                    default:\n\n                        try {\n                            let json = JSON.parse(response.body);\n                            props = json;\n                            props.status = response.statusCode;\n                            // Logger.debug(\"PARSED ERROR: \" + JSON.stringify(props));\n\n                        } catch (e) {\n                            props.error = \"Server Error\";\n                            props.message = response.body;\n                            // Logger.debug(\"DEFAULTED ERROR: \" + JSON.stringify(props));\n                        }\n                }\n\n            }\n\n        }\n\n        if( props.status < 200 || props.status > 204 ) {\n\n            props.error = props.error || \"Server Error\";\n            props.status = props.status || response.statusCode;\n            props.message = props.message || \"An error occurred communicating with service\";\n\n            let err = new Error(props.message);\n            Object.assign(err, props);\n\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err);\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + JSON.stringify(err));\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err.message);\n            return Q.reject(err);\n        }\n\n        return Q.resolve(null);\n    }\n\n}\n\n\nexport default NodeHttpClient;\n","\n\nimport NodeHttpClient from '../../http/node';\nimport { Config, ItemService } from '@geoplatform/client';\n\n\n\nconst ServiceProxy = {\n\n    /**\n     * @param {Router} router - ExpressJS router instance\n     * @param {array[object]} routes - list of routes to map to the router\n     * @param {object} options - additional configuration needed\n     */\n    bindRoutes: function(router : any, routes : any[], options ?: any) {\n\n        options = options || {};\n        let paths = options.paths || {};\n\n        routes.forEach( route => {\n\n            if(paths[route.key] === false) return;  //disabled endpoint\n            if(!paths[route.key] && !route.path) return; //something is wrong with route\n\n            // let path = '/' + ( paths[route.key] || route.pathFn(pathBase) );\n            let path = '/' + ( paths[route.key] || route.path );\n\n            // console.log(`Binding Service Route [${route.method}] ${path}`)\n            router[route.method]( path, (req : any, res : any, next : Function) => {\n                // console.log(`Executing Service Route [${route.method}] ${path}`)\n                // console.log(JSON.stringify(req.params));\n                // console.log(\" \");\n                let svc = this.getService(req, route.auth, options);\n                let promise = route.execFn(svc, req)\n                promise.then( (result:any) => {\n                    if(route.respFn)\n                        route.respFn(result, res, next);\n                    else\n                        res.json(result)\n                })\n                .catch( (err : Error) => {\n                    if(options.onError)\n                        options.onError(route.key, err);\n                    next(err);\n                })\n                .finally( () => {\n                    if(options.onFinish)\n                        options.onFinish(route.key, req, res);\n                });\n            })\n        });\n\n    },\n\n    /**\n    * @param {HttpRequest} req - incoming http request being proxied\n    * @param {boolean} needsAuth - flag indicating if the request must provide an authentication token\n    * @param {object} options - additional configuration options\n    * @return {HttpClient} client to use to make requests to GeoPlatform API endpoint\n    */\n    getClient: function(req : any, needsAuth : boolean, options ?: any) {\n\n        let token = req.accessToken || null;\n        if(needsAuth) {\n            if(!token && options.logger)\n                options.logger.warn(\"ServiceProxy.getClient() - No Access Token was provided on incoming request header!\");\n\n            else if(!!options.debug && options.logger) {\n                options.logger.debug(`ServiceProxy.getClient() - Token: ${token}`);\n                options.logger.debug(`ServiceProxy.getClient() - JWT: ${req.jwt}`);\n            }\n        }\n\n        return new NodeHttpClient({\n            timeout: Config.timeout,\n            token: needsAuth ? token : null\n        });\n    },\n\n\n    /**\n     * @param {HttpRequest} req - incoming http request being proxied\n     * @param {boolean} needsAuth - flag indicating if request requires authorization token\n     * @param {object} options - additional configuration options\n     */\n    getService: function(req : any, needsAuth : boolean, options ?: any) {\n        let client = this.getClient(req, needsAuth, options);\n        let svcClass = options.serviceClass || ItemService;\n        let service = new svcClass(Config.ualUrl, client);\n        if(options.logger) {\n            service.setLogger(options.logger);\n        }\n        return service;\n    }\n};\n\nexport default ServiceProxy;\n","\nimport { Query, ItemService } from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'items',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'items/:id',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'items',\n        auth: true,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.remove(req.params.id);\n        },\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'items/:id/export',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.export(req.params.id, req.query.format); },\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'uri',\n        method: 'post',\n        path: 'items/uri',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.getUri(req.body);\n        },\n        respFn: function(result : any, res : any) {\n            res.json({ uri: result });\n        }\n    },\n    {\n        key: 'exists',\n        method: 'post',\n        path: 'items/exists',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.getUri(req.body)\n            .then( uri => {\n                let fields = ['serviceType','services','scheme','themes','publishers','keywords'];\n                let query : Query = new Query().uri(uri).fields(fields);\n                return svc.search(query);\n            });\n        }\n    },\n    {\n        key: 'import',\n        method: 'post',\n        path: 'items/import',\n        auth: true,\n        execFn: function(svc : ItemService, req : any) {\n            let input = req.body.url || req.files.file;\n            return svc.import(input, req.query.format);\n        }\n    },\n    {\n        key: 'associations',\n        method: 'get',\n        path: 'items/:id/associations',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.associations(req.params.id, req.query); }\n    },\n    {\n        key: 'versions',\n        method: 'get',\n        path: 'items/:id/versions',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.versions(req.params.id); }\n    },\n    {\n        key: 'getVersion',\n        method: 'get',\n        path: 'items/:id/versions/:version',\n        auth: false,\n        execFn: function(svc : ItemService, req : any) {\n            return svc.get(req.params.id, { version: req.params.version });\n        }\n    }\n\n    // TODO findMultiple\n];\n\n/**\n *\n */\nfunction bindRoutes(router : any, options ?: any) {\n    //bind common endpoints\n    options.pathBaseDefault = \"items\";\n    options.serviceClass = ItemService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n}\n\n\n\n\n/**\n * ItemServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction ItemServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"ItemServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"ItemServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    bindRoutes(router, options);\n\n    return router;\n}\n\nexport default ItemServiceProxy;\n","\n\nimport {ServiceService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'services',\n        auth: false,\n        execFn: function(svc: ServiceService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'services/:id',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'services',\n        auth: true,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.remove(req.params.id);\n        },\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'services/:id/export',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.export(req.params.id, req.query.format);\n        },\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'types',\n        method: 'get',\n        path: 'serviceTypes',\n        auth: false,\n        execFn: function(svc : ServiceService) {\n            return svc.types();\n        }\n    },\n    {\n        key: 'import',\n        method: 'post',\n        path: 'services/import',\n        auth: true,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.import(req.body);\n        }\n    },\n    {\n        key: 'about',\n        method: 'get',\n        path: 'services/:id/about',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.about(req.params.id);\n        }\n    },\n    {\n        key: 'harvest',\n        method: 'get',\n        path: 'services/:id/harvest',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.harvest(req.params.id);\n        }\n    },\n    {\n        key: 'test',\n        method: 'get',\n        path: 'services/:id/test',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.liveTest(req.params.id);\n        }\n    },\n    {\n        key: 'statistics',\n        method: 'get',\n        path: 'services/:id/statistics',\n        auth: false,\n        execFn: function(svc : ServiceService, req : any ) {\n            return svc.statistics(req.params.id);\n        }\n    }\n];\n\n\n\n\n/**\n *\n */\nfunction ServiceServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"ServiceServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"ServiceServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = ServiceService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default ServiceServiceProxy;\n","\n\nimport {LayerService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'layers',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'layers/:id',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'layers',\n        auth: true,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.remove(req.params.id); }\n            ,\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'layers/:id/export',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.export(req.params.id, req.query.format); }\n            ,\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'style',\n        method: 'get',\n        path: 'layers/:id/style',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.style(req.params.id);\n        }\n    },\n    {\n        key: 'describe',\n        method: 'post',\n        path: 'layers/:id/describe',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.describe(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'validate',\n        method: 'post',\n        path: 'layers/:id/validate',\n        auth: false,\n        execFn: function(svc : LayerService, req : any) {\n            return svc.validate(req.params.id, req.body);\n        }\n    }\n];\n\n\n\n/**\n *\n */\nfunction LayerServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"LayerServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"LayerServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = LayerService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default LayerServiceProxy;\n","\n\nimport {DatasetService} from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'datasets',\n        auth: false,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'datasets/:id',\n        auth: false,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'datasets',\n        auth: true,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.remove(req.params.id);\n        },\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'datasets/:id/export',\n        auth: false,\n        execFn: function(svc : DatasetService, req : any) {\n            return svc.export(req.params.id, req.query.format);\n        },\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n\n/**\n * DatasetServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction DatasetServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"DatasetServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"DatasetServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = DatasetService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default DatasetServiceProxy;\n","\n\nimport {MapService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'maps',\n        auth: false,\n        execFn: function(svc : MapService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'maps/:id',\n        auth: false,\n        execFn: function(svc : MapService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'maps',\n        auth: true,\n        execFn: function(svc : MapService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc : MapService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc : MapService, req : any) {\n            return svc.remove(req.params.id); }\n            ,\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc : MapService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'maps/:id/export',\n        auth: false,\n        execFn: function(svc : MapService, req : any) {\n            return svc.export(req.params.id, req.query.format); }\n            ,\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n/**\n * MapServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction MapServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"MapServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"MapServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = MapService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default MapServiceProxy;\n","\n\nimport {GalleryService} from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'galleries',\n        auth: false,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'galleries/:id',\n        auth: false,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'galleries',\n        auth: true,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.remove(req.params.id);\n        },\n        respFn: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'galleries/:id/export',\n        auth: false,\n        execFn: function(svc : GalleryService, req : any) {\n            return svc.export(req.params.id, req.query.format);\n        },\n        respFn: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n/**\n * GalleryServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction GalleryServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"GalleryServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"GalleryServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = GalleryService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default GalleryServiceProxy;\n","\n\nimport {UtilsService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\n\nconst Routes = [\n    {\n        key: 'locate',\n        method: 'get',\n        path: 'utils/locate',\n        auth: false,\n        execFn: function(svc : UtilsService, req : any) {\n            return svc.locate(req.query.q);\n        }\n    },\n    {\n        key: 'parseFile',\n        method: 'post',\n        path: 'utils/parse',\n        auth: false,\n        execFn: function(svc : UtilsService, req : any) {\n            return svc.parseFile(req.files.file, req.body.format);\n        }\n    },\n    {\n        key: 'capabilities',\n        method: 'get',\n        path: 'utils/capabilities',\n        auth: false,\n        execFn: function(svc : UtilsService, req : any) {\n            return svc.capabilities(null, req.query);\n        }\n    },\n    {\n        key: 'capabilitiesProperty',\n        method: 'get',\n        path: 'utils/capabilities/:id',\n        auth: false,\n        execFn: function(svc : UtilsService, req : any) {\n            return svc.capabilities(req.params.id, req.query);\n        }\n    }\n];\n\n\n\n/**\n *\n */\nfunction UtilsServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"UtilsServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"UtilsServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = UtilsService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default UtilsServiceProxy;\n","\n\nimport { AgolService } from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\n\nconst Routes = [\n    {\n        key: 'searchItems',\n        method: 'get',\n        path: 'agol/items',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.searchItems(req.query);\n        }\n    },\n    {\n        key: 'searchGroups',\n        method: 'get',\n        path: 'agol/groups',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.searchGroups(req.query);\n        }\n    },\n    {\n        key: 'searchOrgs',\n        method: 'get',\n        path: 'agol/orgs',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.searchOrgs(req.query);\n        }\n    },\n    {\n        key: 'getItem',\n        method: 'get',\n        path: 'agol/items/:id',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.getItem(req.params.id);\n        }\n    },\n    {\n        key: 'getGroup',\n        method: 'get',\n        path: 'agol/groups/:id',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.getGroup(req.params.id);\n        }\n    },\n    {\n        key: 'getOrg',\n        method: 'get',\n        path: 'agol/orgs/:id',\n        auth: false,\n        execFn: function(svc : AgolService, req : any) {\n            return svc.getOrg(req.params.id);\n        }\n    }\n];\n\n\n\n/**\n *\n */\nfunction AgolServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"AgolServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"AgolServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = AgolService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default AgolServiceProxy;\n"]}