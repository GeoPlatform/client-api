{"version":3,"file":"geoplatform.client.js","sources":["../../src/shared/polyfills.js","../../src/http/jq.js","../../src/http/ng.js","../../src/http/node.js","../../src/shared/types.js","../../src/services/item.js","../../src/services/dataset.js","../../src/services/map.js","../../src/services/layer.js","../../src/shared/parameters.js","../../src/shared/query.js","../../src/services/service.js","../../src/services/gallery.js","../../src/services/utils.js","../../src/services/agol.js","../../src/shared/config.js","../../src/services/proxies/base.js","../../src/services/proxies/item.js","../../src/services/proxies/service.js","../../src/services/proxies/layer.js","../../src/services/proxies/dataset.js","../../src/services/proxies/map.js","../../src/services/proxies/gallery.js","../../src/services/proxies/utils.js","../../src/services/proxies/agol.js","../../src/shared/kg-query.js","../../src/services/kg.js","../../src/shared/classifiers.js","../../src/shared/query-factory.js","../../src/services/factory.js","../../src/services/tracking.js"],"sourcesContent":["if (typeof Object.assign != 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign(target, varArgs) { // .length of function is 2\n      'use strict';\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n\n\nexport default {};\n","\nimport Q from 'q';\n\nclass JQueryHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options) {\n        options = options || {};\n        this.setTimeout(options.timeout||Config.timeout||30000);\n        this.setAuthToken(options.token);\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true)\n            opts.dataType = 'json';\n\n        if(options.params) {\n            opts.data = options.params;\n            opts.processData = true;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n            opts.processData = options.processData || false;\n            opts.contentType = 'application/json';\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n\n    execute(opts) {\n\n        if(typeof(jQuery) === 'undefined') {\n            throw new Error(\"jQuery is not available. Ensure it is included in your application\");\n        }\n        let d = Q.defer();\n        opts.success = function(data) { d.resolve(data); };\n        opts.error = function(xhr, status, message) { d.reject(new Error(message)); };\n        jQuery.ajax(opts);\n        return d.promise;\n    }\n\n}\n\nexport default JQueryHttpClient;\n","\nimport Q from 'q';\n\nclass NGHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     * @param {Object} options.$http - angular $http service instance\n     */\n    constructor(options) {\n        if(typeof(angular) === 'undefined')\n            throw new Error(\"Angular not defined\");\n\n        options = options || {};\n        this.setTimeout(options.timeout||Config.timeout||30000);\n        this.setAuthToken(options.token);\n\n        if(options.$http)\n            this.$http = options.$http;\n\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true || 'json' === options.responseType)\n            opts.dataType = 'json';\n        else if('text' === options.responseType)\n            opts.dataType = 'text';\n\n        if(options.params) {\n            opts.params = options.params;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n        }\n\n        //set authorization token if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n                opts.useXDomain = true;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n    execute(opts) {\n\n        if(typeof(angular) === 'undefined')\n            throw new Error(\"Angular is not defined, ensure you have included it as a dependency in your application\");\n\n        let $http = this.$http || angular.injector(['ng']).get('$http');\n        return Q.resolve( $http )\n        .then($http => {\n            if(typeof($http) === 'undefined')\n                throw new Error(\"Angular $http not resolved\");\n\n            // console.log(opts);\n            return $http(opts);\n        })\n        .then(response=>response.data)\n        .catch(response=>Q.reject(response.data));\n    }\n\n}\n\nexport default NGHttpClient;\n","\nimport Q from 'q';\n\nclass NodeHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options) {\n        options = options || {};\n        this.setTimeout(options.timeout||Config.timeout||30000);\n        this.setAuthToken(options.token);\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            json: false !== options.json,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.params) {\n            opts.qs = options.params;\n        }\n\n        if(options.file) {\n            const fs = require('fs');\n            if(!fs) throw new Error(\"Module 'fs' not available\");\n            opts.formData = {\n                file: {\n                    value:  fs.createReadStream(options.file.path),\n                    options: {\n                        filename: options.file.originalFilename\n                    }\n                }\n            };\n            Object.assign(opts.formData, options.data||{});\n\n        } else if(options.data) {\n            if(options.formData) {\n                opts.formData = options.data;\n            } else {\n                opts.body = options.data;\n            }\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.auth = { 'bearer': token };\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        // console.log(JSON.stringify(opts));\n\n        return opts;\n    }\n\n\n\n    /**\n     *\n     */\n    execute(options) {\n        let deferred = Q.defer();\n\n        const request = require('request');\n        if(!request) {\n            throw new Error(\"Module 'request' not available\");\n        }\n        // require('request-debug')(request);\n\n        request(options, (error, response, body) => {\n            this.checkAndHandleError(error, response)\n            .then( () =>  {\n                if(options.json === false)\n                    deferred.resolve( response );\n                else\n                    deferred.resolve( body );\n            })\n            .catch( e => deferred.reject(e) );\n        });\n        return deferred.promise;\n    }\n\n\n    /**\n     *\n     */\n    checkAndHandleError (error, response) {\n\n        let props = {\n            message: null,\n            error: null,    //error type\n            status: 200\n        };\n\n        if(error) {\n            // Logger.debug(\"Error generated by request library: \" + error.code);\n\n            if(error.code === 'ETIMEDOUT' || error.code === 'ESOCKETTIMEDOUT') {\n\n                props.status = 500;\n                props.error = \"Connection Timeout\";\n                props.message = \"The response from the service took too long to read\";\n\n                if(error.connect === true) {\n                    props.message = \"Unable to establish a connection to the service\";\n                }\n\n            } else {\n                return Q.reject(error);\n            }\n\n        } else if(response.statusCode < 200 || response.statusCode > 204) {\n\n            // Logger.debug('Error returned by remote endpoint (' + response.statusCode + ')');\n            // Logger.debug(JSON.stringify(response));\n\n            props.status = response.statusCode;\n\n            if(response.body && typeof(response.body) === 'object') {\n                props = response.body;\n                props.status = props.status || response.statusCode;\n                props.message = props.message || \"An error occurred communicating with service\";\n\n                if(response.statusCode === 409) {\n                    let sidx = response.body.message.indexOf(\" \");\n                    let eidx = response.body.message.indexOf(' already exists');\n                    if(sidx >= 0 && eidx > sidx) {\n                        props.item = response.body.message.substring(sidx+1, eidx);\n                    }\n                }\n\n            } else {\n\n                switch(response.statusCode) {\n                    case 404 :\n                        props.error = \"Not Found\";\n                        props.message = response.request.uri.pathname + \" cannot be found\";\n                        break;\n                    case 401 :\n                        props.error = \"Unauthenticated\";\n                        props.message = \"You are not authenticated\";\n                        break;\n                    case 403 :\n                        props.error = \"Unauthorized\";\n                        props.message = \"You are not authorized to access \" + response.request.uri.pathname;\n                        break;\n                    case 409 :\n                        props.error = \"Conflict\";\n                        props.message = \"Item already exists\";\n\n                        // pattern received is: { ..., message: 'Resource <identifier> already exists', ... }\n                        try {\n                            let json = JSON.parse(response.body);\n                            let sidx = json.message.indexOf(\" \");\n                            let eidx = json.message.indexOf(' already exists');\n                            if(sidx >= 0 && eidx > sidx) {\n                                props.item = json.message.substring(sidx+1, eidx);\n                            }\n                        } catch( e ) {\n                            message += '.  Unable to extract existing identifier from service response';\n                        }\n                        break;\n\n                    default:\n\n                        try {\n                            let json = JSON.parse(response.body);\n                            props = json;\n                            props.status = response.statusCode;\n                            // Logger.debug(\"PARSED ERROR: \" + JSON.stringify(props));\n\n                        } catch (e) {\n                            props.error = \"Server Error\";\n                            props.message = response.body;\n                            // Logger.debug(\"DEFAULTED ERROR: \" + JSON.stringify(props));\n                        }\n                }\n\n            }\n\n        }\n\n        if( props.status < 200 || props.status > 204 ) {\n\n            props.error = props.error || \"Server Error\";\n            props.status = props.status || response.statusCode;\n            props.message = props.message || \"An error occurred communicating with service\";\n\n            let err = new Error(props.message);\n            Object.assign(err, props);\n\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err);\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + JSON.stringify(err));\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err.message);\n            return Q.reject(err);\n        }\n\n        return Q.resolve();\n    }\n\n}\n\n\nexport default NodeHttpClient;\n","\n\nexport default {\n    DATASET         : \"dcat:Dataset\",\n    SERVICE         : \"regp:Service\",\n    LAYER           : \"Layer\",\n    MAP             : \"Map\",\n    GALLERY         : \"Gallery\",\n    COMMUNITY       : 'Community',\n    ORGANIZATION    : \"org:Organization\",\n    CONTACT         : \"vcard:VCard\",\n    CONCEPT         : \"skos:Concept\",\n    CONCEPT_SCHEME  : \"skos:ConceptScheme\",\n    STANDARD        : 'dct:Standard'\n};\n","\nimport Q from 'q';\n\n\n/**\n * ItemService\n * service for working with the GeoPlatform API to\n * retrieve and manipulate items.\n *\n * Ex Searching Items\n *      let params = { q: 'test' };\n *      itemService.search(params).then(response=>{\n *          console.log(response.results.length + \" of \" + response.totalResults);\n *      }).catch(e=>{...});\n *\n * Ex Fetch Item:\n *      itemService.get(itemId).then(item=>{...}).catch(e=>{...});\n *\n * Ex Saving Item:\n *      itemService.save(item).then(item=>{...}).catch(e=>{...});\n *\n * Ex Deleting Item:\n *      itemService.remove(itemId).then(()=>{...}).catch(e=>{...});\n *\n * Ex Patching Item:\n *      itemService.patch(itemId,patch).then(item=>{...}).catch(e=>{...});\n *\n */\nclass ItemService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = Config.timeout || 30000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/items';\n    }\n\n    /**\n     * @param {number} milliseconds - override environment variable timeout\n     */\n    setTimeout(milliseconds) {\n        this.timeout = milliseconds;\n    }\n\n    /**\n     * @param {number} milliseconds - override environment variable timeout\n     */\n    timeout(milliseconds) {\n        this.setTimeout(milliseconds);\n        return this;\n    }\n\n    /**\n     * @param {Logger} logger - log service\n     */\n    setLogger(logger) {\n        this.logger = logger;\n    }\n\n    /**\n     * @param {Error} e - error to log (if logger specified)\n     */\n    logError(e) {\n        if(this.logger && this.logger.error) {\n            this.logger.error(e);\n        }\n    }\n\n    /**\n     * @param {string} msg - message to log as debug\n     */\n    logDebug(msg) {\n        if(this.logger && this.logger.debug) {\n            this.logger.debug(msg);\n        }\n    }\n\n\n\n\n    /**\n     * @param {string} id - identifier of item to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    get (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.get() - Error fetching item ${id}: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {Object} itemObj - item to create or update\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    save (itemObj, options) {\n\n        return Q.resolve( itemObj )\n        .then( item => {\n\n            let method = 'POST',\n                url = this.baseUrl;\n            if(item.id) {\n                method = \"PUT\";\n                url += '/' + item.id;\n            } else {\n                //if item is being created and has no URI already defined\n                // attempt to create one using the API's method for doing so\n                // and then attempt the actual item creation\n                if(!item.uri) {\n                    return this.getUri(item, options)\n                    .then( uri => {\n                        item.uri = uri;\n                        let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n                        return this.execute(opts);\n                    });\n                }\n            }\n\n            let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.save() - Error saving item: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of item to delete\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving true if successful or an error\n     */\n    remove (id, options) {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:\"DELETE\", url: url, options: options\n            });\n            return this.execute(opts);\n        })\n        .then(response => true)\n        .catch(e => {\n            let err = new Error(`ItemService.remove() - Error deleting item ${id}: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of item to patch\n     * @param {Object} patch - HTTP-PATCH compliant set of properties to patch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    patch (id, patch, options) {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method: \"PATCH\", url: url, data: patch, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.patch() - Error patching item ${id}: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or GeoPlatform.Query instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    search (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl, params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.search() - Error searching items: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     *\n     * @param {string} arg - URL to metadata document or File to upload\n     * @param {string} format - metadata format of specified document\n     * @return {Promise} resolving GeoPlatform Item\n     */\n    import (arg, format, options) {\n\n        return Q.resolve( true )\n        .then( () => {\n            if(arg===null || arg === undefined) {\n                throw new Error(\"Must provide a valid URL or File\");\n            }\n            let isFile = typeof(arg) !== 'string';\n            let ro = {\n                method:\"POST\",\n                url: this.apiBase + '/api/import',\n                processData: true,  //for jQuery\n                formData: true,     //for Node (RequestJS)\n                options: options\n            };\n            if(isFile) {\n                ro.file = arg;\n                ro.data = { format: format };\n            } else {\n                ro.formData = false;    //must be false for data to not be multi-part formdata\n                ro.data = { url: arg, format: format };\n            }\n            let opts = this.buildRequest(ro);\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`ItemService.import() - Error importing item: ${e.message}`);\n            if(e.status === 409 || ~e.message.indexOf('Item already exists')) err.status = 409;\n            if(e.item) err.item = e.item;\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {string} id - identifier of the item to export\n     * @param {format} format - string mime type to export\n     * @return {Promise} resolving HTTP response object for enabling attachment downloading\n     */\n    export (id, format, options) {\n\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/export';\n            let opts = this.buildRequest({\n                method: \"GET\", url: url,\n                params: {format:format},\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let msg = e.message;\n            //https://github.com/GeoPlatform/client-api/issues/1\n            if(e.statusCode && e.statusCode===406 || e.statusCode==='406') {\n                msg = `Unsupported export format specified '${format}'`;\n            }\n            let err = new Error(`ItemService.export() - Error exporting item: ${msg}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} object - GP object definition to generate a URI for\n     * @param {Object} options - optional request options\n     * @return {Promise} resolving string URI\n     */\n    getUri (object, options) {\n\n        return Q.resolve( object )\n        .then( obj => {\n            if(!obj || !obj.type)\n                throw new Error(\"Must provide an object with a type property\");\n            let url = this.apiBase + '/api/utils/uri';\n            options = options || {};\n            options.responseType = 'text';  //to ensure plaintext is expected\n            let opts = this.buildRequest({\n                method: \"POST\", url: url, data: obj, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`ItemService.getUri() - Error getting URI for item: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n\n    }\n\n\n    /**\n     * @param {Array} ids - list of identifiers to fetch objects for\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving list of matching items or an error\n     */\n    getMultiple (ids, options) {\n\n        return Q.resolve( ids )\n        .then( identifiers => {\n\n            let method = 'POST',\n                url = this.apiBase + '/api/fetch';\n\n            let opts = this.buildRequest({method:method, url:url, data:identifiers, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.getMultiple() - Error fetching items: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Array} uris - list of URIs to retrieve objects for\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving list containing uri-item association where exists\n     */\n    exists(uris, options) {\n        return Q.resolve(uris)\n        .then( uris => {\n            let method = 'POST', url = this.apiBase + '/api/utils/exists';\n            let opts = this.buildRequest({method:method, url:url, data:uris, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.exists() - Error resolving items: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout || Config.timeout || 30000;\n\n        let opts = this.createRequestOpts(options);\n\n        return opts;\n    }\n\n    createRequestOpts(options) {\n        let request = this.client.createRequestOpts(options);\n        this.logDebug(\"ItemService.createRequestOpts() - \" + JSON.stringify(request));\n        return request;\n    }\n\n    execute(opts) {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"ItemService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport default ItemService;\n","\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass DatasetService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/datasets';\n    }\n\n\n}\n\nexport default DatasetService;\n","\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass MapService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/maps';\n    }\n\n\n}\n\nexport default MapService;\n","\n\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass LayerService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/layers';\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving style JSON object\n     */\n    style (id, options) {\n        return Q.resolve( id )\n        .then( (id) => {\n\n            let url = this.baseUrl + '/' + id + '/style';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`LayerService.style() - Error fetching style: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} req identifying extent, x, y\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving feature JSON object\n     */\n    describe( id, req, options ) {\n\n        return Q.resolve( req )\n        .then( (req) => {\n\n            if(!req) {\n                throw new Error(\"Must provide describe parameters to use\");\n            }\n\n            let keys = ['bbox', 'height', 'width', 'x', 'y'];\n            let missing = keys.find(key => !req[key]);\n            if(missing) {\n                throw new Error(`Must specify ${missing} in describe req`);\n            }\n\n            let params = {\n                srs         : 'EPSG:4326',\n                bbox        : req.bbox,\n                height      : req.height,\n                width       : req.width,\n                info_format : 'text/xml',\n                x           : req.x,\n                y           : req.y,\n                i           : req.x, //WMS 1.3.0\n                j           : req.y  //WMS 1.3.0\n            };\n\n            let url = this.baseUrl + '/' + id + '/describe';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`LayerService.describe() - Error describing layer feature: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} params describing layer request to validate\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving empty if successful or a message if failed\n     */\n    validate(id, params, options) {\n\n        return Q.resolve( params )\n        .then( params => {\n\n            if(!params) {\n                throw new Error(\"Must provide parameters to use in layer validation\");\n            }\n\n            let url = this.baseUrl + '/' + id + '/validate';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`LayerService.describe() - Error describing layer feature: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default LayerService;\n","\n\nexport default {\n    ALTERNATE_TITLE  : 'alternateTitles',\n    BEGINS           : 'startDate.min',\n    CREATED          : 'created',\n    CREATED_BEFORE   : 'created.max',\n    CREATED_AFTER    : 'created.min',\n    CREATED_BY       : 'createdBy',\n    CREATOR          : 'creator.id',\n    CONTRIBUTED_BY   : 'contributedBy',\n    ENDS             : 'endDate.max',\n    EXTENT           : 'extent',\n    IDENTIFIERS      : 'identifiers',\n    KEYWORDS         : 'keywords',\n    LAST_MODIFIED_BY : 'lastModifiedBy',\n    MODIFIED         : 'modified',\n    MODIFIED_BEFORE  : 'modified.max',\n    MODIFIED_AFTER   : 'modified.min',\n    PUBLISHERS_ID    : 'publisher.id',\n    PUBLISHERS_LABEL : 'publisher.label',\n    PUBLISHERS_URI   : 'publisher.uri',\n    CONTACTS_ID      : 'contacts.id',\n    CONTACTS_LABEL   : 'contacts.label',\n    CONTACTS_URI     : 'contacts.uri',\n    QUERY            : 'q',\n    SCHEMES_ID       : 'scheme.id',\n    SCHEMES_LABEL    : 'scheme.label',\n    SCHEMES_URI      : 'scheme.uri',\n    SIMILAR_TO       : 'similarTo',\n    STATUS           : 'status',\n    SERVICE_TYPES    : 'serviceType.id',\n    THEMES_ID        : 'theme.id',\n    THEMES_LABEL     : 'theme.label',\n    THEMES_URI       : 'theme.uri',\n    TYPES            : 'type',      //TODO change to 'types'\n    URI              : 'uri',\n    USED_BY_ID       : 'usedBy.id',\n    USED_BY_LABEL    : 'usedBy.label',\n    USED_BY_URI      : 'usedBy.uri',\n    VISIBILITY       : 'visibility',\n    RESOURCE_TYPE    : 'resourceType',\n    DATASET          : 'dataset',\n    LANDING_PAGE     : 'landingPage',\n    PURPOSE          : 'purpose',\n\n    //statistics parameters\n    RELIABILITY      : 'reliability',\n    RELIABILITY_MIN  : 'reliability.min',\n    RELIABILITY_MAX  : 'reliability.max',\n    ONLINE           : 'online',\n    COMPLIANT        : 'compliant',\n    SPEED            : 'speed',\n    SPEED_MIN        : 'speed.min',\n    SPEED_MAX        : 'speed.max',\n    LIKES            : 'likes',\n    LIKES_MIN        : 'likes.min',\n    LIKES_MAX        : 'likes.max',\n    VIEWS            : 'views',\n    VIEWS_MIN        : 'views.min',\n    VIEWS_MAX        : 'views.max',\n\n    //type-specific parameters\n    HREF             : 'href',           //service-specific\n    LAYER_TYPE       : 'layerType',     //layer-specific\n    LAYER_NAME       : 'layerName',     //...\n    PARENT_LAYER     : 'parentLayer',   //...\n    SUB_LAYER        : 'subLayer',      //...\n    SERVICE          : 'service',       //...\n    MAP_LAYER        : 'mapLayer',      //map-specific\n    GALLERY_ITEM     : 'galleryItem',   //gallery-specific\n\n    //meta-parameters\n    FACETS           : 'includeFacets',  //TODO change to 'facets'\n    FIELDS           : 'fields',\n    SORT             : 'sort',\n    PAGE             : 'page',\n    PAGE_SIZE        : 'size',\n\n    //recommender service-specific\n    FOR_TYPES        : 'for'\n};\n","\nimport Parameters from './parameters';\n\nconst Fields = {\n    ACCESS_RIGHTS       : 'rights',\n    ALTERNATE_TITLES    : 'alternateTitles',\n    ANNOTATIONS         : 'annotations',\n    CLASSIFIERS         : 'classifiers',\n    CONCEPT_SCHEME      : 'scheme',\n    CONTACTS            : 'contacts',\n    CREATED             : 'created',\n    CREATED_BY          : 'createdBy',\n    DATASETS            : 'datasets',\n    DESCRIPTION         : 'description',\n    DISTRIBUTIONS       : 'distributions',\n    EXTENT              : 'extent',\n    GALLERY_ITEMS       : 'items',\n    HREF                : 'href',\n    IDENTIFIERS         : 'identifiers',\n    KEYWORDS            : 'keywords',\n    LABEL               : 'label',\n    LAST_MODIFIED_BY    : 'lastModifiedBy',\n    LAYERS              : 'layers',\n    LAYER_TYPE          : 'layerType',\n    LAYER_NAME          : 'layerName',\n    LEGEND              : 'legend',\n    MODIFIED            : 'modified',\n    PARENT_LAYER        : 'parentLayer',\n    PUBLISHERS          : 'publishers',\n    RESOURCE_TYPES      : 'resourceTypes',\n    SERVICE_TYPE        : 'serviceType',\n    SERVICES            : 'services',\n    SPATIAL             : 'spatial',\n    STATISTICS          : 'statistics',\n    STATUS              : 'status',\n    SUB_LAYERS          : 'subLayers',\n    TEMPORAL            : 'temporal',\n    THEMES              : 'themes',\n    THUMBNAIL           : 'thumbnail',\n    USED_BY             : 'usedBy',\n    VISIBILITY          : 'visibility',\n    LANDING_PAGE        : 'landingPage'\n};\n\nconst FIELDS_DEFAULT = [\n    Fields.CREATED, Fields.MODIFIED, Fields.CREATED_BY,\n    Fields.PUBLISHERS, Fields.THEMES, Fields.DESCRIPTION\n];\n\n/* --------------------------------------------------------- */\n\nconst Facets = {\n    ALTERNATE_TITLES    : 'alternateTitles',\n    CONCEPT_SCHEMES     : 'schemes',\n    CREATED_BY          : 'createdBy',\n    HREF                : 'href',\n    IDENTIFIERS         : \"identifiers\",\n    LAYER_TYPE          : 'layerType',\n    LAYER_NAME          : 'layerName',\n    LIKES               : 'likes',\n    ONLINE              : 'online',\n    PUBLISHERS          : 'publishers',\n    CONTACTS            : 'contacts',\n    RELIABILITY         : 'reliability',\n    SERVICE_TYPES       : 'serviceTypes',\n    SPEED               : 'speed',\n    STATUS              : 'status',\n    THEMES              : 'themes',\n    TYPES               : 'type',   //TODO change to 'types'\n    USED_BY             : 'usedBy',\n    VIEWS               : 'views',\n    VISIBILITY          : 'visibility'\n};\n\nconst FACETS_DEFAULT = [\n    Facets.TYPES,\n    Facets.PUBLISHERS,\n    Facets.SERVICE_TYPES,\n    Facets.CONCEPT_SCHEMES,\n    Facets.VISIBILITY,\n    Facets.CREATED_BY\n];\n\n\n/*\n    Map facet keys to parameters so clients can set\n    query params using faceted results\n\n    //TODO remove these and their function below\n */\nconst FacetToParam = {};\nFacetToParam[Facets.TYPES]           = Parameters.TYPES;\nFacetToParam[Facets.THEMES]          = Parameters.THEMES_ID;\nFacetToParam[Facets.PUBLISHERS]      = Parameters.PUBLISHERS_ID;\nFacetToParam[Facets.CONTACTS]        = Parameters.CONTACTS_ID;\nFacetToParam[Facets.CONCEPT_SCHEMES] = Parameters.SCHEMES_ID;\nFacetToParam[Facets.USED_BY]         = Parameters.USED_BY_ID;\n\n\n\n/* --------------------------------------------------------- */\n\n\nconst SORT_OPTIONS_DEFAULT = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nconst BBOX_REGEX = /^\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?$/;\n\n\nfunction toArray(value) {\n    let result = value;\n    //if given a non-array value, wrap in array\n    if(result !== null && typeof(result.push) === 'undefined') result = [result];\n    //if array value is empty, nullify the result\n    if(result !== null && !result.length) result = null;\n    return result;\n}\n\n\n\n/**\n * Query\n *\n * Specify the \"default\" query constraints to use by passing in 'options.defaults = {...}';\n *\n * @constructor\n */\nclass Query {\n\n    /**\n     * @param {Object} options - set of initial constraints\n     */\n    constructor(options) {\n        this.defaultQuery = { };\n        this.defaultQuery[Parameters.PAGE] = 0;\n        this.defaultQuery[Parameters.PAGE_SIZE] = 10;\n        this.defaultQuery[Parameters.SORT] = \"modified,desc\";\n        this.defaultQuery[Parameters.FIELDS] = FIELDS_DEFAULT.slice(0);\n        this.defaultQuery[Parameters.FACETS] = FACETS_DEFAULT.slice(0);\n        if(options && options.defaults) {\n            Object.assign(this.defaultQuery, options.defaults);\n            delete options.defaults;\n        }\n        this.query = JSON.parse(JSON.stringify(this.defaultQuery));\n        if(options) {\n            this.applyParameters(options);\n        }\n    }\n\n\n    /**\n     * @return {object} containing request-ready parameters/values\n     */\n    getQuery() {\n        let result = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n    /**\n     * @return {Query}\n     */\n    clone() {\n        let result = new Query();\n        let json = JSON.parse(JSON.stringify(this.query));\n        result.applyParameters(json);\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     * @param {string} name\n     * @param {any} value\n     * @return {Query} this\n     */\n    parameter(name, value) {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    /**\n     * @param {string} name\n     * @param {any} value\n     */\n    setParameter (name, value) {\n        if(value === null || value === undefined || //if no value was provide\n            (typeof(value.push) !== 'undefined' && !value.length)) //or empty array\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    /**\n     * @param {string} key - name of parameter\n     * @return {string} value of parameter\n     */\n    getParameter (key) {\n        return this.query[key];\n    }\n\n    /**\n     * @param {object} obj - set of parameter/values to apply to this query\n     */\n    applyParameters (obj) { \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n    /**\n     * @param {string} facet - name of facet to set the value for as a parameter\n     * @param {string} value - value of the facet to use as the parameter's value\n     */\n     //TODO remove this function\n    setFacetParameter (facet, value) {\n        let param = FacetToParam[facet];\n        if(!param) {\n            console.log(\"WARN : Query.applyFacetParameter() - \" +\n                \"unable to map facet to known parameter '\" + facet + \"', using \" +\n                \"as direct parameter which may not operate as intended\");\n        }\n        this.setParameter(param||facet, value);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     * @param {string} text\n     * @return {Query} this\n     */\n    q(text) { this.setQ(text); return this; }\n    /** @param {string} text - free text query */\n    setQ (text) { this.setParameter(Parameters.QUERY, text); }\n    /** @return {string} */\n    getQ() { return this.getParameter(Parameters.QUERY); }\n\n\n    // -----------------------------------------------------------\n\n\n    keywords(text) {\n        this.setKeywords(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setKeywords (text) {\n        this.setParameter(Parameters.KEYWORDS, toArray(text));\n    }\n\n    getKeywords() {\n        return this.getParameter(Parameters.KEYWORDS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    uri (uri) {\n        this.setUri(uri);\n        return this;\n    }\n\n    setUri(uri) {\n        this.setParameter(Parameters.URI, uri);\n    }\n\n    getUri() {\n        return this.getParameter(Parameters.URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    types(types) {\n        this.setTypes(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - name of class(es) to request\n     */\n    setTypes (types) {\n        this.setParameter(Parameters.TYPES, toArray(types));\n    }\n\n    getTypes () {\n        return this.getParameter(Parameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    createdBy(user) {\n        this.setCreatedBy(user);\n        return this;\n    }\n\n    /** @param {string} user - username */\n    setCreatedBy (user) {\n        this.setParameter(Parameters.CREATED_BY, user);\n    }\n\n    /** @return {string} username */\n    getCreatedBy () {\n        return this.getParameter(Parameters.CREATED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    lastModifiedBy(user) {\n        this.setLastModifiedBy(user);\n        return this;\n    }\n\n    /** @param {string} user - username */\n    setLastModifiedBy (user) {\n        this.setParameter(Parameters.LAST_MODIFIED_BY, user);\n    }\n\n    /** @return {string} username */\n    getLastModifiedBy () {\n        return this.getParameter(Parameters.LAST_MODIFIED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.THEMES_LABEL or Parameters.THEMES_URI\n     * respectively.\n     * @param {array[string]} themes - string or array of strings containing theme constraint\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    themes(themes, parameter) {\n        this.setThemes(themes, parameter);\n        return this;\n    }\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.THEMES_LABEL or Parameters.THEMES_URI\n     * respectively.\n     * @param {array[string]} themes - theme or themes to constrain by\n     */\n    setThemes (themes, parameter) {\n\n        //clear existing\n        this.setParameter(Parameters.THEMES_ID, null);\n        this.setParameter(Parameters.THEMES_LABEL, null);\n        this.setParameter(Parameters.THEMES_URI, null);\n\n        let param = parameter || Parameters.THEMES_ID;\n        this.setParameter(param, toArray(themes));\n    }\n\n    getThemes () {\n        return this.getParameter(Parameters.THEMES_ID) ||\n            this.getParameter(Parameters.THEMES_LABEL) ||\n            this.getParameter(Parameters.THEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be identifiers. If using labels or uris,\n     * specify the optional second parameter to be either\n     * Parameters.PUBLISHERS_LABEL or Parameters.PUBLISHERS_URI respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    publishers(publishers, parameter) {\n        this.setPublishers(publishers, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be identifiers. If using labels or uris,\n     * specify the optional second parameter to be either\n     * Parameters.PUBLISHERS_LABEL or Parameters.PUBLISHERS_URI respectively.\n     * @param {array[string]} publishers - publishing orgs to constrain by\n     */\n    setPublishers (publishers, parameter) {\n\n        //clear existing\n        this.setParameter(Parameters.PUBLISHERS_ID, null);\n        this.setParameter(Parameters.PUBLISHERS_LABEL, null);\n        this.setParameter(Parameters.PUBLISHERS_URI, null);\n\n        let param = parameter || Parameters.PUBLISHERS_ID;\n        this.setParameter(param, toArray(publishers));\n    }\n\n    getPublishers () {\n        return this.getParameter(Parameters.PUBLISHERS_ID) ||\n            this.getParameter(Parameters.PUBLISHERS_LABEL) ||\n            this.getParameter(Parameters.PUBLISHERS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Point of Contact or set of Contacts to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter to be either\n     * Parameters.CONTACTS_LABEL or Parameters.CONTACTS_URI respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    contacts(contacts, parameter) {\n        this.setContacts(contacts, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Contact or set of Contacts to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter to be either\n     * Parameters.CONTACTS_LABEL or Parameters.CONTACTS_URI respectively.\n     * @param {array[string]} contacts - publishing orgs to constrain by\n     */\n    setContacts (contacts, parameter) {\n\n        //clear existing\n        this.setParameter(Parameters.CONTACTS_ID, null);\n        this.setParameter(Parameters.CONTACTS_LABEL, null);\n        this.setParameter(Parameters.CONTACTS_URI, null);\n\n        let param = parameter || Parameters.CONTACTS_ID;\n        this.setParameter(param, toArray(contacts));\n    }\n\n    getContacts () {\n        return this.getParameter(Parameters.CONTACTS_ID) ||\n            this.getParameter(Parameters.CONTACTS_LABEL) ||\n            this.getParameter(Parameters.CONTACTS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.USED_BY_LABEL or Parameters.USED_BY_URI\n     * respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    usedBy(ids, parameter) {\n        this.setUsedBy(ids, parameter);\n        return this;\n    }\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.USED_BY_LABEL or Parameters.USED_BY_URI\n     * respectively.\n     * @param {array[string]} ids - publishing orgs to constrain by\n     */\n    setUsedBy (ids, parameter) {\n\n        //clear existing\n        this.setParameter(Parameters.USED_BY_ID, null);\n        this.setParameter(Parameters.USED_BY_LABEL, null);\n        this.setParameter(Parameters.USED_BY_URI, null);\n\n        let param = parameter || Parameters.USED_BY_ID;\n        this.setParameter(param, toArray(ids));\n    }\n\n    getUsedBy () {\n        return this.getParameter(Parameters.USED_BY_ID) ||\n            this.getParameter(Parameters.USED_BY_LABEL) ||\n            this.getParameter(Parameters.USED_BY_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.SCHEMES_LABEL or Parameters.SCHEMES_URI\n     * respectively.\n     * @param {array[string]} schemes - schemes to constrain by\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    schemes(schemes, parameter) {\n        this.setSchemes(schemes, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.SCHEMES_LABEL or Parameters.SCHEMES_URI\n     * respectively.\n     * @param {array[string]} schemes - schemes to constrain by\n     * @param {string} parameter - optional, to indicate the parameter to use\n     */\n    setSchemes (schemes, parameter) {\n\n        //clear existing\n        this.setParameter(Parameters.SCHEMES_ID, null);\n        this.setParameter(Parameters.SCHEMES_LABEL, null);\n        this.setParameter(Parameters.SCHEMES_URI, null);\n\n        let param = parameter || Parameters.SCHEMES_ID;\n        this.setParameter(param, toArray(schemes));\n    }\n\n    getSchemes() {\n        return this.getParameter(Parameters.SCHEMES_ID) ||\n            this.getParameter(Parameters.SCHEMES_LABEL) ||\n            this.getParameter(Parameters.SCHEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     *\n     */\n    serviceTypes(types) {\n        this.setServiceTypes(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - ids\n     */\n    setServiceTypes (types) {\n        this.setParameter(Parameters.SERVICE_TYPES, toArray(types));\n    }\n\n    getServiceTypes () {\n        return this.getParameter(Parameters.SERVICE_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    visibility(vis) {\n        this.setVisibility(vis);\n        return this;\n    }\n\n    /**\n     * @param {string} visibility - one of 'public' or 'private'\n     */\n    setVisibility (visibility) {\n        this.setParameter(Parameters.VISIBILITY, visibility);\n    }\n\n    getVisibility () {\n        return this.getParameter(Parameters.VISIBILITY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    status(value) {\n        this.setStatus(value);\n        return this;\n    }\n\n    /**\n     * @param {string} status - current status of Item\n     */\n    setStatus (value) {\n        this.setParameter(Parameters.STATUS, value);\n    }\n\n    getStatus () {\n        return this.getParameter(Parameters.STATUS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    extent(bbox) {\n        this.setExtent(bbox);\n        return this;\n    }\n\n    /**\n     * @param {string} bboxStr - form of \"minx,miny,maxx,maxy\"\n     */\n    setExtent (bbox) {\n        if(bbox) {\n            if(typeof(bbox.toBboxString) !== 'undefined') {\n                //Leaflet Bounds instance\n                bbox = bbox.toBboxString();\n\n            } else if(typeof(bbox.push) !== 'undefined' && bbox.length &&\n                //Nested array (alternate Leaflet representation):\n                // [ [minLat,minLong], [maxLat,maxLong] ]\n                typeof(bbox[0].push) !== 'undefined') {\n                bbox = bbox[0][1]+','+bbox[0][0]+','+bbox[1][1]+','+bbox[1][0];\n\n            } else if(typeof(bbox) === 'string') {\n                if(!BBOX_REGEX.test(bbox)) {\n                    throw new Error(\"Invalid argument: bbox string must be \" +\n                        \"in form of 'minx,miny,maxx,maxy'\");\n                }\n            } else {\n                throw new Error(\"Invalid argument: bbox must be one of \" +\n                    \"Leaflet.Bounds, nested array, or bbox string\");\n            }\n        }\n        this.setParameter(Parameters.EXTENT, bbox);\n    }\n\n    /**\n     * @return {string} bbox string or null if not set\n     */\n    getExtent () {\n        return this.getParameter(Parameters.EXTENT);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    modified(date, beforeOrAfter) {\n        this.setModified(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param {Date} date - date to compare against\n     * @param {boolean} beforeOrAfter - flag specifying which boundary condition (true = before, false = after) flag specifying whether to trigger update automatically\n     */\n    setModified (date, beforeOrAfter) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(Parameters.MODIFIED_BEFORE, null);\n            this.setParameter(Parameters.MODIFIED_AFTER, null);\n            return;\n        }\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? Parameters.MODIFIED_BEFORE : Parameters.MODIFIED_AFTER;       //property being set\n        let oppProp = dir ? Parameters.MODIFIED_AFTER : Parameters.MODIFIED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getModified () {\n        let value = this.getParameter(Parameters.MODIFIED_BEFORE) ||\n            this.getParameter(Parameters.MODIFIED_AFTER);\n        if(value && typeof(value) === 'number') {\n            value = new Date(value);\n        }\n        return value;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    created(date, beforeOrAfter) {\n        this.setCreated(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param {Date} date - date to compare against\n     * @param {boolean} beforeOrAfter - flag specifying which boundary condition (true = before, false = after) flag specifying whether to trigger update automatically\n     */\n    setCreated (date, beforeOrAfter) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(Parameters.CREATED_BEFORE, null);\n            this.setParameter(Parameters.CREATED_AFTER, null);\n            return;\n        }\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? Parameters.CREATED_BEFORE : Parameters.CREATED_AFTER;       //property being set\n        let oppProp = dir ? Parameters.CREATED_AFTER : Parameters.CREATED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getCreated () {\n        let value = this.getParameter(Parameters.CREATED_BEFORE) ||\n            this.getParameter(Parameters.CREATED_AFTER);\n        if(value && typeof(value) === 'number') {\n            value = new Date(value);\n        }\n        return value;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    begins(date) {\n        this.setBeginDate(date);\n        return this;\n    }\n\n    setBeginDate (date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(Parameters.BEGINS, date);\n    }\n\n    getBeginDate () {\n        let date = this.getParameter(Parameters.BEGINS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    ends(date) {\n        this.setEndDate(date);\n        return this;\n    }\n\n    setEndDate (date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(Parameters.ENDS, date);\n    }\n\n    getEndDate () {\n        let date = this.getParameter(Parameters.ENDS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    between(begin, end) {\n        this.setBetween(begin, end);\n        return this;\n    }\n\n    setBetween(begin, end) {\n        this.begins(begin);\n        this.ends(end);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    resourceTypes(types) {\n        this.setResourceTypes(types);\n        return this;\n    }\n\n    setResourceTypes(types) {\n        this.setParameter(Parameters.RESOURCE_TYPE, toArray(types));\n    }\n\n    getResourceTypes() {\n        return this.getParameter(Parameters.RESOURCE_TYPE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    facets(names) {\n        this.setFacets(names);\n        return this;\n    }\n\n    /*\n     * @param {array[string]} names - names of facets\n     */\n    setFacets (names) {\n        this.setParameter(Parameters.FACETS, toArray(names));\n    }\n\n    getFacets() {\n        return this.getParameter(Parameters.FACETS);\n    }\n\n    /**\n     * @param {string} name - name of facet to add\n     */\n    addFacet(name) {\n        let facets = this.getFacets() || [];\n        facets.push(name);\n        this.setFacets(facets);\n    }\n\n    /**\n     * @param {string} name - name of facet to remove\n     */\n    removeFacet(name) {\n        let facets = this.getFacets() || [];\n        let idx = facets.indexOf(name);\n        if(idx>=0) {\n            facets.splice(idx, 1);\n            this.setFacets(facets);\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    fields(fields) {\n        this.setFields(fields);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} fields - list of field names to request for each search result\n     */\n    setFields (fields) {\n        this.setParameter(Parameters.FIELDS, toArray(fields));\n    }\n\n    getFields() {\n        return this.getParameter(Parameters.FIELDS);\n    }\n\n    /**\n     * @param {string} field - name of field to remove\n     */\n    addField(field) {\n        let fields = this.getFields() || [];\n        fields.push(field);\n        this.setFields(fields);\n    }\n\n    /**\n     * @param {string} field - name of field to remove\n     */\n    removeField(field) {\n        let fields = this.getFields() || [];\n        let idx = fields.indexOf(name);\n        if(idx>=0) {\n            fields.splice(idx, 1);\n            this.setFields(fields);\n        }\n    }\n\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this.setParameter(Parameters.PAGE, page*1);\n    }\n\n    getPage() {\n        return this.getParameter(Parameters.PAGE);\n    }\n\n    nextPage() {\n        this.setPage(this.getPage()+1);\n    }\n\n    previousPage() {\n        this.setPage(this.getPage()-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this.setParameter(Parameters.PAGE_SIZE, size*1);\n    }\n\n    getPageSize() {\n        return this.getParameter(Parameters.PAGE_SIZE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.setParameter(Parameters.SORT, sort);\n    }\n\n    getSort() {\n        return this.getParameter(Parameters.SORT);\n    }\n\n    getSortField() {\n        let value = this.getSort();\n        return value && value.length ? value.split(',')[0] : null;\n    }\n\n    getSortOrder() {\n        let value = this.getSort();\n        return value && value.length ? value.split(',')[1] : null;\n    }\n\n    /**\n     * @return {array} list of key-value pairs of sort options\n     */\n    getSortOptions() {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = JSON.parse(JSON.stringify(this.defaultQuery));\n    }\n}\n\nexport {\n    Query as default,\n    Query,\n    Fields,\n    Facets\n};\n","\n\nimport Q from 'q';\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport Query from '../shared/query';\n\n/**\n * GeoPlatform Service service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate service objects.\n *\n * @see ItemService\n */\n\nclass ServiceService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/services';\n    }\n\n\n    /**\n     * Fetch metadata from the specified GeoPlatform Service's\n     * web-accessible implementation using either GetCapabilities\n     * or ESRI documentInfo.\n     * @param {Object} service - GeoPlatform Service object\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving service metadata\n     */\n    about( service, options ) {\n\n        return Q.resolve( service )\n        .then( svc => {\n            if(!svc)\n                throw new Error(\"Must provide service to get metadata about\");\n            let opts = this.buildRequest({\n                method:'POST', url:this.baseUrl + '/about', data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.about() - Error describing service: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service types\n     */\n    types (options) {\n\n        let query = new Query()\n        .types(ItemTypes.STANDARD)\n        .resourceTypes('ServiceType')\n        .pageSize(50)\n        .getQuery();\n\n        return Q.resolve( query )\n        .then( (params) => {\n            let url = this.apiBase + '/api/items';\n            let opts = this.buildRequest({\n                method:'GET', url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response => response.results)\n        .catch(e => {\n            let err = new Error(`ServiceService.types() - Error fetching service types: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} service - GP Service definition\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving imported service\n     */\n    import (service, options) {\n\n        return Q.resolve( service )\n        .then( svc => {\n            let url = this.baseUrl + '/import';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.import() - Error importing service: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {string} id - identifier of GP service to harvest layers for\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service layers\n     */\n    harvest (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/harvest';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.harvest() - Error harvesting layers from service: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n\n    }\n\n    /**\n     * @param {string} id - identifier of GP service to live test\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service statistics\n     */\n    liveTest (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/test';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.liveTest() - Error testing service: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of GP service to fetch statistics about\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service statistics\n     */\n    statistics (id, options) {\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/statistics';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.statistics() - Error getting service statistics: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default ServiceService;\n","\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass GalleryService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/galleries';\n    }\n\n    addItem (galleryId, itemObj, options) {\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + galleryId + '/items';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data: itemObj, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(\"GalleryService.addItem() - Error adding item: \" + e.message);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n    removeItem( galleryId, itemId, options) {\n        return Q.resolve( this.baseUrl + '/' + galleryId + '/items/' + itemId )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:'DELETE', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response=>true)\n        .catch(e => {\n            let err = new Error(\"GalleryService.addItem() - Error adding item: \" + e.message);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default GalleryService;\n","\n\nimport Q from 'q';\n\nclass UtilsService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = Config.timeout || 30000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.baseUrl = baseUrl;\n    }\n\n    /**\n     * @param {Logger} logger - log service\n     */\n    setLogger(logger) {\n        this.logger = logger;\n    }\n\n    /**\n     * @param {Error} e - error to log (if logger specified)\n     */\n    logError(e) {\n        if(this.logger && this.logger.error) {\n            this.logger.error(e);\n        }\n    }\n\n    /**\n     * @param {string} msg - message to log as debug\n     */\n    logDebug(msg) {\n        if(this.logger && this.logger.debug) {\n            this.logger.debug(msg);\n        }\n    }\n\n\n    /**\n     * @param {string} property - optional capa property to specifically request\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving capabilities object\n     */\n    capabilities (property, query, options) {\n\n        let url = this.baseUrl + '/api/capabilities';\n        if(property)\n            url += '/' + property;\n\n        return Q.resolve( url )\n        .then( (url) => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query||{}, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`UtilsService.capabilities() - Error getting capabilities: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {File} file\n     * @param {string} format\n     * @param {Object} options\n     * @return {Promise}\n     */\n    parseFile (file, format, options) {\n\n        var url = this.baseUrl + '/api/utils/parse';\n\n        return Q.resolve( url )\n        .then( url => {\n\n            let opts = this.buildRequest({\n                method:\"POST\",  url:url,\n                data: { format: format },\n                file: file,\n                formData: true,   //NodeJS (RequestJS)\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then( response => response )\n        .catch(e => {\n            let err = new Error(`UtilsService.parseFile() - Error parsing file: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * Geolocate the specified argument to a set of candidate locations.\n     * @param {Object} value - text string to geolocate (name or lat,lng)\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving an array of geocoded results\n     */\n    locate(value, options) {\n\n        var url = this.baseUrl + '/api/utils/gazetteer';\n        return Q.resolve(url)\n        .then( url => {\n            let opts = this.buildRequest({\n                method: 'GET',\n                url: url,\n                params: { location: value }\n            });\n            return this.execute(opts);\n        })\n        .then(response => response)\n        .catch(e => {\n            let err = new Error(`UtilsService.locate() - Error resolving location: ${e.message}`);\n            this.logError(err);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout || Config.timeout || 30000;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"UtilsService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport default UtilsService;\n","\n\nimport Q from 'q';\nimport ItemTypes from '../shared/types';\n\n\nclass AgolQuery {\n\n    constructor() {\n        this._query = {\n            page: 0,\n            size: 10\n        };\n    }\n\n    getQuery() {\n        let result = {};\n        for(let prop in this._query) {\n            let value = this._query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n    // ---------------------------------------\n\n    q(value) { this.setQ(value); return this; }\n    setQ(value) { this._query.q = value; }\n    getQ() { return this._query.q; }\n\n    // ---------------------------------------\n\n    types(value) { this.setTypes(value); return this; }\n    setTypes(value) {\n        if(value && typeof(value.push) !== 'undefined')\n            value = value.join(',');\n        this._query.types = value;\n    }\n    getTypes() { return this._query.types; }\n\n    // ---------------------------------------\n\n    groups(value) { this.setGroups(value); return this; }\n    setGroups(value) {\n        if(value && typeof(value.push) !== 'undefined')\n            value = value.join(',');\n        this._query.groups = value;\n    }\n    getGroups() { return this._query.groups; }\n\n    // ---------------------------------------\n\n    orgs(value) { this.setOrgs(value); return this; }\n    setOrgs(value) {\n        if(value && typeof(value.push) !== 'undefined')\n            value = value.join(',');\n        this._query.orgs = value;\n    }\n    getOrgs() { return this._query.orgs; }\n\n    // ---------------------------------------\n\n    extent(value) { this.setExtent(value); return this; }\n    setExtent(value) { this._query.bbox = value; }\n    getExtent() { return this._query.bbox; }\n\n    // ---------------------------------------\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) { this.setSort(sort, order); return this; }\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this._query.sort = sort;\n    }\n    getSort() { return this._query.sort; }\n    getSortField() { return this._query.sort.split(',')[0]; }\n    getSortOrder() { return this._query.sort.split(',')[1] === 'asc'; }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this._query.page = page*1;\n    }\n\n    getPage() {\n        return this._query.page;\n    }\n\n    nextPage() {\n        this.setPage(this._query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this._query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this._query.size = size*1;\n    }\n\n    getPageSize() {\n        return this._query.size;\n    }\n\n}\n\n\n\n\nclass AgolService {\n\n\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = Config.timeout || 30000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.baseUrl = baseUrl + '/api/agol';\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL ORGS METHODS\n\n\n    /**\n     * @param {string} id - identifier of AGOL organization to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    getOrg (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/orgs/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getOrg() - Error fetching org ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or Query instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    searchOrgs (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl + '/orgs', params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchOrgs() - Error searching orgs: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL GROUPS METHODS\n\n\n    /**\n     * @param {string} id - identifier of AGOL group to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    getGroup (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/groups/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getGroup() - Error fetching group ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or AgolQuery instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    searchGroups (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl + '/groups', params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchGroups() - Error searching groups: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL ITEMS METHODS\n\n    /**\n     * @param {string} id - identifier of AGOL item to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    getItem (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/items/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getItem() - Error fetching item ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or AgolQuery instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    searchItems (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl + '/items', params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchItems() - Error searching items: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /* --------------------------- */\n\n    getAgolId (obj) {\n        if(!obj) return null;\n\n        if(!obj.type) return null;\n\n        if(ItemTypes.ORGANIZATION === obj.type || 'Group' === obj.type) {\n            return obj.id;\n        }\n\n        if(!obj.identifiers || !obj.identifiers.length) return null;\n        let ids = obj.identifiers.filter(id => ~id.indexOf('agol:'));\n        if(!ids.length) return null;\n        return ids[0].replace('agol:','');\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout || Config.timeout || 30000 ;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"AGOLService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport {\n    AgolService as default,\n    AgolService,\n    AgolQuery\n};\n","export default {\n\n    ualUrl: 'https://ual.geoplatform.gov',\n    //appId: '...',\n\n    configure: function(options) {\n        Object.assign(this, options);\n    }\n};\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport Config from '../../shared/config';\nimport ItemService from \"../item\";\n\n\n\nconst ServiceProxy = {\n\n    /**\n     * @param {Router} router - ExpressJS router instance\n     * @param {array[object]} routes - list of routes to map to the router\n     * @param {object} options - additional configuration needed\n     */\n    bindRoutes: function(router, routes, options) {\n\n        options = options || {};\n        let paths = options.paths || {};\n\n        routes.forEach( route => {\n\n            if(paths[route.key] === false) return;  //disabled endpoint\n            if(!paths[route.key] && !route.path) return; //something is wrong with route\n\n            // let path = '/' + ( paths[route.key] || route.pathFn(pathBase) );\n            let path = '/' + ( paths[route.key] || route.path );\n\n            router[route.method]( path, (req, res, next) => {\n                let svc = this.getService(req, route.auth, options);\n                let promise = route.execFn(svc, req)\n                promise.then( result => {\n                    if(route.respFn) route.respFn(result, res, next);\n                    else res.json(result)\n                })\n                .catch( (err) => {\n                    if(options.onError)\n                        options.onError(route.key, err);\n                    next(err);\n                })\n                .finally( () => {\n                    if(options.onFinish)\n                        options.onFinish(route.key, req, res);\n                });\n            })\n        });\n\n    },\n\n    /**\n    * @param {HttpRequest} req - incoming http request being proxied\n    * @param {boolean} needsAuth - flag indicating if the request must provide an authentication token\n    * @param {object} options - additional configuration options\n    * @return {HttpClient} client to use to make requests to GeoPlatform API endpoint\n    */\n    getClient: function(req, needsAuth, options) {\n\n        let token = req.accessToken || null;\n        if(needsAuth) {\n            if(!token && options.logger)\n                options.logger.warn(\"ServiceProxy.getClient() - No Access Token was provided on incoming request header!\");\n\n            else if(!!options.debug && options.logger) {\n                options.logger.debug(`ServiceProxy.getClient() - Token: ${token}`);\n                options.logger.debug(`ServiceProxy.getClient() - JWT: ${req.jwt}`);\n            }\n        }\n\n        return new NodeHttpClient({\n            timeout: Config.timeout,\n            token: needsAuth ? token : null\n        });\n    },\n\n\n    /**\n     * @param {HttpRequest} req - incoming http request being proxied\n     * @param {boolean} needsAuth - flag indicating if request requires authorization token\n     * @param {object} options - additional configuration options\n     */\n    getService: function(req, needsAuth, options) {\n        let client = this.getClient(req, needsAuth, options);\n        let svcClass = options.serviceClass || ItemService;\n        let service = new svcClass(Config.ualUrl, client);\n        if(options.logger) {\n            service.setLogger(options.logger);\n        }\n        return service;\n    }\n};\n\nexport default ServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport ItemService from \"../item\";\nimport Config from '../../shared/config';\nimport ServiceProxy from './base';\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'items',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'items/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'items',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'items/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'items/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'uri',\n        method: 'post',\n        path: 'items/uri',\n        auth: false,\n        execFn: function(svc, req) { return svc.getUri(req.body); },\n        respFn: function(result, req, res) { res.json({ uri: result }); }\n    },\n    {\n        key: 'exists',\n        method: 'post',\n        path: 'items/exists',\n        auth: false,\n        execFn: function(svc, req) {\n            return svc.getUri(req.body)\n            .then( uri => {\n                let fields = ['serviceType','services','scheme','themes','publishers','keywords'];\n                let query = new Query().uri(uri).fields(fields);\n                return svc.search(query);\n            });\n        }\n    },\n    {\n        key: 'import',\n        method: 'post',\n        path: 'items/import',\n        auth: true,\n        execFn: function(svc, req) {\n            let input = req.body.url || req.files.file;\n            return svc.import(input, req.query.format);\n        }\n    }\n    // TODO findMultiple\n];\n\n/**\n *\n */\nfunction bindRoutes(router, options) {\n\n    //bind common endpoints\n    options.pathBaseDefault = \"items\";\n    options.serviceClass = ItemService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n\n    // let paths = options.paths || {};\n\n\n    //then bind those specific to this service\n\n    // if(paths.uri !== false) {\n    //     router.post('/' + ( paths.uri|| DEFAULT_PATHS.uri ), (req, res, next) => {\n    //         ServiceProxy.getService(req, false, options)\n    //         .getUri(req.body)\n    //         .then( response => res.json({uri: response}) )\n    //         .catch( (err) => {\n    //             if(options.onError)\n    //                 options.onError('uri', err);\n    //             next(err);\n    //         })\n    //         .finally( () => {\n    //             if(options.onFinish)\n    //                 options.onFinish('uri', req, res);\n    //         });\n    //     });\n    // }\n\n    // if(paths.exists !== false) {\n    //     router.post('/' + ( paths.exists || DEFAULT_PATHS.exists ), (req, res, next) => {\n    //         ServiceProxy.getService(req, false, options)\n    //         .getUri(req.body)\n    //         .then( uri => {\n    //             let fields = ['serviceType','services','scheme','themes','publishers','keywords'];\n    //             let query = new Query().uri(uri).fields(fields);\n    //             return svc.search(query);\n    //         })\n    //         .then( response => res.json(response) )\n    //         .catch( (err) => {\n    //             if(options.onError)\n    //                 options.onError('exists', err);\n    //             next(err);\n    //         })\n    //         .finally( () => {\n    //             if(options.onFinish)\n    //                 options.onFinish('exists', req, res);\n    //         });\n    //     });\n    // }\n\n    // if(paths.import !== false) {\n    //     router.post('/' + ( paths.import || DEFAULT_PATHS.import ), (req, res, next) => {\n    //         let input = req.body.url || req.files.file;\n    //         ServiceProxy.getService(req, false, options)\n    //         .import(input, req.body.format)\n    //         .then( item => { res.json(item) })\n    //         .catch( (err) => {\n    //             if(options.onError)\n    //                 options.onError('import', err);\n    //             next(err);\n    //         })\n    //         .finally( () => {\n    //             if(options.onFinish)\n    //                 options.onFinish('import', req, res);\n    //         });\n    //     });\n    // }\n\n    //TODO findMultiple\n\n\n}\n\n\n\n\n/**\n * ItemServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction ItemServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"ItemServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"ItemServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    bindRoutes(router, options);\n\n    return router;\n}\n\nexport default ItemServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport ServiceService from \"../service\";\nimport Config from '../../shared/config';\nimport ServiceProxy from \"./base\";\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'services',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'services/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'services',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'services/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'services/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'types',\n        method: 'get',\n        path: 'serviceTypes',\n        auth: false,\n        execFn: function(svc, req) { return svc.types(); }\n    },\n    {\n        key: 'import',\n        method: 'post',\n        path: 'services/import',\n        auth: true,\n        execFn: function(svc, req) { return svc.import(req.body); }\n    },\n    {\n        key: 'about',\n        method: 'get',\n        path: 'services/:id/about',\n        auth: false,\n        execFn: function(svc, req) { return svc.about(req.params.id); }\n    },\n    {\n        key: 'harvest',\n        method: 'get',\n        path: 'services/:id/harvest',\n        auth: false,\n        execFn: function(svc, req) { return svc.harvest(req.params.id); }\n    },\n    {\n        key: 'test',\n        method: 'get',\n        path: 'services/:id/test',\n        auth: false,\n        execFn: function(svc, req) { return svc.liveTest(req.params.id); }\n    },\n    {\n        key: 'statistics',\n        method: 'get',\n        path: 'services/:id/statistics',\n        auth: false,\n        execFn: function(svc, req) { return svc.statistics(req.params.id); }\n    }\n];\n\n\n\n\n/**\n *\n */\nfunction ServiceServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"ServiceServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"ServiceServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = ServiceService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default ServiceServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport LayerService from \"../layer\";\nimport Config from '../../shared/config';\nimport ServiceProxy from \"./base\";\n\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'layers',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'layers/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'layers',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'layers/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'layers/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'style',\n        method: 'get',\n        path: 'layers/:id/style',\n        auth: false,\n        execFn: function(svc, req) { return svc.style(req.params.id); }\n    },\n    {\n        key: 'describe',\n        method: 'post',\n        path: 'layers/:id/describe',\n        auth: false,\n        execFn: function(svc, req) { return svc.describe(req.params.id, req.body); }\n    },\n    {\n        key: 'validate',\n        method: 'post',\n        path: 'layers/:id/validate',\n        auth: false,\n        execFn: function(svc, req) { return svc.validate(req.params.id, req.body); }\n    }\n];\n\n\n\n/**\n *\n */\nfunction LayerServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"LayerServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"LayerServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = LayerService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default LayerServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport DatasetService from \"../dataset\";\nimport Config from '../../shared/config';\nimport ServiceProxy from './base';\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'datasets',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'datasets/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'datasets',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'datasets/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'datasets/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n\n/**\n * DatasetServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction DatasetServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"DatasetServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"DatasetServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = DatasetService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default DatasetServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport MapService from \"../map\";\nimport Config from '../../shared/config';\nimport ServiceProxy from \"./base\";\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'maps',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'maps/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'maps',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'maps/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'maps/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n/**\n * MapServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction MapServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"MapServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"MapServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = MapService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default MapServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport GalleryService from \"../gallery\";\nimport Config from '../../shared/config';\nimport ServiceProxy from './base';\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'galleries',\n        auth: false,\n        execFn: function(svc, req) { return svc.search(req.query); }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'galleries/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.get(req.params.id); }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'galleries',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.save(req.body); }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.remove(req.params.id); },\n        respFn: function(result, res, next) { res.status(204).end(); }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'galleries/:id',\n        auth: true,\n        execFn: function(svc, req) { return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'galleries/:id/export',\n        auth: false,\n        execFn: function(svc, req) { return svc.export(req.params.id, req.query.format); },\n        respFn: function(result, res, next) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n/**\n * GalleryServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction GalleryServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"GalleryServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"GalleryServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = GalleryService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default GalleryServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport UtilsService from \"../utils\";\nimport Config from '../../shared/config';\nimport ServiceProxy from \"./base\";\n\n\nconst Routes = [\n    {\n        key: 'locate',\n        method: 'get',\n        path: 'utils/locate',\n        auth: false,\n        execFn: function(svc, req) { return svc.locate(req.query.q); }\n    },\n    {\n        key: 'parseFile',\n        method: 'post',\n        path: 'utils/parse',\n        auth: false,\n        execFn: function(svc, req) { return svc.parseFile(req.files.file, req.body.format); }\n    },\n    {\n        key: 'capabilities',\n        method: 'get',\n        path: 'utils/capabilities',\n        auth: false,\n        execFn: function(svc, req) { return svc.capabilities(null, req.query); }\n    },\n    {\n        key: 'capabilitiesProperty',\n        method: 'get',\n        path: 'utils/capabilities/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.capabilities(req.params.id, req.query); }\n    }\n];\n\n\n\n/**\n *\n */\nfunction UtilsServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"UtilsServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"UtilsServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = UtilsService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default UtilsServiceProxy;\n","\n\nimport Q from 'q';\nimport NodeHttpClient from '../../http/node';\nimport AgolService from \"../agol\";\nimport Config from '../../shared/config';\nimport ServiceProxy from './base';\n\n\nconst Routes = [\n    {\n        key: 'searchItems',\n        method: 'get',\n        path: 'agol/items',\n        auth: false,\n        execFn: function(svc, req) { return svc.searchItems(req.query); }\n    },\n    {\n        key: 'searchGroups',\n        method: 'get',\n        path: 'agol/groups',\n        auth: false,\n        execFn: function(svc, req) { return svc.searchGroups(req.query); }\n    },\n    {\n        key: 'searchOrgs',\n        method: 'get',\n        path: 'agol/orgs',\n        auth: false,\n        execFn: function(svc, req) { return svc.searchOrgs(req.query); }\n    },\n    {\n        key: 'getItem',\n        method: 'get',\n        path: 'agol/items/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.getItem(req.params.id); }\n    },\n    {\n        key: 'getGroup',\n        method: 'get',\n        path: 'agol/groups/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.getGroup(req.params.id); }\n    },\n    {\n        key: 'getOrg',\n        method: 'get',\n        path: 'agol/orgs/:id',\n        auth: false,\n        execFn: function(svc, req) { return svc.getOrg(req.params.id); }\n    }\n];\n\n\n\n/**\n *\n */\nfunction AgolServiceProxy( options ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"AgolServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"AgolServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = AgolService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default AgolServiceProxy;\n","\nimport QueryParameters from './parameters';\n\nconst SORT_OPTIONS_DEFAULT = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nclass KGQuery {\n\n    constructor() {\n\n        this.defaultQuery = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n        this.query = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n    }\n\n\n\n    getQuery() {\n        let result = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    parameter(name, value) {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    setParameter (name, value) {\n        if(value === null || value === undefined)\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    getParameter (key) {\n        return this.query[key];\n    }\n\n    applyParameters (obj) { \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    q(text) {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setQ (text) {\n        this.setParameter(QueryParameters.QUERY, text);\n    }\n\n    getQ() {\n        return this.getParameter(QueryParameters.QUERY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {array[string]} types - KG classifiers for which concepts should be returned\n     */\n    classifiers(types) {\n        this.setClassifiers(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - KG classifiers for which concepts should be returned\n     */\n    setClassifiers (types) {\n        if(types && typeof(types.push) === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.TYPES, types);\n    }\n\n    /**\n     * @return {array[string]} KG classifiers for which concepts should be returned\n     */\n    getClassifiers () {\n        return this.getParameter(QueryParameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.types()\n     * query parameter (they map to different HTTP request parameters).\n     * @param {array[string]} objTypes - Item object type names\n     */\n    types(objTypes) {\n        this.setTypes(objTypes);\n        return this;\n    }\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.setTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @param {array[string]} objTypes - Item object type names\n     */\n    setTypes (objTypes) {\n        if(objTypes && typeof(objTypes.push) === 'undefined')\n            objTypes = [objTypes];\n        this.setParameter(QueryParameters.FOR_TYPES, objTypes);\n    }\n\n    /**\n     * Get the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.getTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @return {array[string]} Item object type names\n     */\n    getTypes () {\n        return this.getParameter(QueryParameters.FOR_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this.query.page = page*1;\n    }\n\n    getPage() {\n        return this.query.page;\n    }\n\n    nextPage() {\n        this.setPage(this.query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this.query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this.query.size = size*1;\n    }\n\n    getPageSize() {\n        return this.query.size;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.query.sort = sort;\n    }\n\n    getSort() {\n        return this.query.sort;\n    }\n\n    getSortField() {\n        return this.query.sort.split(',')[0];\n    }\n\n    getSortOrder() {\n        return this.query.sort.split(',')[1] === 'asc';\n    }\n\n    /**\n     * @return {array} list of key-value pairs of sort options\n     */\n    getSortOptions() {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = this.defaultQuery;\n    }\n}\n\nexport default KGQuery;\n","\nimport Q from 'q';\nimport QueryParameters from '../shared/parameters';\n\n\nclass KGService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = Config.timeout || 30000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/recommender';\n    }\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving recommended concepts as search results\n     */\n    suggest (query, options) {\n        let url = this.baseUrl + '/suggest';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.suggest() - Error suggesting concepts: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving concept types as search results\n     */\n    types (query, options) {\n        let url = this.baseUrl + '/types';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.types() - Error searching types: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving concept sources as search results\n     */\n    sources (query, options) {\n        let url = this.baseUrl + '/sources';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.sources() - Error searching sources: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n\n    /**\n     * internal method used by exposed methods\n     */\n    _search (url, query, options) {\n        return Q.resolve( true )\n        .then( () => {\n\n            if(query && typeof(query.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                query = query.getQuery();\n            }\n\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query, options:options\n            });\n            return this.execute(opts);\n        });\n    }\n\n\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout || Config.timeout || 30000;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"KGService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport default KGService;\n","\n\n\nexport default  {\n    PURPOSE             : 'purpose',\n    FUNCTION            : 'function',\n    TOPIC_PRIMARY       : 'primaryTopic',\n    TOPIC_SECONDARY     : 'secondaryTopic',\n    SUBJECT_PRIMARY     : 'primarySubject',\n    SUBJECT_SECONDARY   : 'secondarySubject',\n    COMMUNITY           : 'community',\n    AUDIENCE            : 'audience',\n    PLACE               : 'place',\n    CATEGORY            : 'category'\n};\n","\nimport Query from './query';\n\nexport default function() {\n    return new Query();\n}\n","\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport LayerService from './layer';\nimport ServiceService from './service';\nimport GalleryService from './gallery';\nimport DatasetService from './dataset';\nimport MapService from './map';\n\n/**\n * @param {any} arg - string type or object with type property\n * @param {string} baseUrl - base endpoint of GeoPlatform API\n * @return {ItemService}\n */\nconst ServiceFactory = function(arg, baseUrl, httpClient) {\n    let type = (typeof(arg) === 'string') ?\n        arg : (arg && arg.type ? arg.type : null);\n    if(!type) throw new Error(\"Must provide a type or object with a type specified\");\n    if(!baseUrl) throw new Error(\"Must provide a base url\");\n    if(!httpClient) throw new Error(\"Must provide an http client to use to make requests\");\n    switch(type) {\n        case ItemTypes.LAYER:   return new LayerService(  baseUrl, httpClient);\n        case ItemTypes.SERVICE: return new ServiceService(baseUrl, httpClient);\n        case ItemTypes.MAP:     return new MapService(    baseUrl, httpClient);\n        case ItemTypes.GALLERY: return new GalleryService(baseUrl, httpClient);\n        case ItemTypes.DATASET: return new DatasetService(baseUrl, httpClient);\n        default:                return new ItemService(   baseUrl, httpClient);\n    }\n};\n\nexport default ServiceFactory;\n","\n\nimport ItemTypes from '../shared/types';\n\n\nconst Categories = {\n    UNKNOWN:         'Unknown Category',\n    DATASET:         'Dataset',\n    SERVICE:         'Service',\n    LAYER:           'Layer',\n    MAP:             'Map',\n    GALLERY:         'Gallery',\n    COMMUNITY:       'Community',\n    CONTACT:         'Contact',\n    ORGANIZATION:    'Organization',\n    CONCEPT:         'Concept',\n    CONCEPT_SCHEME:  'Concept Scheme',\n    KNOWLEDGE_GRAPH: 'Knowledge Graph',\n    USER:            'User',\n    COMMUNITY_POST:  'Community Post',   //post within a community portal\n    COMMUNITY_PAGE:  'Community Page',   //page within a community portal\n    APP_PAGE:        'Application Page', //page/view within a client application\n};\n\nconst Events = {\n    ACCESSED:   'Accessed',  //related item was accessed using API\n    DISPLAYED:  'Displayed', //related item was displayed in a native form (map)\n    VIEWED:     'Viewed',    //related item was viewed in general form (metadata)\n    CREATED:    'Created',\n    EDITED:     'Edited',\n    DELETED:    'Deleted'\n};\n\n\nfunction getCategory(type) {\n    let result = Categories.UNKNOWN;\n    if(type) {\n        let cats = Object.keys(Categories).map(k=>Categories[k]);\n        //if existing category was specified\n        if(~cats.indexOf(type))\n            return type;\n        //if an ItemType with prefix was specified (strip off prefix)\n        else if(~type.indexOf(':')) {\n            let cat = type.split(':')[1];\n            if(~cats.indexOf(cat))\n                return cat;\n        }\n    }\n    return result;\n}\n\n\n\n/**\n *\n */\nclass Event {\n    constructor(category, type, item, related) {\n        if(!category || ! type) {\n            throw new Error(\"TrackingService Event - Must specific an event \" +\n            \"category and event type when constructing events\");\n        }\n        this.category = category;\n        this.type = type;\n        this.setItem(item);\n        this.setRelated(related);\n    }\n    getCategory() { return this.category; }\n    getType() { return this.type; }\n    getItem() { return this.item; }\n    setItem(item) { this.item = item ? (item.id || item) : null; }\n    getRelated() { return this.related; }\n    setRelated(related) { this.related = related ? (related.id || related) : null; }\n}\n\n\n\n/**\n * @param {string} eventType - type of event being created\n * @param {Object} item - GeoPlatform Item instance\n * @return {Array<Event>} list of event objects\n */\nfunction TrackingEventFactory(eventType, item) {\n    let result = [];\n    if(eventType && item && item.type) {\n        if(ItemTypes.MAP === item.type) {\n            result.push( new Event(Categories.MAP, eventType, item) );\n            if(Events.DISPLAYED === eventType) {\n\n                item.layers.forEach( layerState => {\n                    if(layerState.layer) {\n                        let layerEvents = TrackingEventFactory(eventType, layerState.layer)\n                            .filter(e=>e!==null);\n                        if(layerEvents && layerEvents.length) {\n                            result = result.concat(layerEvents);\n                        }\n                    }\n                });\n\n                if(item.baseLayer) {\n                    let baseEvents = TrackingEventFactory(eventType, item.baseLayer)\n                        .filter(e=>e!==null);\n                    if(baseEvents && baseEvents.length)\n                        result = result.concat( baseEvents );\n                }\n            }\n\n        } else if(ItemTypes.LAYER === item.type) {\n            result.push( new Event(Categories.LAYER, eventType, item) );\n            if(Events.DISPLAYED === eventType && item.services && item.services.length) {\n                result.push( new Event(Categories.SERVICE, eventType, item.services[0]) );\n            }\n        } else {\n            let category = getCategory(item.type);\n            result.push( new Event(category, eventType, item) );\n        }\n    }\n    // else {\n    //     if(!event) console.log(\"Missing event\");\n    //     if(!item) console.log(\"Missing item\");\n    //     if(!item.type) console.log(\"Missing item type\");\n    // }\n    return result;\n}\n\n\n\n\n\n/**\n *\n */\nclass DefaultTrackingServiceProvider {\n    constructor() {}\n    logEvent( category, event, item, related ) {\n        console.log( \"EVENT (\" + category + \") - \" + event + \" : \" + item);\n    }\n    // logPageView( view, data ) {\n    //     console.log(\"PAGEVIEW \" + view + (data ? \" : \" + JSON.stringify(data) : '') );\n    // }\n    logSearch(params, resultCount) {\n        console.log( \"Query : \" + JSON.stringify(params) + \" found \" + resultCount+ \" matches\");\n    }\n}\n\n\n\n\n\n\n/**\n * TrackingService\n *\n * Service for logging events related to usage of the GeoPlatform and its data\n *\n * Example:\n *\n *   import { TrackingService, EventCategories, EventTypes } from 'geoplatform.client';\n *\n *   let tracker = new TrackingService();\n *   tracker.setProvider( ... );\n *   tracker.event( Event.of(EventCategories.MAP, EventTypes.VIEWED, map) );\n *\n * Multi-event example:\n *\n *   import {\n *      TrackingService, TrackingEventCategories, TrackingEventTypes, TrackingEventFactory\n *   } from 'geoplatform.client';\n *\n *   let tracker = new TrackingService();\n *   tracker.setProvider( ... );\n *\n *   let events = [\n *       TrackingEvent.of( TrackingCategories.MAP, TrackingEventTypes.VIEWED, this.map )\n *       TrackingEvent.of( TrackingCategories.LAYER, TrackingEventTypes.VIEWED, this.map.baseLayer )\n *   ];\n *   tracker.event(events);\n *\n *   //OR use the event factory:\n *   tracker.event( TrackingEventFactory(EventTypes.VIEWED, this.map) );\n */\nclass TrackingService {\n\n    constructor(options) {\n        if(options && typeof(options) === 'object')\n            Object.assign(this, options);\n\n        if(!this.provider)\n            this.setProvider(new DefaultEventServiceProvider());\n    }\n\n    /**\n     * @param {EventServiceProvider} provider -\n     */\n    setProvider(provider) {\n        if(provider)\n            this.provider = provider;\n    }\n\n    /**\n     * @param {Event} event - event to log\n     * @return {TrackingService}\n     */\n    event( event ) {\n        this.logEvent( event );\n        return this;\n    }\n\n    /**\n     * @param {Event} event - event to log\n     */\n    logEvent( event ) {\n        if(!this.provider || !this.provider.logEvent || !event) return;\n\n        if(typeof(event.push) !== 'undefined') {\n            event.forEach( evt => this.logEvent(evt) );\n\n        } else {\n            try {\n                this.provider.logEvent(\n                    event.getCategory(),\n                    event.getType(),\n                    event.getItem(),\n                    event.getRelated()\n                );\n            } catch(e) {\n                console.log(\n                    \"TrackingService.logEvent() - Error logging event (\" +\n                    event.getCategory() + \", \" + event.getType() + \", \" +\n                    event.getItem() + \") - \" + e.message\n                );\n            }\n        }\n    }\n\n\n    /**\n     * @param {string} view - name of the view being activated\n     * @param {any} data - additional context to supply for the event\n     * @return {TrackingService}\n     * @deprecated use svc.event( new Event(EventCategories.APP_PAGE, EventTypes.VIEWED, pageId) )\n     */\n    pageView( view, data) {\n        this.logPageView(view, data);\n        return this;\n    }\n\n    /**\n     * @param {string} view - name of the view being activated\n     * @param {any} data - additional context to supply for the event\n     * @deprecated use svc.logEvent( new Event(EventCategories.APP_PAGE, EventTypes.VIEWED, pageId) )\n     */\n    logPageView( view, data ) {\n        this.logEvent( new Event(Categories.APP_PAGE, Events.VIEWED, view) );\n        // if(this.provider && this.provider.logPageView) {\n        //     this.provider.logPageView(view, data);\n        // }\n    }\n\n    /**\n     * @param {object|string} params\n     * @param {integer} resultCount\n     */\n    logSearch (params, resultCount) {\n        this.provider.logSearch(params, resultCount);\n    }\n\n}\n\n\nexport {\n    Event as TrackingEvent,\n    TrackingService,\n    Categories as TrackingCategories,\n    Events as TrackingTypes,\n    TrackingEventFactory\n};\n"],"names":["Object","assign","defineProperty","value","target","varArgs","TypeError","to","index","arguments","length","nextSource","nextKey","prototype","hasOwnProperty","call","writable","configurable","JQueryHttpClient","options","setTimeout","timeout","Config","setAuthToken","token","arg","opts","method","url","json","dataType","params","data","processData","contentType","headers","Authorization","o","jQuery","Error","d","Q","defer","success","resolve","error","xhr","status","message","reject","ajax","promise","NGHttpClient","angular","$http","responseType","useXDomain","injector","get","then","response","catch","NodeHttpClient","qs","file","fs","require","formData","createReadStream","path","filename","originalFilename","body","auth","deferred","request","checkAndHandleError","e","props","code","connect","statusCode","babelHelpers.typeof","sidx","indexOf","eidx","item","substring","uri","pathname","JSON","parse","err","DATASET","SERVICE","LAYER","MAP","GALLERY","COMMUNITY","ORGANIZATION","CONTACT","CONCEPT","CONCEPT_SCHEME","STANDARD","ItemService","httpClient","setUrl","client","httpMethods","baseUrl","apiBase","milliseconds","logger","msg","debug","id","buildRequest","execute","logError","itemObj","getUri","patch","getQuery","format","undefined","isFile","ro","object","obj","type","ids","identifiers","uris","createRequestOpts","logDebug","stringify","DatasetService","MapService","LayerService","req","keys","missing","find","key","srs","bbox","height","width","info_format","x","y","i","j","ALTERNATE_TITLE","BEGINS","CREATED","CREATED_BEFORE","CREATED_AFTER","CREATED_BY","CREATOR","CONTRIBUTED_BY","ENDS","EXTENT","IDENTIFIERS","KEYWORDS","LAST_MODIFIED_BY","MODIFIED","MODIFIED_BEFORE","MODIFIED_AFTER","PUBLISHERS_ID","PUBLISHERS_LABEL","PUBLISHERS_URI","CONTACTS_ID","CONTACTS_LABEL","CONTACTS_URI","QUERY","SCHEMES_ID","SCHEMES_LABEL","SCHEMES_URI","SIMILAR_TO","STATUS","SERVICE_TYPES","THEMES_ID","THEMES_LABEL","THEMES_URI","TYPES","URI","USED_BY_ID","USED_BY_LABEL","USED_BY_URI","VISIBILITY","RESOURCE_TYPE","LANDING_PAGE","PURPOSE","RELIABILITY","RELIABILITY_MIN","RELIABILITY_MAX","ONLINE","COMPLIANT","SPEED","SPEED_MIN","SPEED_MAX","LIKES","LIKES_MIN","LIKES_MAX","VIEWS","VIEWS_MIN","VIEWS_MAX","HREF","LAYER_TYPE","LAYER_NAME","PARENT_LAYER","SUB_LAYER","MAP_LAYER","GALLERY_ITEM","FACETS","FIELDS","SORT","PAGE","PAGE_SIZE","FOR_TYPES","Fields","ACCESS_RIGHTS","ALTERNATE_TITLES","ANNOTATIONS","CLASSIFIERS","CONTACTS","DATASETS","DESCRIPTION","DISTRIBUTIONS","GALLERY_ITEMS","LABEL","LAYERS","LEGEND","PUBLISHERS","RESOURCE_TYPES","SERVICE_TYPE","SERVICES","SPATIAL","STATISTICS","SUB_LAYERS","TEMPORAL","THEMES","THUMBNAIL","USED_BY","FIELDS_DEFAULT","Facets","CONCEPT_SCHEMES","FACETS_DEFAULT","FacetToParam","Parameters","SORT_OPTIONS_DEFAULT","label","BBOX_REGEX","toArray","result","push","Query","defaultQuery","slice","defaults","query","applyParameters","prop","join","name","setParameter","p","facet","param","console","log","text","setQ","getParameter","setKeywords","setUri","types","setTypes","user","setCreatedBy","setLastModifiedBy","themes","parameter","setThemes","publishers","setPublishers","contacts","setContacts","setUsedBy","schemes","setSchemes","setServiceTypes","vis","setVisibility","visibility","setStatus","setExtent","toBboxString","test","date","beforeOrAfter","setModified","dir","oppProp","getTime","Date","setCreated","setBeginDate","setEndDate","begin","end","setBetween","begins","ends","setResourceTypes","names","setFacets","facets","getFacets","idx","splice","fields","setFields","field","getFields","page","setPage","isNaN","getPage","size","setPageSize","sort","order","setSort","getSort","split","ServiceService","service","svc","ItemTypes","resourceTypes","pageSize","results","GalleryService","galleryId","itemId","UtilsService","property","location","AgolQuery","_query","q","setGroups","groups","setOrgs","orgs","AgolService","filter","replace","ualUrl","configure","ServiceProxy","bindRoutes","router","routes","paths","forEach","route","res","next","getService","execFn","respFn","onError","finally","onFinish","getClient","needsAuth","accessToken","warn","jwt","svcClass","serviceClass","setLogger","Routes","search","save","remove","export","mimeType","disposition","set","setHeader","send","input","files","import","pathBaseDefault","ItemServiceProxy","express","Router","about","harvest","liveTest","statistics","ServiceServiceProxy","style","describe","validate","LayerServiceProxy","DatasetServiceProxy","MapServiceProxy","GalleryServiceProxy","locate","parseFile","capabilities","UtilsServiceProxy","searchItems","searchGroups","searchOrgs","getItem","getGroup","getOrg","AgolServiceProxy","KGQuery","QueryParameters","setClassifiers","objTypes","KGService","_search","FUNCTION","TOPIC_PRIMARY","TOPIC_SECONDARY","SUBJECT_PRIMARY","SUBJECT_SECONDARY","AUDIENCE","PLACE","CATEGORY","ServiceFactory","Categories","UNKNOWN","KNOWLEDGE_GRAPH","USER","COMMUNITY_POST","COMMUNITY_PAGE","APP_PAGE","Events","ACCESSED","DISPLAYED","VIEWED","EDITED","DELETED","getCategory","cats","map","k","cat","Event","category","related","setItem","setRelated","TrackingEventFactory","eventType","layers","layerState","layer","layerEvents","concat","baseLayer","baseEvents","services","DefaultTrackingServiceProvider","event","resultCount","TrackingService","provider","setProvider","DefaultEventServiceProvider","logEvent","evt","getType","getRelated","view","logPageView","logSearch"],"mappings":"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"}