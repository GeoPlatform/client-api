{"version":3,"file":"geoplatform-client-angularjs.js.map","sources":["ng://@geoplatform/client/angularjs/http/ng.ts"],"sourcesContent":["\nimport * as Q from 'q';\nimport * as angular from \"angular\";\nimport { GPHttpClient } from \"@geoplatform/client\";\n\n\n// const angular = (window as any).angular || null;\n\n\nclass NGHttpClient extends GPHttpClient {\n\n    private $http : any;\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     * @param options.$http - angular $http service instance\n     */\n    constructor(options ?: { [key:string] : any }) {\n        super(options);\n        if(typeof(angular) === 'undefined' || angular === null) {\n            throw new Error(\"AngularJS could not be found globally\");\n        }\n        if(options && options.$http)\n            this.$http = options.$http;\n    }\n\n    createRequestOpts(options : { [key:string] : any }) : any {\n\n        let opts : { [key:string] : any } = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true || 'json' === options.responseType)\n            opts.dataType = 'json';\n        else if('text' === options.responseType)\n            opts.dataType = 'text';\n\n        if(options.params) {\n            opts.params = options.params;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n        }\n\n        //set authorization token if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n                opts.useXDomain = true;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n    execute(opts : any) : Q.Promise<any> {\n\n        let $http = this.$http || angular.injector(['ng']).get('$http');\n        return Q.resolve( $http )\n        .then($http => {\n            if(typeof($http) === 'undefined')\n                throw new Error(\"Angular $http not resolved\");\n\n            // console.log(opts);\n            return $http(opts);\n        })\n        .then(response=>response.data)\n        .catch(response=>Q.reject(response.data));\n    }\n\n}\n\nexport default NGHttpClient;\n"],"names":["angular.injector","Q.resolve","Q.reject"],"mappings":";;;;;;;;;AACA,AAQA,kBAAmB,SAAQ,YAAY;;;;IASnC,YAAY,OAAiC;QACzC,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAG,QAAO,OAAO,CAAC,KAAK,WAAW,IAAI,OAAO,KAAK,IAAI,EAAE;YACpD,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC5D;QACD,IAAG,OAAO,IAAI,OAAO,SAAM;YACvB,IAAI,CAAC,KAAK,GAAG,OAAO,SAAM,CAAC;KAClC;;;;;IAED,iBAAiB,CAAC,OAAgC;;QAE9C,IAAI,IAAI,GAA4B;YAChC,MAAM,EAAE,OAAO,UAAO;YACtB,GAAG,EAAE,OAAO,OAAI;YAChB,OAAO,EAAE,OAAO,eAAY,IAAI,CAAC,OAAO;SAC3C,CAAC;QAEF,IAAG,OAAO,aAAU,IAAI,IAAI,MAAM,KAAK,OAAO,gBAAa;YACvD,IAAI,eAAY,MAAM,CAAC;aACtB,IAAG,MAAM,KAAK,OAAO,gBAAa;YACnC,IAAI,eAAY,MAAM,CAAC;QAE3B,IAAG,OAAO,YAAS;YACf,IAAI,aAAU,OAAO,UAAO,CAAC;SAChC;QAED,IAAG,OAAO,UAAO;YACb,IAAI,WAAQ,OAAO,QAAK,CAAC;SAC5B;;QAGD,IAAG,IAAI,CAAC,KAAK,EAAE;;YACX,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACzB,IAAG,KAAK,EAAE;gBACN,IAAI,cAAW,IAAI,eAAY,EAAE,CAAC;gBAClC,IAAI,YAAS,aAAa,GAAG,SAAS,GAAG,KAAK,CAAC;gBAC/C,IAAI,iBAAc,IAAI,CAAC;aAC1B;SACJ;;QAGD,IAAG,OAAO,aAAU;YAChB,KAAI,IAAI,CAAC,IAAI,OAAO,aAAU;gBAC1B,IAAG,OAAO,YAAS,cAAc,CAAC,CAAC,CAAC,EAAE;oBAClC,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,YAAS,CAAC,CAAC,CAAC;iBAChC;aACJ;SACJ;QAED,OAAO,IAAI,CAAC;KACf;;;;;IAED,OAAO,CAAC,IAAU;;QAEd,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,IAAIA,QAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChE,OAAOC,OAAS,CAAE,KAAK,CAAE;aACxB,IAAI,CAAC,KAAK;YACP,IAAG,QAAO,KAAK,CAAC,KAAK,WAAW;gBAC5B,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;;YAGlD,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;SACtB,CAAC;aACD,IAAI,CAAC,QAAQ,IAAE,QAAQ,CAAC,IAAI,CAAC;aAC7B,KAAK,CAAC,QAAQ,IAAEC,MAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;KAC7C;CAEJ;;;;;;;;;;;;;;"}
