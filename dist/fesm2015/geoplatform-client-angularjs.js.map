{"version":3,"file":"geoplatform-client-angularjs.js.map","sources":["ng://@geoplatform/client/angularjs/http/ng.ts","ng://@geoplatform/client/angularjs/index.ts"],"sourcesContent":["\nimport * as angular from \"angular\";\nimport { GPHttpClient } from \"@geoplatform/client\";\n\n\n\nclass NGHttpClient extends GPHttpClient {\n\n    private $http : any;\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     * @param options.$http - angular $http service instance\n     */\n    constructor(options ?: { [key:string] : any }) {\n        super(options);\n        if(typeof(angular) === 'undefined' || angular === null) {\n            throw new Error(\"AngularJS could not be found globally\");\n        }\n        if(options && options.$http)\n            this.$http = options.$http;\n    }\n\n    createRequestOpts(options : { [key:string] : any }) : any {\n\n        let opts : { [key:string] : any } = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true || 'json' === options.responseType)\n            opts.dataType = 'json';\n        else if('text' === options.responseType)\n            opts.dataType = 'text';\n\n        if(options.params) {\n            opts.params = options.params;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n        }\n\n        //set authorization token if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n                opts.useXDomain = true;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n    execute(opts : any) : Promise<any> {\n\n        let $http = this.$http || angular.injector(['ng']).get('$http');\n        return Promise.resolve( $http )\n        .then($http => {\n            if(typeof($http) === 'undefined')\n                throw new Error(\"Angular $http not resolved\");\n\n            // console.log(opts);\n            return $http(opts);\n        })\n        .then(response=>response.data)\n        .catch(response=> { throw new Error(response.data); });\n    }\n\n}\n\nexport default NGHttpClient;\n","\nimport NGHttpClient from './http/ng';\n\n\nimport * as angular from \"angular\";\nimport {\n    Config, Query, QueryFactory,\n    ItemService, UtilsService, TrackingService,\n    DatasetService, ServiceService, LayerService, MapService, GalleryService\n} from \"@geoplatform/client\";\n\nif(angular && typeof(angular.module) !== 'undefined') {\n\n    let serviceFactory = function(gpNgHttpClient, svcClass, url) {\n        return new svcClass( url, gpNgHttpClient );\n    }\n\n    /*\n     * Define AngularJS module that can be included in downstream applications\n     *\n     * Example:\n     *\n     *  angular.module('myApp', [ 'ui-router', 'gpClient' ])\n     *  .component('myComponent', {\n     *    bindings: { },\n     *    template: \"<div></div>\",\n     *    controller: function(gpQueryFactory, gpItemService) {\n     *       this.$onInit = function() {\n     *          gpItemService.search( gpQueryFactory() ).then( response => { ... });\n     *       };\n     *    }\n     *  ]);\n     */\n    angular.module('gpClient', [])\n\n    .provider('gpConfig', function() {\n        return {\n            $get: function() {\n                return Config;\n            }\n        };\n    })\n\n    .factory('gpQueryFactory', function() { return QueryFactory; })\n\n    .factory('gpNgHttpClient', ['$http',\n        function( $http ) {\n            return new NGHttpClient({ $http : $http });\n        }\n    ])\n\n    .factory('gpTrackingServiceFactory', function() {\n        return function(options) {\n            return new TrackingService( options );\n        };\n    })\n\n    ;\n\n\n    const serviceClasses = {\n        'gpItemService': ItemService,\n        'gpUtilsService': UtilsService,\n        'gpDatasetService': DatasetService,\n        'gpServiceService': ServiceService,\n        'gpLayerService': LayerService,\n        'gpMapService': MapService,\n        'gpGalleryService': GalleryService\n    };\n\n    Object.keys(serviceClasses).forEach( (name) => {\n\n        let svcClass = serviceClasses[name];\n\n        angular.module('gpClient')\n\n        /*\n            Service for each client service class that uses the\n            currently configured settings when created.  Note the\n            settings may change after the service singleton is\n            created, in which case the factory option should be used.\n         */\n        .service(name, ['gpNgHttpClient', 'gpConfig',\n            function(gpNgHttpClient, gpConfig) {\n                return serviceFactory(gpNgHttpClient, svcClass, gpConfig.ualUrl);\n            }\n        ])\n\n        /*\n            Factory for creating services for each client service class\n            which uses a customizable endpoint to request data from. Use\n            this if services need to be able to change API endpoints\n            during application runtime.\n         */\n        .factory(name+'Factory', ['gpNgHttpClient', function(gpNgHttpClient) {\n            return function(url) {\n                return serviceFactory(gpNgHttpClient, svcClass, url);\n            };\n        }]);\n\n    });\n}\n\n\n\nexport { NGHttpClient };\n"],"names":["angular.injector","angular.module"],"mappings":"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"}
