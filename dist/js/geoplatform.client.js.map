{"version":3,"file":"geoplatform.client.js","sources":["../../src/http/jq.js","../../src/http/ng.js","../../src/http/node.js","../../src/shared/types.js","../../src/services/item.js","../../src/services/dataset.js","../../src/services/map.js","../../src/services/layer.js","../../src/services/service.js","../../src/services/gallery.js","../../src/services/utils.js","../../src/shared/parameters.js","../../src/shared/kg-query.js","../../src/services/kg.js","../../src/shared/classifiers.js","../../src/shared/facets.js","../../src/shared/query.js","../../src/shared/query-factory.js","../../src/services/factory.js","../../src/shared/config.js"],"sourcesContent":["\nimport Q from 'q';\n\nclass JQueryHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options) {\n        options = options || {};\n        this.setTimeout(options.timeout||10000);\n        this.setAuthToken(options.token);\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true)\n            opts.dataType = 'json';\n\n        if(options.params) {\n            opts.data = options.params;\n            opts.processData = true;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n            opts.processData = options.processData || false;\n            opts.contentType = 'application/json';\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n\n    execute(opts) {\n\n        if(typeof(jQuery) === 'undefined') {\n            throw new Error(\"jQuery is not available. Ensure it is included in your application\");\n        }\n        let d = Q.defer();\n        opts.success = function(data) { d.resolve(data); };\n        opts.error = function(xhr, status, message) { d.reject(new Error(message)); };\n        jQuery.ajax(opts);\n        return d.promise;\n    }\n\n}\n\nexport default JQueryHttpClient;\n","\nimport Q from 'q';\n\nclass NGHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     * @param {Object} options.$http - angular $http service instance\n     */\n    constructor(options) {\n        if(typeof(angular) === 'undefined')\n            throw new Error(\"Angular not defined\");\n\n        options = options || {};\n        this.setTimeout(options.timeout||10000);\n        this.setAuthToken(options.token);\n\n        if(options.$http)\n            this.$http = options.$http;\n\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true)\n            opts.dataType = 'json';\n\n        if(options.params) {\n            opts.params = options.params;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n        }\n\n        //set authorization token if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n                opts.useXDomain = true;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n    execute(opts) {\n\n        if(typeof(angular) === 'undefined')\n            throw new Error(\"Angular is not defined, ensure you have included it as a dependency in your application\");\n\n        let $http = this.$http || angular.injector(['ng']).get('$http');\n        return Q.resolve( $http )\n        .then($http => {\n            if(typeof($http) === 'undefined')\n                throw new Error(\"Angular $http not resolved\");\n\n            // console.log(opts);\n            return $http(opts);\n        })\n        .then(response=>response.data)\n        .catch(response=>Q.reject(response.data));\n    }\n\n}\n\nexport default NGHttpClient;\n","\nimport Q from 'q';\n\nclass NodeHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options) {\n        options = options || {};\n        this.setTimeout(options.timeout||10000);\n        this.setAuthToken(options.token);\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            json: false !== options.json,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.params) {\n            opts.qs = options.params;\n        }\n\n        if(options.file) {\n            const fs = require('fs');\n            if(!fs) throw new Error(\"Module 'fs' not available\");\n            opts.formData = {\n                file: {\n                    value:  fs.createReadStream(options.file.path),\n                    options: {\n                        filename: options.file.originalFilename\n                    }\n                }\n            };\n            Object.assign(opts.formData, options.data||{});\n\n        } else if(options.data) {\n            if(options.formData) {\n                opts.formData = options.data;\n            } else {\n                opts.body = options.data;\n            }\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.auth = { 'bearer': token };\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        // console.log(JSON.stringify(opts));\n\n        return opts;\n    }\n\n\n\n    /**\n     *\n     */\n    execute(options) {\n        let deferred = Q.defer();\n\n        const request = require('request');\n        if(!request) {\n            throw new Error(\"Module 'request' not available\");\n        }\n        // require('request-debug')(request);\n\n        request(options, (error, response, body) => {\n            this.checkAndHandleError(error, response)\n            .then( () =>  {\n                if(options.json === false)\n                    deferred.resolve( response );\n                else\n                    deferred.resolve( body );\n            })\n            .catch( e => deferred.reject(e) );\n        });\n        return deferred.promise;\n    }\n\n\n    /**\n     *\n     */\n    checkAndHandleError (error, response) {\n\n        let props = {\n            message: null,\n            error: null,    //error type\n            status: 200\n        };\n\n        if(error) {\n            // Logger.debug(\"Error generated by request library: \" + error.code);\n\n            if(error.code === 'ETIMEDOUT' || error.code === 'ESOCKETTIMEDOUT') {\n\n                props.status = 500;\n                props.error = \"Connection Timeout\";\n                props.message = \"The response from the service took too long to read\";\n\n                if(error.connect === true) {\n                    props.message = \"Unable to establish a connection to the service\";\n                }\n\n            } else {\n                return Q.reject(error);\n            }\n\n        } else if(response.statusCode < 200 || response.statusCode > 204) {\n\n            // Logger.debug('Error returned by remote endpoint (' + response.statusCode + ')');\n            // Logger.debug(JSON.stringify(response));\n\n            props.status = response.statusCode;\n\n            if(response.body && typeof(response.body) === 'object') {\n                props = response.body;\n                props.status = props.status || response.statusCode;\n                props.message = props.message || \"An error occurred communicating with service\";\n\n                if(response.statusCode === 409) {\n                    let sidx = response.body.message.indexOf(\" \");\n                    let eidx = response.body.message.indexOf(' already exists');\n                    if(sidx >= 0 && eidx > sidx) {\n                        props.item = response.body.message.substring(sidx+1, eidx);\n                    }\n                }\n\n            } else {\n\n                switch(response.statusCode) {\n                    case 404 :\n                        props.error = \"Not Found\";\n                        props.message = response.request.uri.pathname + \" cannot be found\";\n                        break;\n                    case 401 :\n                        props.error = \"Unauthenticated\";\n                        props.message = \"You are not authenticated\";\n                        break;\n                    case 403 :\n                        props.error = \"Unauthorized\";\n                        props.message = \"You are not authorized to access \" + response.request.uri.pathname;\n                        break;\n                    case 409 :\n                        props.error = \"Conflict\";\n                        props.message = \"Item already exists\";\n\n                        // pattern received is: { ..., message: 'Resource <identifier> already exists', ... }\n                        try {\n                            let json = JSON.parse(response.body);\n                            let sidx = json.message.indexOf(\" \");\n                            let eidx = json.message.indexOf(' already exists');\n                            if(sidx >= 0 && eidx > sidx) {\n                                props.item = json.message.substring(sidx+1, eidx);\n                            }\n                        } catch( e ) {\n                            message += '.  Unable to extract existing identifier from service response';\n                        }\n                        break;\n\n                    default:\n\n                        try {\n                            let json = JSON.parse(response.body);\n                            props = json;\n                            props.status = response.statusCode;\n                            // Logger.debug(\"PARSED ERROR: \" + JSON.stringify(props));\n\n                        } catch (e) {\n                            props.error = \"Server Error\";\n                            props.message = response.body;\n                            // Logger.debug(\"DEFAULTED ERROR: \" + JSON.stringify(props));\n                        }\n                }\n\n            }\n\n        }\n\n        if( props.status < 200 || props.status > 204 ) {\n\n            props.error = props.error || \"Server Error\";\n            props.status = props.status || response.statusCode;\n            props.message = props.message || \"An error occurred communicating with service\";\n\n            let err = new Error(props.message);\n            Object.assign(err, props);\n\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err);\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + JSON.stringify(err));\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err.message);\n            return Q.reject(err);\n        }\n\n        return Q.resolve();\n    }\n\n}\n\n\nexport default NodeHttpClient;\n","\n\nexport default {\n    DATASET         : \"dcat:Dataset\",\n    SERVICE         : \"regp:Service\",\n    LAYER           : \"Layer\",\n    MAP             : \"Map\",\n    GALLERY         : \"Gallery\",\n    ORGANIZATION    : \"org:Organization\",\n    COMMUNITY       : 'Community',\n    CONCEPT         : \"skos:Concept\",\n    CONCEPT_SCHEME  : \"skos:ConceptScheme\",\n    STANDARD        : 'dct:Standard'\n};\n","\nimport Q from 'q';\n\n\n/**\n * ItemService\n * service for working with the GeoPlatform API to\n * retrieve and manipulate items.\n *\n * Ex Searching Items\n *      let params = { q: 'test' };\n *      itemService.search(params).then(response=>{\n *          console.log(response.results.length + \" of \" + response.totalResults);\n *      }).catch(e=>{...});\n *\n * Ex Fetch Item:\n *      itemService.get(itemId).then(item=>{...}).catch(e=>{...});\n *\n * Ex Saving Item:\n *      itemService.save(item).then(item=>{...}).catch(e=>{...});\n *\n * Ex Deleting Item:\n *      itemService.remove(itemId).then(()=>{...}).catch(e=>{...});\n *\n * Ex Patching Item:\n *      itemService.patch(itemId,patch).then(item=>{...}).catch(e=>{...});\n *\n */\nclass ItemService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = 10000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/items';\n    }\n\n\n    /**\n     * @param {string} id - identifier of item to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    get (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.get() - Error fetching item ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {Object} itemObj - item to create or update\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    save (itemObj, options) {\n\n        return Q.resolve( itemObj )\n        .then( item => {\n\n            let method = 'POST',\n                url = this.baseUrl;\n            if(item.id) {\n                method = \"PUT\";\n                url += '/' + item.id;\n            }\n\n            let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.save() - Error saving item: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of item to delete\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving true if successful or an error\n     */\n    remove (id, options) {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:\"DELETE\", url: url, options: options\n            });\n            return this.execute(opts);\n        })\n        .then(response => true)\n        .catch(e => {\n            let err = new Error(`ItemService.remove() - Error deleting item ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of item to patch\n     * @param {Object} patch - HTTP-PATCH compliant set of properties to patch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    patch (id, patch, options) {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method: \"PATCH\", url: url, data: patch, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.patch() - Error patching item ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or GeoPlatform.Query instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    search (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl, params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.search() - Error searching items: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     *\n     * @param {string} arg - URL to metadata document or File to upload\n     * @param {string} format - metadata format of specified document\n     * @return {Promise} resolving GeoPlatform Item\n     */\n    import (arg, format, options) {\n\n        return Q.resolve( true )\n        .then( () => {\n            if(arg===null || arg === undefined) {\n                throw new Error(\"Must provide a valid URL or File\");\n            }\n            let isFile = typeof(arg) !== 'string';\n            let ro = {\n                method:\"POST\",\n                url: this.apiBase + '/api/import',\n                processData: true,  //for jQuery\n                formData: true,     //for Node (RequestJS)\n                options: options\n            };\n            if(isFile) {\n                ro.file = arg;\n                ro.data = { format: format };\n            } else {\n                ro.formData = false;    //must be false for data to not be multi-part formdata\n                ro.data = { url: arg, format: format };\n            }\n            let opts = this.buildRequest(ro);\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`ItemService.import() - Error importing item: ${e.message}`);\n            if(e.status === 409 || ~e.message.indexOf('Item already exists')) err.status = 409;\n            if(e.item) err.item = e.item;\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {string} id - identifier of the item to export\n     * @param {format} format - string mime type to export\n     * @return {Promise} resolving HTTP response object for enabling attachment downloading\n     */\n    export (id, format, options) {\n\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/export';\n            let opts = this.buildRequest({\n                method: \"GET\", url: url,\n                params: {format:format},\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`ItemService.export() - Error exporting item: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} object - GP object definition to generate a URI for\n     * @param {Object} options - optional request options\n     * @return {Promise} resolving string URI\n     */\n    getUri (object, options) {\n\n        return Q.resolve( object )\n        .then( obj => {\n            if(!obj || !obj.type)\n                throw new Error(\"Must provide an object with a type property\");\n            let url = this.apiBase + '/api/utils/uri';\n            let opts = this.buildRequest({\n                method: \"POST\", url: url, data: obj, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`ItemService.getUri() - Error getting URI for item: ${e.message}`);\n            return Q.reject(err);\n        });\n\n    }\n\n\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout;\n\n        let opts = this.createRequestOpts(options);\n\n        return opts;\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts);\n    }\n\n}\n\nexport default ItemService;\n","\n\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass DatasetService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/datasets';\n    }\n\n\n}\n\nexport default DatasetService;\n","\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass MapService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/maps';\n    }\n\n\n}\n\nexport default MapService;\n","\n\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass LayerService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/layers';\n    }\n\n    /**\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving style JSON object\n     */\n    style (options) {\n        return Q.resolve( true )\n        .then( () => {\n\n            let url = this.baseUrl + '/' + id + '/style';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`LayerService.style() - Error fetching style: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} req identifying extent, x, y\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving feature JSON object\n     */\n    describe( id, req, options ) {\n\n        return Q.resolve( req )\n        .then( (req) => {\n\n            if(!req) {\n                throw new Error(\"Must provide describe parameters to use\");\n            }\n\n            let keys = ['bbox', 'height', 'width', 'x', 'y'];\n            let missing = keys.find(key => !req[key]);\n            if(missing) {\n                throw new Error(`Must specify ${missing} in describe req`);\n            }\n\n            let params = {\n                srs         : 'EPSG:4326',\n                bbox        : req.bbox,\n                height      : req.height,\n                width       : req.width,\n                info_format : 'text/xml',\n                x           : req.x,\n                y           : req.y,\n                i           : req.x, //WMS 1.3.0\n                j           : req.y  //WMS 1.3.0\n            };\n\n            let url = this.baseUrl + '/' + id + '/describe';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`LayerService.describe() -\n                Error describing layer feature: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} params describing layer request to validate\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving empty if successful or a message if failed\n     */\n    validate(id, params, options) {\n\n        return Q.resolve( params )\n        .then( params => {\n\n            if(!params) {\n                throw new Error(\"Must provide parameters to use in layer validation\");\n            }\n\n            let url = this.baseUrl + '/' + id + '/validate';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`LayerService.describe() -\n                Error describing layer feature: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default LayerService;\n","\n\nimport Q from 'q';\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Service service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate service objects.\n *\n * @see ItemService\n */\n\nclass ServiceService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/services';\n    }\n\n\n    /**\n     * Fetch metadata from the specified GeoPlatform Service's\n     * web-accessible implementation using either GetCapabilities\n     * or ESRI documentInfo.\n     * @param {Object} service - GeoPlatform Service object\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving service metadata\n     */\n    about( service, options ) {\n\n        return Q.resolve( service )\n        .then( svc => {\n            if(!svc)\n                throw new Error(\"Must provide service to get metadata about\");\n            let opts = this.buildRequest({\n                method:'POST', url:this.baseUrl + '/about', data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.about() -\n                Error describing service: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service types\n     */\n    types (options) {\n\n        let query = new Query()\n        .types(ItemTypes.STANDARD)\n        .resourceTypes('ServiceType')\n        .pageSize(50)\n        .getQuery();\n\n        return Q.resolve( query )\n        .then( (params) => {\n            let url = this.apiBase + '/api/items';\n            let opts = this.buildRequest({\n                method:'GET', url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response => response.results)\n        .catch(e => {\n            let err = new Error(`ServiceService.types() -\n                Error fetching service types: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} service - GP Service definition\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving imported service\n     */\n    import (service, options) {\n\n        return Q.resolve( service )\n        .then( svc => {\n            let url = this.baseUrl + '/import';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.import() -\n                Error importing service: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {string} id - identifier of GP service to harvest layers for\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service layers\n     */\n    harvest (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/harvest';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.harvest() -\n                Error harvesting layers from service: ${e.message}`);\n            return Q.reject(err);\n        });\n\n    }\n\n    /**\n     * @param {string} id - identifier of GP service to live test\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service statistics\n     */\n    liveTest (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/test';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.liveTest() -\n                Error testing service: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of GP service to fetch statistics about\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service statistics\n     */\n    statistics (id, options) {\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/statistics';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.statistics() -\n                Error getting service statistics: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default ServiceService;\n","\n\n\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass GalleryService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/galleries';\n    }\n\n    addItem (galleryId, itemObj, options) {\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + galleryId + '/items';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data: itemObj, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(\"GalleryService.addItem() - Error adding item: \" + e.message);\n            return Q.reject(err);\n        });\n    }\n\n    removeItem( galleryId, itemId, options) {\n        return Q.resolve( this.baseUrl + '/' + galleryId + '/items/' + itemId )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:'DELETE', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response=>true)\n        .catch(e => {\n            let err = new Error(\"GalleryService.addItem() - Error adding item: \" + e.message);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default GalleryService;\n","\n\nimport Q from 'q';\n\nconst METHODS = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n\n\nclass UtilsService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = 10000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.baseUrl = baseUrl;\n    }\n\n\n    /**\n     * @param {string} property - optional capa property to specifically request\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving capabilities object\n     */\n    capabilities (property, query, options) {\n\n        let url = this.baseUrl + '/api/capabilities';\n        if(property)\n            url += '/' + property;\n\n        return Q.resolve( url )\n        .then( (url) => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query||{}, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`UtilsService.capabilities() - Error getting capabilities: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {File} file\n     * @param {string} format\n     * @param {Object} options\n     * @return {Promise}\n     */\n    parseFile (file, format, options) {\n\n        var url = this.baseUrl + '/api/utils/parse';\n\n        return Q.resolve( url )\n        .then( url => {\n\n            let opts = this.buildRequest({\n                method:\"POST\",  url:url,\n                data: { format: format },\n                file: file,\n                formData: true,   //NodeJS (RequestJS)\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then( response => response )\n        .catch(e => {\n            let err = new Error(`UtilsService.parseFile() - Error parsing file: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts);\n    }\n\n}\n\nexport default UtilsService;\n","\n\nexport default {\n    TYPES            : 'type',\n    QUERY            : 'q',\n    KEYWORDS         : 'keyword',\n    URI              : 'uri',\n    CREATED_BY       : 'createdBy',\n    CONTRIBUTED_BY   : 'contributedBy',\n    CREATOR          : 'creator.id',\n    SVC_TYPES        : 'serviceType.id',\n    THEMES_ID        : 'theme.id',\n    THEMES_LABEL     : 'theme.label',\n    THEMES_URI       : 'theme.uri',\n    PUBLISHERS       : 'publisher.id',\n    PUBLISHERS_LABEL : 'publisher.label',\n    PUBLISHERS_URI   : 'publisher.uri',\n    USED_BY_ID       : 'usedBy.id',\n    USED_BY_LABEL    : 'usedBy.label',\n    USED_BY_URI      : 'usedBy.uri',\n    SCHEMES_ID       : 'scheme.id',\n    SCHEMES_LABEL    : 'scheme.label',\n    SCHEMES_URI      : 'scheme.uri',\n    VISIBILITY       : 'visibility',\n    EXTENT           : 'extent',\n    MODIFIED_BEFORE  : 'modified.max',\n    MODIFIED_AFTER   : 'modified.min',\n    BEGINS           : 'startDate.min',\n    ENDS             : 'endDate.max',\n    RESOURCE_TYPE    : 'resourceType',\n\n    //recommender service-specific\n    FOR_TYPES        : 'for'\n};\n","\nimport QueryParameters from './parameters';\n\nconst SORT_OPTIONS_DEFAULT = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nclass KGQuery {\n\n    constructor() {\n\n        this.defaultQuery = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n        this.query = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n    }\n\n\n\n    getQuery() {\n        let result = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    parameter(name, value) {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    setParameter (name, value) {\n        if(value === null || value === undefined)\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    getParameter (key) {\n        return this.getParameter(key);\n    }\n\n    applyParameters (obj) { \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    q(text) {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setQ (text) {\n        this.setParameter(QueryParameters.QUERY, text);\n    }\n\n    getQ() {\n        return this.getParameter(QueryParameters.QUERY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {array[string]} types - KG classifiers for which concepts should be returned\n     */\n    classifiers(types) {\n        this.setClassifiers(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - KG classifiers for which concepts should be returned\n     */\n    setClassifiers (types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.TYPES, types);\n    }\n\n    /**\n     * @return {array[string]} KG classifiers for which concepts should be returned\n     */\n    getClassifiers () {\n        return this.getParameter(QueryParameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.types()\n     * query parameter (they map to different HTTP request parameters).\n     * @param {array[string]} objTypes - Item object type names\n     */\n    types(objTypes) {\n        this.setTypes(objTypes);\n        return this;\n    }\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.setTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @param {array[string]} objTypes - Item object type names\n     */\n    setTypes (objTypes) {\n        if(objTypes && objTypes.push === 'undefined')\n            objTypes = [objTypes];\n        this.setParameter(QueryParameters.FOR_TYPES, objTypes);\n    }\n\n    /**\n     * Get the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.getTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @return {array[string]} Item object type names\n     */\n    getTypes () {\n        return this.getParameter(QueryParameters.FOR_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this.query.page = page*1;\n    }\n\n    getPage() {\n        return this.query.page;\n    }\n\n    nextPage() {\n        this.setPage(this.query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this.query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this.query.size = size*1;\n    }\n\n    getPageSize() {\n        return this.query.size;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.query.sort = sort;\n    }\n\n    getSort() {\n        return this.query.sort;\n    }\n\n    getSortField() {\n        return this.query.sort.split(',')[0];\n    }\n\n    getSortOrder() {\n        return this.query.sort.split(',')[1] === 'asc';\n    }\n\n    /**\n     * @return {array} list of key-value pairs of sort options\n     */\n    getSortOptions() {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = this.defaultQuery;\n    }\n}\n\nexport default KGQuery;\n","\nimport Q from 'q';\nimport QueryParameters from '../shared/parameters';\n\n\nclass KGService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = 10000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/recommender';\n    }\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving recommended concepts as search results\n     */\n    suggest (query, options) {\n        let url = this.baseUrl + '/suggest';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.suggest() - Error suggesting concepts: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving concept types as search results\n     */\n    types (query, options) {\n        let url = this.baseUrl + '/types';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.types() - Error searching types: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving concept sources as search results\n     */\n    sources (query, options) {\n        let url = this.baseUrl + '/sources';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.sources() - Error searching sources: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n\n    /**\n     * internal method used by exposed methods\n     */\n    _search (url, query, options) {\n        return Q.resolve( true )\n        .then( () => {\n\n            if(query && typeof(query.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                query = query.getQuery();\n            }\n\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query, options:options\n            });\n            return this.execute(opts);\n        });\n    }\n\n\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts);\n    }\n\n}\n\nexport default KGService;\n","\n\n\nexport default  {\n    PURPOSE             : 'purposes',\n    FUNCTION            : 'functions',\n    TOPIC_PRIMARY       : 'primaryTopics',\n    TOPIC_SECONDARY     : 'secondaryTopics',\n    SUBJECT_PRIMARY     : 'primarySubjects',\n    SUBJECT_SECONDARY   : 'secondarySubjects',\n    COMMUNITY           : 'communities',\n    AUDIENCE            : 'audiences',\n    PLACE               : 'places',\n    CATEGORY            : 'categories'\n};\n","\n\n\nexport default {\n    TYPES           : 'types',\n    THEMES          : 'themes',\n    PUBLISHERS      : 'publishers',\n    SERVICE_TYPES   : 'serviceTypes',\n    CONCEPT_SCHEMES : 'schemes',\n    VISIBILITY      : 'visibility',\n    CREATED_BY      : 'createdBy',\n    USED_BY         : 'usedBy.id'\n};\n","\nimport QueryParameters from './parameters';\nimport QueryFacets from './facets';\n\n\nconst FIELDS_DEFAULT = [\n    'created','modified','createdBy','publishers','themes','description'\n];\n\nconst FACETS_DEFAULT = [\n    QueryFacets.TYPES,\n    QueryFacets.PUBLISHERS,\n    QueryFacets.SERVICE_TYPES,\n    QueryFacets.CONCEPT_SCHEMES,\n    QueryFacets.VISIBILITY,\n    QueryFacets.CREATED_BY\n];\n\nconst SORT_OPTIONS_DEFAULT = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nclass Query {\n\n    constructor() {\n\n        this.defaultQuery = {\n            page: 0,\n            size: 10,\n            total: 0,\n            sort: \"modified,desc\",\n            fields: FIELDS_DEFAULT.slice(0),\n            includeFacets: FACETS_DEFAULT.slice(0)\n        };\n\n        this.query = {\n            page: 0,\n            size: 10,\n            total: 0,\n            sort: \"modified,desc\",\n            fields: FIELDS_DEFAULT.slice(0),\n            includeFacets: FACETS_DEFAULT.slice(0)\n        };\n\n    }\n\n\n\n    getQuery() {\n        let result = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    parameter(name, value) {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    setParameter (name, value) {\n        if(value === null || value === undefined)\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    getParameter (key) {\n        return this.getParameter(key);\n    }\n\n    applyParameters (obj) { \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    q(text) {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setQ (text) {\n        this.setParameter(QueryParameters.QUERY, text);\n    }\n\n    getQ() {\n        return this.getParameter(QueryParameters.QUERY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    keywords(text) {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setKeywords (text) {\n        if(text && typeof(text.push) !== 'undefined')\n            text = text.join(',');\n        this.setParameter(QueryParameters.KEYWORDS, text);\n    }\n\n    getKeywords() {\n        return this.getParameter(QueryParameters.KEYWORDS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    uri (uri) {\n        this.setUri(uri);\n        return this;\n    }\n\n    setUri(uri) {\n        this.setParameter(QueryParameters.URI, uri);\n    }\n\n    getUri() {\n        return this.getParameter(QueryParameters.URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    types(types) {\n        this.setTypes(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - name of class(es) to request\n     */\n    setTypes (types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.TYPES, types);\n    }\n\n    getTypes () {\n        return this.getParameter(QueryParameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    createdBy(user) {\n        this.setCreatedBy(user);\n        return this;\n    }\n\n    /**\n     * @param {string} user - username\n     * @param {boolean} fireUpdate -\n     */\n    setCreatedBy (user) {\n        this.setParameter(QueryParameters.CREATED_BY, user);\n    }\n\n    getCreatedBy () {\n        return this.getParameter(QueryParameters.CREATED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.THEMES_LABEL or QueryParameters.THEMES_URI\n     * respectively.\n     * @param {array[string]} themes - string or array of strings containing theme constraint\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    themes(themes, parameter) {\n        this.setThemes(themes, parameter);\n        return this;\n    }\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.THEMES_LABEL or QueryParameters.THEMES_URI\n     * respectively.\n     * @param {array[string]} themes - theme or themes to constrain by\n     */\n    setThemes (themes, parameter) {\n        if(themes && themes.push === 'undefined')\n            themes = [themes];\n\n        //clear existing\n        this.setParameter(QueryParameters.THEMES_ID, null);\n        this.setParameter(QueryParameters.THEMES_LABEL, null);\n        this.setParameter(QueryParameters.THEMES_URI, null);\n\n        let param = parameter || QueryParameters.THEMES_ID;\n        this.setParameter(param, themes);\n    }\n\n    getThemes () {\n        return this.getParameter(QueryParameters.THEMES_ID) ||\n            this.getParameter(QueryParameters.THEMES_LABEL) ||\n            this.getParameter(QueryParameters.THEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.PUBLISHERS_LABEL or QueryParameters.PUBLISHERS_URI\n     * respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    publishers(publishers, parameter) {\n        this.setPublishers(publishers, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.PUBLISHERS_LABEL or QueryParameters.PUBLISHERS_URI\n     * respectively.\n     * @param {array[string]} publishers - publishing orgs to constrain by\n     */\n    setPublishers (publishers, parameter) {\n        if(publishers && publishers.push === 'undefined')\n            publishers = [publishers];\n\n        //clear existing\n        this.setParameter(QueryParameters.PUBLISHERS_ID, null);\n        this.setParameter(QueryParameters.PUBLISHERS_LABEL, null);\n        this.setParameter(QueryParameters.PUBLISHERS_URI, null);\n\n        let param = parameter || QueryParameters.PUBLISHERS_ID;\n        this.setParameter(param, publishers);\n    }\n\n    getPublishers () {\n        return this.getParameter(QueryParameters.PUBLISHERS_ID) ||\n            this.getParameter(QueryParameters.PUBLISHERS_LABEL) ||\n            this.getParameter(QueryParameters.PUBLISHERS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.USED_BY_LABEL or QueryParameters.USED_BY_URI\n     * respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    usedBy(ids, parameter) {\n        this.setUsedBy(ids, parameter);\n        return this;\n    }\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.USED_BY_LABEL or QueryParameters.USED_BY_URI\n     * respectively.\n     * @param {array[string]} ids - publishing orgs to constrain by\n     */\n    setUsedBy (ids, parameter) {\n        if(ids && ids.push === 'undefined')\n            ids = [ids];\n\n        //clear existing\n        this.setParameter(QueryParameters.USED_BY_ID, null);\n        this.setParameter(QueryParameters.USED_BY_LABEL, null);\n        this.setParameter(QueryParameters.USED_BY_URI, null);\n\n        let param = parameter || QueryParameters.USED_BY_ID;\n        this.setParameter(param, ids);\n    }\n\n    getUsedBy () {\n        return this.getParameter(QueryParameters.USED_BY_ID) ||\n            this.getParameter(QueryParameters.USED_BY_LABEL) ||\n            this.getParameter(QueryParameters.USED_BY_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.SCHEMES_LABEL or QueryParameters.SCHEMES_URI\n     * respectively.\n     * @param {array[string]} schemes - schemes to constrain by\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    schemes(schemes, parameter) {\n        this.setSchemes(schemes, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.SCHEMES_LABEL or QueryParameters.SCHEMES_URI\n     * respectively.\n     * @param {array[string]} schemes - schemes to constrain by\n     * @param {string} parameter - optional, to indicate the parameter to use\n     */\n    setSchemes (schemes, parameter) {\n        if(schemes && schemes.push === 'undefined')\n            schemes = [schemes];\n\n        //clear existing\n        this.setParameter(QueryParameters.SCHEMES_ID, null);\n        this.setParameter(QueryParameters.SCHEMES_LABEL, null);\n        this.setParameter(QueryParameters.SCHEMES_URI, null);\n\n        let param = parameter || QueryParameters.SCHEMES_ID;\n        this.setParameter(param, schemes);\n    }\n\n    getSchemes() {\n        return this.getParameter(QueryParameters.SCHEMES) ||\n            this.getParameter(QueryParameters.SCHEMES_LABEL) ||\n            this.getParameter(QueryParameters.SCHEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     *\n     */\n    serviceTypes(types) {\n        this.setServiceTypes(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - ids\n     */\n    setServiceTypes (types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.SERVICE_TYPES, types);\n    }\n\n    getServiceTypes () {\n        return this.getParameter(QueryParameters.SERVICE_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    visibility(vis) {\n        this.setVisibility(vis);\n        return this;\n    }\n\n    /**\n     * @param {string} visibility - one of 'public' or 'private'\n     * @param {boolean} fireUpdate\n     */\n    setVisibility (visibility) {\n        this.setParameter(QueryParameters.VISIBILITY, visibility);\n    }\n\n    getVisibility () {\n        this.getParameter(QueryParameters.VISIBILITY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    modified(date, beforeOrAfter) {\n        this.setModified(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param {Date} date - date to compare against\n     * @param {boolean} beforeOrAfter - flag specifying which boundary condition (true = before, false = after)\n     * @param {boolean} fireUpdate - flag specifying whether to trigger update automatically\n     */\n    setModified (date, beforeOrAfter) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(QueryParameters.MODIFIED_BEFORE, null);\n            this.setParameter(QueryParameters.MODIFIED_AFTER, null);\n            return;\n        }\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? QueryParameters.MODIFIED_BEFORE : QueryParameters.MODIFIED_AFTER;       //property being set\n        let oppProp = dir ? QueryParameters.MODIFIED_AFTER : QueryParameters.MODIFIED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getModified () {\n        return  this.getParameter(QueryParameters.MODIFIED_BEFORE) ||\n                this.getParameter(QueryParameters.MODIFIED_AFTER);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    extent(bbox) {\n        this.setExtent(bbox);\n        return this;\n    }\n\n    /**\n     * @param {string} bboxStr - form of \"minx,miny,maxx,maxy\"\n     */\n    setExtent (bbox) {\n        if(bbox && typeof(bbox.toBboxString) !== 'undefined')\n            bbox = bbox.toBboxString();\n        this.setParameter(QueryParameters.EXTENT, bbox);\n    }\n\n    /**\n     * @return {string} bbox string or null if not set\n     */\n    getExtent () {\n        return this.getParameter(QueryParameters.EXTENT);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    begins(date) {\n        this.setBeginDate(date);\n        return this;\n    }\n\n    setBeginDate (date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(QueryParameters.BEGINS, date);\n    }\n\n    getBeginDate () {\n        let date = this.getParameter(this.parameter.BEGINS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    ends(date) {\n        this.setEndDate(date);\n        return this;\n    }\n\n    setEndDate (date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(QueryParameters.ENDS, date);\n    }\n\n    getEndDate () {\n        let date = this.getParameter(this.parameter.ENDS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    between(begin, end) {\n        this.setBetween(begin, end);\n        return this;\n    }\n\n    setBetween(begin, end) {\n        this.begins(begin);\n        this.ends(end);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    resourceTypes(types) {\n        this.setResourceTypes(types);\n        return this;\n    }\n\n    setResourceTypes(types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.RESOURCE_TYPE, types);\n    }\n\n    getResourceTypes() {\n        return this.getParameter(QueryParameters.RESOURCE_TYPE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    facets(names) {\n        this.setFacets(names);\n        return this;\n    }\n\n    /*\n     * @param {array[string]} names - names of facets\n     */\n    setFacets (names) {\n        this.query.includeFacets = names;\n    }\n\n    getFacets() {\n        return this.query.includeFacets;\n    }\n\n    /**\n     * @param {string} name - name of facet to add\n     */\n    addFacet(name) {\n        let facets = (this.getFacets()||[]).push(name);\n        this.setFacets(facets);\n    }\n\n    /**\n     * @param {string} name - name of facet to remove\n     */\n    removeFacet(name) {\n        let facets = this.getFacets() || [];\n        let idx = facets.indexOf(name);\n        if(idx>=0) {\n            facets.splice(idx, 1);\n            this.setFacets(facets);\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    fields(fields) {\n        this.setFields(fields);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} fields - list of field names to request for each search result\n     */\n    setFields (fields) {\n        if(fields && typeof(fields.push) === 'undefined')\n            fields = [fields];\n        this.query.fields = fields;\n    }\n\n    getFields() {\n        return this.query.fields;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this.query.page = page*1;\n    }\n\n    getPage() {\n        return this.query.page;\n    }\n\n    nextPage() {\n        this.setPage(this.query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this.query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this.query.size = size*1;\n    }\n\n    getPageSize() {\n        return this.query.size;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.query.sort = sort;\n    }\n\n    getSort() {\n        return this.query.sort;\n    }\n\n    getSortField() {\n        return this.query.sort.split(',')[0];\n    }\n\n    getSortOrder() {\n        return this.query.sort.split(',')[1] === 'asc';\n    }\n\n    /**\n     * @return {array} list of key-value pairs of sort options\n     */\n    getSortOptions() {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = this.defaultQuery;\n    }\n}\n\nexport default Query;\n","\nimport Query from './query';\n\nexport default function() {\n    return new Query();\n};\n","\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport LayerService from './layer';\nimport ServiceService from './service';\nimport GalleryService from './gallery';\nimport DatasetService from './dataset';\nimport MapService from './map';\n\n/**\n * @param {any} arg - string type or object with type property\n * @param {string} baseUrl - base endpoint of GeoPlatform API\n * @return {ItemService}\n */\nconst ServiceFactory = function(arg, baseUrl, httpClient) {\n    let type = (typeof(arg) === 'string') ?\n        arg : (arg && arg.type ? arg.type : null);\n    if(!type) throw new Error(\"Must provide a type or object with a type specified\");\n    if(!baseUrl) throw new Error(\"Must provide a base url\");\n    if(!httpClient) throw new Error(\"Must provide an http client to use to make requests\");\n    switch(type) {\n        case ItemTypes.LAYER:   return new LayerService(  baseUrl, httpClient);\n        case ItemTypes.SERVICE: return new ServiceService(baseUrl, httpClient);\n        case ItemTypes.MAP:     return new MapService(    baseUrl, httpClient);\n        case ItemTypes.GALLERY: return new GalleryService(baseUrl, httpClient);\n        case ItemTypes.DATASET: return new DatasetService(baseUrl, httpClient);\n        default:                return new ItemService(   baseUrl, httpClient);\n    }\n};\n\nexport default ServiceFactory;\n","export default {\n\n    //ualUrl: '...',\n    //appId: '...',\n\n    configure: function(options) {\n        Object.assign(this, options);\n    }\n};\n"],"names":["SORT_OPTIONS_DEFAULT","Query"],"mappings":"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"}