{"version":3,"file":"geoplatform-client.umd.js.map","sources":["ng://@geoplatform/client/shared/polyfills.ts","node_modules/tslib/tslib.es6.js","ng://@geoplatform/client/shared/error.ts","ng://@geoplatform/client/shared/types.ts","ng://@geoplatform/client/shared/parameters.ts","ng://@geoplatform/client/shared/kg-query.ts","ng://@geoplatform/client/shared/classifiers.ts","ng://@geoplatform/client/shared/query.ts","ng://@geoplatform/client/shared/query-factory.ts","ng://@geoplatform/client/shared/config.ts","ng://@geoplatform/client/http/client.ts","ng://@geoplatform/client/http/xhr.ts","ng://@geoplatform/client/services/item.ts","ng://@geoplatform/client/services/dataset.ts","ng://@geoplatform/client/services/map.ts","ng://@geoplatform/client/services/layer.ts","ng://@geoplatform/client/services/service.ts","ng://@geoplatform/client/services/gallery.ts","ng://@geoplatform/client/services/utils.ts","ng://@geoplatform/client/services/agol.ts","ng://@geoplatform/client/services/tracking.ts","ng://@geoplatform/client/services/kg.ts","ng://@geoplatform/client/services/factory.ts","ng://@geoplatform/client/index.ts"],"sourcesContent":["\nfunction apply() {\n    if (typeof Object.assign != 'function') {\n      // Must be writable: true, enumerable: false, configurable: true\n      Object.defineProperty(Object, \"assign\", {\n        value: function assign(target : any, varArgs : any[]) { // .length of function is 2\n\n          if (target == null) { // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n          }\n\n          if(varArgs) { }\n          var to = Object(target);\n\n          for (var index = 1; index < arguments.length; index++) {\n            var nextSource = arguments[index];\n\n            if (nextSource != null) { // Skip over if undefined or null\n              for (var nextKey in nextSource) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                  to[nextKey] = nextSource[nextKey];\n                }\n              }\n            }\n          }\n          return to;\n        },\n        writable: true,\n        configurable: true\n      });\n    }\n}\n\n\nexport default function() {\n    apply();\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nclass GPError extends Error {\n    public error : string|null;\n    public status: number = 500;\n    public statusCode : number = 500;\n    constructor(message : string) {\n        super(message);\n        this.error = null;\n    }\n    public setError(value:string) { this.error = value; }\n    public setStatus(value:number) { this.status = this.statusCode = value; }\n}\n\nexport default GPError;\n","\n\nexport default {\n    DATASET         : \"dcat:Dataset\",\n    SERVICE         : \"regp:Service\",\n    LAYER           : \"Layer\",\n    MAP             : \"Map\",\n    GALLERY         : \"Gallery\",\n    COMMUNITY       : 'Community',\n    APPLICATION     : 'Application',\n    TOPIC           : 'Topic',\n    WEBSITE         : 'WebSite',\n    ORGANIZATION    : \"org:Organization\",\n    CONTACT         : \"vcard:VCard\",\n    CONCEPT         : \"skos:Concept\",\n    CONCEPT_SCHEME  : \"skos:ConceptScheme\",\n    STANDARD        : 'dct:Standard',\n    RIGHTS_STATEMENT: 'dct:RightsStatement'\n};\n","\n\nexport default {\n    ALTERNATE_TITLE  : 'alternateTitles',\n    BEGINS           : 'startDate.min',\n    CREATED          : 'created',\n    CREATED_BEFORE   : 'created.max',\n    CREATED_AFTER    : 'created.min',\n    CREATED_BY       : 'createdBy',\n    CREATOR          : 'creator.id',\n    CONTRIBUTED_BY   : 'contributedBy',\n    ENDS             : 'endDate.max',\n    EXTENT           : 'extent',\n    IDENTIFIERS      : 'identifiers',\n    KEYWORDS         : 'keywords',\n    LAST_MODIFIED_BY : 'lastModifiedBy',\n    MODIFIED         : 'modified',\n    MODIFIED_BEFORE  : 'modified.max',\n    MODIFIED_AFTER   : 'modified.min',\n    PUBLISHERS_ID    : 'publisher.id',\n    PUBLISHERS_LABEL : 'publisher.label',\n    PUBLISHERS_URI   : 'publisher.uri',\n    CONTACTS_ID      : 'contacts.id',\n    CONTACTS_LABEL   : 'contacts.label',\n    CONTACTS_URI     : 'contacts.uri',\n    QUERY            : 'q',\n    SCHEMES_ID       : 'scheme.id',\n    SCHEMES_LABEL    : 'scheme.label',\n    SCHEMES_URI      : 'scheme.uri',\n    SIMILAR_TO       : 'similarTo',\n    STATUS           : 'status',\n    SERVICE_TYPES    : 'serviceType.id',\n    THEMES_ID        : 'theme.id',\n    THEMES_LABEL     : 'theme.label',\n    THEMES_URI       : 'theme.uri',\n    TYPES            : 'type',      //TODO change to 'types'\n    URI              : 'uri',\n    USED_BY_ID       : 'usedBy.id',\n    USED_BY_LABEL    : 'usedBy.label',\n    USED_BY_URI      : 'usedBy.uri',\n    VISIBILITY       : 'visibility',\n    RESOURCE_TYPE    : 'resourceType',\n    DATASET          : 'dataset',\n    LANDING_PAGE     : 'landingPage',\n    PURPOSE          : 'purpose',\n\n    //statistics parameters\n    RELIABILITY      : 'reliability',\n    RELIABILITY_MIN  : 'reliability.min',\n    RELIABILITY_MAX  : 'reliability.max',\n    ONLINE           : 'online',\n    COMPLIANT        : 'compliant',\n    SPEED            : 'speed',\n    SPEED_MIN        : 'speed.min',\n    SPEED_MAX        : 'speed.max',\n    LIKES            : 'likes',\n    LIKES_MIN        : 'likes.min',\n    LIKES_MAX        : 'likes.max',\n    VIEWS            : 'views',\n    VIEWS_MIN        : 'views.min',\n    VIEWS_MAX        : 'views.max',\n\n    //type-specific parameters\n    HREF             : 'href',           //service-specific\n    LAYER_TYPE       : 'layerType',     //layer-specific\n    LAYER_NAME       : 'layerName',     //...\n    PARENT_LAYER     : 'parentLayer',   //...\n    SUB_LAYER        : 'subLayer',      //...\n    SERVICE          : 'service',       //...\n    MAP_LAYER        : 'mapLayer',      //map-specific\n    GALLERY_ITEM     : 'galleryItem',   //gallery-specific\n\n    //meta-parameters\n    FACETS           : 'includeFacets',  //TODO change to 'facets'\n    FIELDS           : 'fields',\n    SORT             : 'sort',\n    PAGE             : 'page',\n    PAGE_SIZE        : 'size',\n\n    //recommender service-specific\n    FOR_TYPES        : 'for'\n};\n","\nimport QueryParameters from './parameters';\n\ninterface KVP<U> { [ key : string ] : U }\n\n\nconst SORT_OPTIONS_DEFAULT : { value:string; label:string; }[] = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nclass KGQuery {\n\n    public query : KVP<any>;\n    private defaultQuery : KVP<any>;\n\n    constructor() {\n\n        this.defaultQuery = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n        this.query = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n    }\n\n\n    getQuery() : KVP<any> {\n        let result : KVP<any> = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    parameter(name : string, value: any) : KGQuery {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    setParameter (name : string, value : any) {\n        if(value === null || value === undefined)\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    getParameter (key : string) : any {\n        return this.query[key];\n    }\n\n    applyParameters (obj : KVP<any> ) {Â \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    q(text : string) : KGQuery {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param text - free text query\n     */\n    setQ (text : string) {\n        this.setParameter(QueryParameters.QUERY, text);\n    }\n\n    getQ() : string|null {\n        return this.getParameter(QueryParameters.QUERY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param types - KG classifiers for which concepts should be returned\n     */\n    classifiers(types : string|string[]) : KGQuery {\n        this.setClassifiers(types);\n        return this;\n    }\n\n    /**\n     * @param types - KG classifiers for which concepts should be returned\n     */\n    setClassifiers (types : string|string[]) {\n        if(!types) return;\n        if(typeof(types) === 'string') types = types = [types];\n        this.setParameter(QueryParameters.TYPES, types);\n    }\n\n    /**\n     * @return KG classifiers for which concepts should be returned\n     */\n    getClassifiers () : string[] {\n        return this.getParameter(QueryParameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.types()\n     * query parameter (they map to different HTTP request parameters).\n     * @param objTypes - Item object type names\n     */\n    types(objTypes : string|string[]) : KGQuery {\n        this.setTypes(objTypes);\n        return this;\n    }\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.setTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @param objTypes - Item object type names\n     */\n    setTypes (objTypes : string|string[]) {\n        if(!objTypes) return;\n        if(typeof(objTypes) === 'string') objTypes = [objTypes];\n        this.setParameter(QueryParameters.FOR_TYPES, objTypes);\n    }\n\n    /**\n     * Get the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.getTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @return Item object type names\n     */\n    getTypes () : string[] {\n        return this.getParameter(QueryParameters.FOR_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param page - page of results to fetch\n     */\n    page (page : number) : KGQuery {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page : number) {\n        if(isNaN(page) || page*1<0) return;\n        this.query.page = page*1;\n    }\n\n    getPage() : number {\n        return this.query.page;\n    }\n\n    nextPage() : void {\n        this.setPage(this.query.page+1);\n    }\n\n    previousPage() : void {\n        this.setPage(this.query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param size - page size to request\n     */\n    pageSize (size: number) : KGQuery {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size : number) {\n        if(isNaN(size) || size*1<0) return;\n        this.query.size = size*1;\n    }\n\n    getPageSize() : number {\n        return this.query.size;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n    sort (sort : string, order ?: string) : KGQuery {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort : string, order ?:string) {\n         order = order || 'desc';\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.query.sort = sort;\n    }\n\n    getSort() : string | null {\n        return this.query.sort;\n    }\n\n    getSortField() : string | null {\n        return this.query.sort.split(',')[0];\n    }\n\n    getSortOrder() : boolean {\n        return this.query.sort.split(',')[1] === 'asc';\n    }\n\n    /**\n     * @return list of key-value pairs of sort options\n     */\n    getSortOptions() : { value: string, label: string; }[] {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = this.defaultQuery;\n    }\n}\n\nexport default KGQuery;\n","\n\n\nexport default  {\n    PURPOSE             : 'purpose',\n    FUNCTION            : 'function',\n    TOPIC_PRIMARY       : 'primaryTopic',\n    TOPIC_SECONDARY     : 'secondaryTopic',\n    SUBJECT_PRIMARY     : 'primarySubject',\n    SUBJECT_SECONDARY   : 'secondarySubject',\n    COMMUNITY           : 'community',\n    AUDIENCE            : 'audience',\n    PLACE               : 'place',\n    CATEGORY            : 'category'\n};\n","\nimport Parameters from './parameters';\n\ninterface KVP<U> { [ key : string ] : U }\n\nconst Fields : KVP<string> = {\n    ACCESS_RIGHTS       : 'rights',\n    ALTERNATE_TITLES    : 'alternateTitles',\n    ANNOTATIONS         : 'annotations',\n    CLASSIFIERS         : 'classifiers',\n    CONCEPT_SCHEME      : 'scheme',\n    CONTACTS            : 'contacts',\n    CREATED             : 'created',\n    CREATED_BY          : 'createdBy',\n    DATASETS            : 'datasets',\n    DESCRIPTION         : 'description',\n    DISTRIBUTIONS       : 'distributions',\n    EXTENT              : 'extent',\n    GALLERY_ITEMS       : 'items',\n    HREF                : 'href',\n    IDENTIFIERS         : 'identifiers',\n    KEYWORDS            : 'keywords',\n    LABEL               : 'label',\n    LAST_MODIFIED_BY    : 'lastModifiedBy',\n    LAYERS              : 'layers',\n    LAYER_TYPE          : 'layerType',\n    LAYER_NAME          : 'layerName',\n    LEGEND              : 'legend',\n    MODIFIED            : 'modified',\n    PARENT_LAYER        : 'parentLayer',\n    PUBLISHERS          : 'publishers',\n    RESOURCE_TYPES      : 'resourceTypes',\n    SERVICE_TYPE        : 'serviceType',\n    SERVICES            : 'services',\n    SPATIAL             : 'spatial',\n    STATISTICS          : 'statistics',\n    STATUS              : 'status',\n    SUB_LAYERS          : 'subLayers',\n    TEMPORAL            : 'temporal',\n    THEMES              : 'themes',\n    THUMBNAIL           : 'thumbnail',\n    USED_BY             : 'usedBy',\n    VISIBILITY          : 'visibility',\n    LANDING_PAGE        : 'landingPage'\n};\n\nconst FIELDS_DEFAULT : string[] = [\n    Fields.CREATED, Fields.MODIFIED, Fields.CREATED_BY,\n    Fields.PUBLISHERS, Fields.THEMES, Fields.DESCRIPTION\n];\n\n/* --------------------------------------------------------- */\n\nconst Facets : KVP<string> = {\n    ALTERNATE_TITLES    : 'alternateTitles',\n    CONCEPT_SCHEMES     : 'schemes',\n    CREATED_BY          : 'createdBy',\n    HREF                : 'href',\n    IDENTIFIERS         : \"identifiers\",\n    LAYER_TYPE          : 'layerType',\n    LAYER_NAME          : 'layerName',\n    LIKES               : 'likes',\n    ONLINE              : 'online',\n    PUBLISHERS          : 'publishers',\n    CONTACTS            : 'contacts',\n    RELIABILITY         : 'reliability',\n    SERVICE_TYPES       : 'serviceTypes',\n    SPEED               : 'speed',\n    STATUS              : 'status',\n    THEMES              : 'themes',\n    TYPES               : 'type',   //TODO change to 'types'\n    USED_BY             : 'usedBy',\n    VIEWS               : 'views',\n    VISIBILITY          : 'visibility'\n};\n\nconst FACETS_DEFAULT : string[] = [\n    Facets.TYPES,\n    Facets.PUBLISHERS,\n    Facets.SERVICE_TYPES,\n    Facets.CONCEPT_SCHEMES,\n    Facets.VISIBILITY,\n    Facets.CREATED_BY\n];\n\n\n/*\n    Map facet keys to parameters so clients can set\n    query params using faceted results\n\n    //TODO remove these and their function below\n */\nconst FacetToParam : KVP<string> = {};\nFacetToParam[Facets.TYPES]           = Parameters.TYPES;\nFacetToParam[Facets.THEMES]          = Parameters.THEMES_ID;\nFacetToParam[Facets.PUBLISHERS]      = Parameters.PUBLISHERS_ID;\nFacetToParam[Facets.CONTACTS]        = Parameters.CONTACTS_ID;\nFacetToParam[Facets.CONCEPT_SCHEMES] = Parameters.SCHEMES_ID;\nFacetToParam[Facets.USED_BY]         = Parameters.USED_BY_ID;\n\n\n\n/* --------------------------------------------------------- */\n\n\nconst SORT_OPTIONS_DEFAULT : { value: string; label: string; }[] = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nconst BBOX_REGEX = /^\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?$/;\n\n\nfunction toArray(value : any) : any | null {\n    let result = value;\n    //if given a non-array value, wrap in array\n    if(result !== null && typeof(result.push) === 'undefined') result = [result];\n    //if array value is empty, nullify the result\n    if(result !== null && !result.length) result = null;\n    return result;\n}\n\n\n\n/**\n * Query\n *\n * Specify the \"default\" query constraints to use by passing in 'options.defaults = {...}';\n *\n */\nclass Query {\n\n    public query : KVP<any>;\n    private defaultQuery : KVP<any>;\n\n    /**\n     * @param options - set of initial constraints\n     */\n    constructor(options ?: KVP<any>) {\n        this.defaultQuery = { };\n        this.defaultQuery[Parameters.PAGE.toString()] = 0;\n        this.defaultQuery[Parameters.PAGE_SIZE.toString()] = 10;\n        this.defaultQuery[Parameters.SORT.toString()] = \"modified,desc\";\n        this.defaultQuery[Parameters.FIELDS.toString()] = FIELDS_DEFAULT.slice(0);\n        this.defaultQuery[Parameters.FACETS.toString()] = FACETS_DEFAULT.slice(0);\n        if(options && options.defaults) {\n            Object.assign(this.defaultQuery, options.defaults);\n            delete options.defaults;\n        }\n        this.query = JSON.parse(JSON.stringify(this.defaultQuery));\n        if(options) {\n            this.applyParameters(options);\n        }\n    }\n\n\n    /**\n     * @return containing request-ready parameters/values\n     */\n    getQuery() : KVP<any> {\n        let result : KVP<any> = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n    /**\n     * @return Query\n     */\n    clone() : Query {\n        let result = new Query();\n        let json = JSON.parse(JSON.stringify(this.query));\n        result.applyParameters(json);\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     * @param name\n     * @param value\n     * @return Query this\n     */\n    parameter(name : string, value : any) : Query {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    /**\n     * @param name\n     * @param value\n     */\n    setParameter (name : string, value: any) : void {\n        if(value === null || value === undefined || //if no value was provide\n            (typeof(value.push) !== 'undefined' && !value.length)) //or empty array\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    /**\n     * @param key - name of parameter\n     * @return value of parameter\n     */\n    getParameter (key : string) : any {\n        return this.query[key];\n    }\n\n    /**\n     * @param obj - set of parameter/values to apply to this query\n     */\n    applyParameters (obj : KVP<any>) : void {Â \n        for(let p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p as string, obj[p] as any);\n            }\n        }\n    }\n\n    /**\n     * @param facet - name of facet to set the value for as a parameter\n     * @param value - value of the facet to use as the parameter's value\n     */\n     //TODO remove this function\n    setFacetParameter (facet: string, value: string) : void {\n        let param : string = FacetToParam[facet];\n        if(!param) {\n            console.log(\"WARN : Query.applyFacetParameter() - \" +\n                \"unable to map facet to known parameter '\" + facet + \"', using \" +\n                \"as direct parameter which may not operate as intended\");\n        }\n        this.setParameter(param||facet, value);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     * @param text\n     * @return Query this\n     */\n    q(text : string) : Query { this.setQ(text); return this; }\n\n    /** @param text - free text query */\n    setQ (text : string) : void { this.setParameter(Parameters.QUERY, text); }\n    /** @return */\n    getQ() : string { return this.getParameter(Parameters.QUERY) as string; }\n\n\n    // -----------------------------------------------------------\n\n\n    keywords(text : string|string[]) : Query {\n        this.setKeywords(text);\n        return this;\n    }\n\n    /**\n     * @param text - free text query\n     */\n    setKeywords (text : string|string[]) : void {\n        this.setParameter(Parameters.KEYWORDS, toArray(text));\n    }\n\n    getKeywords() : string[] {\n        return this.getParameter(Parameters.KEYWORDS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    uri (uri : string) : Query {\n        this.setUri(uri);\n        return this;\n    }\n\n    setUri(uri : string) {\n        this.setParameter(Parameters.URI, uri);\n    }\n\n    getUri() : any {\n        return this.getParameter(Parameters.URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    types(types : string|string[]) : Query {\n        this.setTypes(types);\n        return this;\n    }\n\n    /**\n     * @param types - name of class(es) to request\n     */\n    setTypes (types : string|string[]) {\n        this.setParameter(Parameters.TYPES, toArray(types));\n    }\n\n    getTypes () : string[] {\n        return this.getParameter(Parameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    createdBy(user : string) : Query {\n        this.setCreatedBy(user);\n        return this;\n    }\n\n    /** @param user - username */\n    setCreatedBy (user : string) {\n        this.setParameter(Parameters.CREATED_BY, user);\n    }\n\n    /** @return username */\n    getCreatedBy () : any {\n        return this.getParameter(Parameters.CREATED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    lastModifiedBy(user : string) : Query {\n        this.setLastModifiedBy(user);\n        return this;\n    }\n\n    /** @param user - username */\n    setLastModifiedBy (user: string) {\n        this.setParameter(Parameters.LAST_MODIFIED_BY, user);\n    }\n\n    /** @return username */\n    getLastModifiedBy () : any {\n        return this.getParameter(Parameters.LAST_MODIFIED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.THEMES_LABEL or Parameters.THEMES_URI\n     * respectively.\n     * @param themes - string or array of strings containing theme constraint\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    themes(themes: string|string[], parameter?:string) : Query {\n        this.setThemes(themes, parameter);\n        return this;\n    }\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.THEMES_LABEL or Parameters.THEMES_URI\n     * respectively.\n     * @param themes - theme or themes to constrain by\n     */\n    setThemes (themes:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.THEMES_ID, null);\n        this.setParameter(Parameters.THEMES_LABEL, null);\n        this.setParameter(Parameters.THEMES_URI, null);\n\n        let param = parameter || Parameters.THEMES_ID;\n        this.setParameter(param, toArray(themes));\n    }\n\n    getThemes () : string[] {\n        return this.getParameter(Parameters.THEMES_ID) ||\n            this.getParameter(Parameters.THEMES_LABEL) ||\n            this.getParameter(Parameters.THEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be identifiers. If using labels or uris,\n     * specify the optional second parameter to be either\n     * Parameters.PUBLISHERS_LABEL or Parameters.PUBLISHERS_URI respectively.\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    publishers(publishers:string|string[], parameter?:string) : Query {\n        this.setPublishers(publishers, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be identifiers. If using labels or uris,\n     * specify the optional second parameter to be either\n     * Parameters.PUBLISHERS_LABEL or Parameters.PUBLISHERS_URI respectively.\n     * @param publishers - publishing orgs to constrain by\n     */\n    setPublishers (publishers:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.PUBLISHERS_ID, null);\n        this.setParameter(Parameters.PUBLISHERS_LABEL, null);\n        this.setParameter(Parameters.PUBLISHERS_URI, null);\n\n        let param = parameter || Parameters.PUBLISHERS_ID;\n        this.setParameter(param, toArray(publishers));\n    }\n\n    getPublishers () : string[] {\n        return this.getParameter(Parameters.PUBLISHERS_ID) ||\n            this.getParameter(Parameters.PUBLISHERS_LABEL) ||\n            this.getParameter(Parameters.PUBLISHERS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Point of Contact or set of Contacts to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter to be either\n     * Parameters.CONTACTS_LABEL or Parameters.CONTACTS_URI respectively.\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    contacts(contacts:string|string[], parameter?:string) : Query {\n        this.setContacts(contacts, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Contact or set of Contacts to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter to be either\n     * Parameters.CONTACTS_LABEL or Parameters.CONTACTS_URI respectively.\n     * @param contacts - publishing orgs to constrain by\n     */\n    setContacts (contacts:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.CONTACTS_ID, null);\n        this.setParameter(Parameters.CONTACTS_LABEL, null);\n        this.setParameter(Parameters.CONTACTS_URI, null);\n\n        let param = parameter || Parameters.CONTACTS_ID;\n        this.setParameter(param, toArray(contacts));\n    }\n\n    getContacts () : string[] {\n        return this.getParameter(Parameters.CONTACTS_ID) ||\n            this.getParameter(Parameters.CONTACTS_LABEL) ||\n            this.getParameter(Parameters.CONTACTS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.USED_BY_LABEL or Parameters.USED_BY_URI\n     * respectively.\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    usedBy(ids:string|string[], parameter?:string) : Query {\n        this.setUsedBy(ids, parameter);\n        return this;\n    }\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.USED_BY_LABEL or Parameters.USED_BY_URI\n     * respectively.\n     * @param ids - publishing orgs to constrain by\n     */\n    setUsedBy (ids:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.USED_BY_ID, null);\n        this.setParameter(Parameters.USED_BY_LABEL, null);\n        this.setParameter(Parameters.USED_BY_URI, null);\n\n        let param = parameter || Parameters.USED_BY_ID;\n        this.setParameter(param, toArray(ids));\n    }\n\n    getUsedBy () : string[] {\n        return this.getParameter(Parameters.USED_BY_ID) ||\n            this.getParameter(Parameters.USED_BY_LABEL) ||\n            this.getParameter(Parameters.USED_BY_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.SCHEMES_LABEL or Parameters.SCHEMES_URI\n     * respectively.\n     * @param schemes - schemes to constrain by\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    schemes(schemes:string|string[], parameter?:string) : Query {\n        this.setSchemes(schemes, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.SCHEMES_LABEL or Parameters.SCHEMES_URI\n     * respectively.\n     * @param schemes - schemes to constrain by\n     * @param parameter - optional, to indicate the parameter to use\n     */\n    setSchemes (schemes:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.SCHEMES_ID, null);\n        this.setParameter(Parameters.SCHEMES_LABEL, null);\n        this.setParameter(Parameters.SCHEMES_URI, null);\n\n        let param = parameter || Parameters.SCHEMES_ID;\n        this.setParameter(param, toArray(schemes));\n    }\n\n    getSchemes() : string[] {\n        return this.getParameter(Parameters.SCHEMES_ID) ||\n            this.getParameter(Parameters.SCHEMES_LABEL) ||\n            this.getParameter(Parameters.SCHEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     *\n     */\n    serviceTypes(types:string|string[]) : Query {\n        this.setServiceTypes(types);\n        return this;\n    }\n\n    /**\n     * @param types - ids\n     */\n    setServiceTypes (types:string|string[]) {\n        this.setParameter(Parameters.SERVICE_TYPES, toArray(types));\n    }\n\n    getServiceTypes () : string[] {\n        return this.getParameter(Parameters.SERVICE_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    visibility(vis:\"public\"|\"private\") : Query {\n        this.setVisibility(vis);\n        return this;\n    }\n\n    /**\n     * @param visibility - one of 'public' or 'private'\n     */\n    setVisibility (visibility : \"public\"|\"private\") {\n        this.setParameter(Parameters.VISIBILITY, visibility);\n    }\n\n    getVisibility () : any {\n        return this.getParameter(Parameters.VISIBILITY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    status(value : string) : Query {\n        this.setStatus(value);\n        return this;\n    }\n\n    /**\n     * @param status - current status of Item\n     */\n    setStatus (value : string) {\n        this.setParameter(Parameters.STATUS, value);\n    }\n\n    getStatus () : any {\n        return this.getParameter(Parameters.STATUS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    extent(bbox : any) : Query {\n        this.setExtent(bbox);\n        return this;\n    }\n\n    /**\n     * @param bbox - string form of \"minx,miny,maxx,maxy\", or L.LatLngBounds, or Array\n     */\n    setExtent (bbox : any) {\n        if(bbox) {\n            if(typeof(bbox.toBboxString) !== 'undefined') {\n                //Leaflet Bounds instance\n                bbox = bbox.toBboxString();\n\n            } else if(typeof(bbox.push) !== 'undefined' && bbox.length &&\n                //Nested array (alternate Leaflet representation):\n                // [ [minLat,minLong], [maxLat,maxLong] ]\n                typeof(bbox[0].push) !== 'undefined') {\n                bbox = bbox[0][1]+','+bbox[0][0]+','+bbox[1][1]+','+bbox[1][0];\n\n            } else if(typeof(bbox) === 'string') {\n                if(!BBOX_REGEX.test(bbox)) {\n                    throw new Error(\"Invalid argument: bbox string must be \" +\n                        \"in form of 'minx,miny,maxx,maxy'\");\n                }\n            } else {\n                throw new Error(\"Invalid argument: bbox must be one of \" +\n                    \"Leaflet.Bounds, nested array, or bbox string\");\n            }\n        }\n        this.setParameter(Parameters.EXTENT, bbox);\n    }\n\n    /**\n     * @return bbox string or null if not set\n     */\n    getExtent () : any {\n        return this.getParameter(Parameters.EXTENT);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    modified(date : number|Date, beforeOrAfter : boolean) : Query {\n        this.setModified(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param date - date to compare against\n     * @param beforeOrAfter - flag specifying which boundary condition (true = before, false = after) flag specifying whether to trigger update automatically\n     */\n    setModified (date : number|Date, beforeOrAfter:boolean) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(Parameters.MODIFIED_BEFORE, null);\n            this.setParameter(Parameters.MODIFIED_AFTER, null);\n            return;\n        }\n\n        if(!(date instanceof Date))\n            date = new Date(date as number);\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? Parameters.MODIFIED_BEFORE : Parameters.MODIFIED_AFTER;       //property being set\n        let oppProp = dir ? Parameters.MODIFIED_AFTER : Parameters.MODIFIED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getModified () : Date {\n        let value = this.getParameter(Parameters.MODIFIED_BEFORE) ||\n            this.getParameter(Parameters.MODIFIED_AFTER);\n        if(value && typeof(value) === 'number') {\n            value = new Date(value);\n        }\n        return value;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    created(date : number|Date, beforeOrAfter:boolean) : Query {\n        this.setCreated(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param date - date to compare against\n     * @param beforeOrAfter - flag specifying which boundary condition (true = before, false = after) flag specifying whether to trigger update automatically\n     */\n    setCreated (date : number|Date, beforeOrAfter:boolean) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(Parameters.CREATED_BEFORE, null);\n            this.setParameter(Parameters.CREATED_AFTER, null);\n            return;\n        }\n\n        if(!(date instanceof Date))\n            date = new Date(date as number);\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? Parameters.CREATED_BEFORE : Parameters.CREATED_AFTER;       //property being set\n        let oppProp = dir ? Parameters.CREATED_AFTER : Parameters.CREATED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getCreated () : Date {\n        let value = this.getParameter(Parameters.CREATED_BEFORE) ||\n            this.getParameter(Parameters.CREATED_AFTER);\n        if(value && typeof(value) === 'number') {\n            value = new Date(value);\n        }\n        return value;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    begins(date : number|Date) : Query {\n        this.setBeginDate(date);\n        return this;\n    }\n\n    setBeginDate (date : number|Date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(Parameters.BEGINS, date);\n    }\n\n    getBeginDate () : Date {\n        let date = this.getParameter(Parameters.BEGINS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    ends(date : number|Date) : Query {\n        this.setEndDate(date);\n        return this;\n    }\n\n    setEndDate (date: number|Date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(Parameters.ENDS, date);\n    }\n\n    getEndDate () : Date {\n        let date = this.getParameter(Parameters.ENDS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    between(begin : number|Date, end : number|Date) : Query {\n        this.setBetween(begin, end);\n        return this;\n    }\n\n    setBetween(begin : number|Date, end : number|Date) {\n        this.begins(begin);\n        this.ends(end);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    resourceTypes(types: string|string[]) : Query {\n        this.setResourceTypes(types);\n        return this;\n    }\n\n    setResourceTypes(types: string|string[]) {\n        this.setParameter(Parameters.RESOURCE_TYPE, toArray(types));\n    }\n\n    getResourceTypes() : string[] {\n        return this.getParameter(Parameters.RESOURCE_TYPE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    facets(names : string|string[]) : Query {\n        this.setFacets(names);\n        return this;\n    }\n\n    /*\n     * @param names - names of facets\n     */\n    setFacets (names: string|string[]) {\n        this.setParameter(Parameters.FACETS, toArray(names));\n    }\n\n    getFacets() : string[] {\n        return this.getParameter(Parameters.FACETS);\n    }\n\n    /**\n     * @param name - name of facet to add\n     */\n    addFacet(name: string) {\n        let facets = this.getFacets() || [];\n        facets.push(name);\n        this.setFacets(facets);\n    }\n\n    /**\n     * @param name - name of facet to remove\n     */\n    removeFacet(name: string) {\n        let facets = this.getFacets() || [];\n        let idx = facets.indexOf(name);\n        if(idx>=0) {\n            facets.splice(idx, 1);\n            this.setFacets(facets);\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    fields(fields: string|string[]) : Query {\n        this.setFields(fields);\n        return this;\n    }\n\n    /**\n     * @param fields - list of field names to request for each search result\n     */\n    setFields (fields: string|string[]) {\n        this.setParameter(Parameters.FIELDS, toArray(fields));\n    }\n\n    getFields() : string[] {\n        return this.getParameter(Parameters.FIELDS);\n    }\n\n    /**\n     * @param field - name of field to remove\n     */\n    addField(field: string) {\n        let fields = this.getFields() || [];\n        fields.push(field);\n        this.setFields(fields);\n    }\n\n    /**\n     * @param field - name of field to remove\n     */\n    removeField(field: string) {\n        let fields = this.getFields() || [];\n        let idx = fields.indexOf(field);\n        if(idx>=0) {\n            fields.splice(idx, 1);\n            this.setFields(fields);\n        }\n    }\n\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param page - page of results to fetch\n     */\n    page (page: number) : Query {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page: number) {\n        if(isNaN(page) || page*1<0) return;\n        this.setParameter(Parameters.PAGE, page*1);\n    }\n\n    getPage() : number {\n        return this.getParameter(Parameters.PAGE);\n    }\n\n    nextPage() : void {\n        this.setPage(this.getPage()+1);\n    }\n\n    previousPage() : void {\n        this.setPage(this.getPage()-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param size - page size to request\n     */\n    pageSize (size: number) : Query {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size: number) {\n        if(isNaN(size) || size*1<0) return;\n        this.setParameter(Parameters.PAGE_SIZE, size*1);\n    }\n\n    getPageSize() : number {\n        return this.getParameter(Parameters.PAGE_SIZE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n    sort (sort: string, order?:string) : Query {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort: string, order?:string) {\n         order = order || 'desc';\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.setParameter(Parameters.SORT, sort);\n    }\n\n    getSort() : string {\n        return this.getParameter(Parameters.SORT);\n    }\n\n    getSortField() : string | null {\n        let value = this.getSort();\n        return value && value.length ? value.split(',')[0] : null;\n    }\n\n    getSortOrder() : string | null {\n        let value = this.getSort();\n        return value && value.length ? value.split(',')[1] : null;\n    }\n\n    /**\n     * @return list of key-value pairs of sort options\n     */\n    getSortOptions() : { value: string; label: string; }[] {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = JSON.parse(JSON.stringify(this.defaultQuery));\n    }\n}\n\nexport {\n    Query as default,\n    Query,\n    Fields,\n    Facets\n};\n","\nimport Query from './query';\n\nexport default function() {\n    return new Query();\n}\n","\nvar Config : { [key:string] : any } = {\n\n    ualUrl: 'https://ual.geoplatform.gov',\n    //appId: '...',\n\n    configure: function(options : any) {\n        Object.assign(this, options);\n    }\n};\n\nexport default Config;\n","\n\nimport * as Q from 'q';\n\n\nclass GPHttpClient {\n\n    protected token : any;\n    protected timeout : number = 5000;\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options ?: { [key:string] : any }) {\n        options = options || {};\n        this.setTimeout(options.timeout||30000);\n        this.setAuthToken(options.token);\n    }\n\n    setTimeout(timeout : number) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg : string|Function) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(\n        // @ts-ignore\n        options : { [key:string] : any }\n    ) : any {\n        throw new Error(\"Must implement 'createRequestOpts' in a sub-class\");\n    }\n\n    execute(\n        // @ts-ignore\n        opts : any\n    ) : Q.Promise<any> {\n        return Q.reject(new Error(\"Must overrdie 'execute' in a sub-class\"));\n    }\n\n}\n\nexport default GPHttpClient;\n","\nimport * as Q from 'q';\nimport axios from 'axios';\nimport GPError from '../shared/error';\nimport GPHttpClient from './client';\n\n\nclass XHRHttpClient extends GPHttpClient {\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options ?: { [key:string] : any }) {\n        super(options);\n    }\n\n\n    createRequestOpts(options : { [key:string] : any }) : any {\n\n        let opts : { [key:string] : any } = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true)\n            opts.responseType = 'json';\n\n        if(options.params) {\n            opts.params = options.params;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n            opts.contentType = 'application/json';\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n                opts.withCredentials = true;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n\n    execute(opts : any) : Q.Promise<any> {\n\n        if(typeof(axios) === 'undefined') {\n            throw new Error(\"Axios not found, check that you have included \" +\n                \"it as a dependency of the application or use a different \" +\n                \"HttpClient implementation\")\n        }\n\n        let promise = axios(opts)\n        .then( response => { return response.data; })\n        .catch( error => {\n            let err : GPError = new GPError(error.message);\n            if (error.response) {\n                err = new GPError(error.response.data);\n            }\n            return Q.reject(err);\n        });\n        return Q.resolve(promise);\n    }\n\n}\n\nexport default XHRHttpClient;\n","\nimport * as Q from 'q';\nimport { Item, SearchResults } from '../shared/models';\nimport Query from '../shared/query';\nimport GPHttpClient from '../http/client';\n\n/**\n * ItemService\n * service for working with the GeoPlatform API to\n * retrieve and manipulate items.\n *\n * Ex Searching Items\n *      let params = { q: 'test' };\n *      itemService.search(params).then(response=>{\n *          console.log(response.results.length + \" of \" + response.totalResults);\n *      }).catch(e=>{...});\n *\n * Ex Fetch Item:\n *      itemService.get(itemId).then(item=>{...}).catch(e=>{...});\n *\n * Ex Saving Item:\n *      itemService.save(item).then(item=>{...}).catch(e=>{...});\n *\n * Ex Deleting Item:\n *      itemService.remove(itemId).then(()=>{...}).catch(e=>{...});\n *\n * Ex Patching Item:\n *      itemService.patch(itemId,patch).then(item=>{...}).catch(e=>{...});\n *\n */\nclass ItemService {\n\n    protected apiBase ?: string;\n    protected baseUrl ?: string;\n    protected client : GPHttpClient;\n    protected _timeout : number = 30000;\n    protected logger : any;\n    protected httpMethods : string[] = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n    }\n\n    setUrl(baseUrl : string) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/items';\n    }\n\n    /**\n     * @param milliseconds - override environment variable timeout\n     */\n    setTimeout(milliseconds : number) {\n        this._timeout = milliseconds;\n    }\n\n    /**\n     * @param milliseconds - override environment variable timeout\n     */\n    timeout(milliseconds : number) : ItemService {\n        this.setTimeout(milliseconds);\n        return this;\n    }\n\n    /**\n     * @param logger - log service\n     */\n    setLogger(logger : any) {\n        this.logger = logger;\n    }\n\n    /**\n     * @param e - error to log (if logger specified)\n     */\n    logError(e : string|Error) {\n        if(this.logger && this.logger.error) {\n            this.logger.error(e);\n        }\n    }\n\n    /**\n     * @param msg - message to log as debug\n     */\n    logDebug(msg : string) {\n        if(this.logger && this.logger.debug) {\n            this.logger.debug(msg);\n        }\n    }\n\n\n\n\n    /**\n     * @param id - identifier of item to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    get (id : string, options ?: any) : Q.Promise<Item> {\n\n        let url = this.baseUrl + '/' + id;\n        if(options && options.version) {\n            url += '/versions/' + options.version;\n            // this.logDebug(\"Client.get requesting version: \" + options.version);\n        }\n        return Q.resolve( url )\n        .then( url => {\n            let opts = this.buildRequest({ method:\"GET\", url:url, options:options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.get() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param itemObj - item to create or update\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    save (itemObj : Item, options ?: any) : Q.Promise<Item> {\n\n        return Q.resolve( itemObj )\n        .then( item => {\n\n            let method = 'POST',\n                url = this.baseUrl;\n            if(item.id) {\n                method = \"PUT\";\n                url += '/' + item.id;\n            } else {\n                //if item is being created and has no URI already defined\n                // attempt to create one using the API's method for doing so\n                // and then attempt the actual item creation\n                if(!item.uri) {\n                    return this.getUri(item, options)\n                    .then( uri => {\n                        item.uri = uri;\n                        let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n                        return this.execute(opts);\n                    });\n                }\n            }\n\n            let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`Error saving item: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.save() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param id - identifier of item to delete\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving true if successful or an error\n     */\n    remove (id : string, options ?: any) : Q.Promise<boolean> {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:\"DELETE\", url: url, options: options\n            });\n            return this.execute(opts);\n        })\n        .then( () => true)\n        .catch(e => {\n            let err = new Error(`Error deleting item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.remove() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param id - identifier of item to patch\n     * @param patch - HTTP-PATCH compliant set of properties to patch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    patch (id : string, patch : any, options ?: any) : Q.Promise<Item> {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method: \"PATCH\", url: url, data: patch, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error patching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.patch() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param arg - either JS object of query parameters or GeoPlatform.Query instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    search (arg ?: Query, options ?: any) : Q.Promise<SearchResults> {\n\n        return Q.resolve( arg )\n        .then( params => {\n            let ps = params ? params.getQuery() : {};\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl, params: ps, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error searching items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.search() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     *\n     * @param arg - URL to metadata document or File to upload\n     * @param format - metadata format of specified document\n     * @return Promise resolving GeoPlatform Item\n     */\n    import (arg : any, format : string, options ?: any) : Q.Promise<Item> {\n\n        return Q.resolve( true )\n        .then( () => {\n            if(arg===null || arg === undefined) {\n                throw new Error(\"Must provide a valid URL or File\");\n            }\n            let isFile = typeof(arg) !== 'string';\n            let ro : { [key:string]:any } = {\n                method:\"POST\",\n                url: this.apiBase + '/api/import',\n                processData: true,  //for jQuery\n                formData: true,     //for Node (RequestJS)\n                options: options\n            };\n            if(isFile) {\n                ro.file = arg;\n                ro.data = { format: format };\n            } else {\n                ro.formData = false;    //must be false for data to not be multi-part formdata\n                ro.data = { url: arg, format: format };\n            }\n            if(options && options.overwrite) {\n                ro.data.overwrite = (!!options.overwrite)+'';\n                delete options.overwrite;\n            }\n            let opts = this.buildRequest(ro);\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`Error importing item: ${e.message}`);\n            Object.assign(err, e);\n            if(e.status === 409 || ~e.message.indexOf('Item already exists'))\n                Object.assign(err, {status: 409});\n            if(e.item)\n                Object.assign(err, { item : e.item });\n            this.logError('ItemService.import() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param id - identifier of the item to export\n     * @param format - string mime type to export\n     * @return Promise resolving HTTP response object for enabling attachment downloading\n     */\n    export (id : string, format : string, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/export';\n            let opts = this.buildRequest({\n                method: \"GET\", url: url,\n                params: {format:format},\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let msg = e.message;\n            //https://github.com/GeoPlatform/client-api/issues/1\n            if(e.statusCode && e.statusCode===406 || e.statusCode==='406') {\n                msg = `Unsupported export format specified '${format}'`;\n            }\n            let err = new Error(`Error exporting item: ${msg}`);\n            Object.assign(err, e);\n            this.logError('ItemService.export() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param object - GP object definition to generate a URI for\n     * @param options - optional request options\n     * @return Promise resolving string URI\n     */\n    getUri (object : any, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( object )\n        .then( obj => {\n            if(!obj || !obj.type)\n                throw new Error(\"Must provide an object with a type property\");\n            let url = this.apiBase + '/api/utils/uri';\n            options = options || {};\n            options.responseType = 'text';  //to ensure plaintext is expected\n            let opts = this.buildRequest({\n                method: \"POST\", url: url, data: obj, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`Error getting URI for item: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.getUri() - ' + err.message);\n            return Q.reject(err);\n        });\n\n    }\n\n\n    /**\n     * @param ids - list of identifiers to fetch objects for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving list of matching items or an error\n     */\n    getMultiple (ids : string[], options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( ids )\n        .then( identifiers => {\n\n            let method = 'POST',\n                url = this.apiBase + '/api/fetch';\n\n            let opts = this.buildRequest({method:method, url:url, data:identifiers, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.getMultiple() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param uris - list of URIs to retrieve objects for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving list containing uri-item association where exists\n     */\n    exists(uris : string[], options ?: any) : Q.Promise<any> {\n        return Q.resolve(uris)\n        .then( uris => {\n            let method = 'POST', url = this.apiBase + '/api/utils/exists';\n            let opts = this.buildRequest({method:method, url:url, data:uris, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error resolving items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.exists() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    like(item : any, options ?: any) : Q.Promise<any> {\n        return Q.resolve(item.id)\n        .then( id => {\n            let method = 'PUT', url = this.apiBase + '/api/items/' + id + '/likes';\n            let opts = this.buildRequest({method:method, url:url, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error liking item ${item.id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.like() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    view(item : any, options ?: any) : Q.Promise<any> {\n        return Q.resolve(item.id)\n        .then( id => {\n            let method = 'PUT', url = this.apiBase + '/api/items/' + id + '/views';\n            let opts = this.buildRequest({method:method, url:url, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error incrementing views for item ${item.id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.like() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param id - identifier of item to fetch associations for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving array of associated items of the item in question\n     */\n    associations (id : string, params : any, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/associations';\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url:url,\n                params: params || {},\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching associations for item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.associations() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param id - identifier of item to fetch version info for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving array of available versions of the item\n     */\n    versions (id : string, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/versions';\n            let opts = this.buildRequest({ method:\"GET\", url:url, options:options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching versions for item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.versions() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param url - destination of xhr request\n     * @param params - object to be sent with request as query parameters\n     * @param data - object to be sent with request as body\n     * @param options - optional object defining request options\n     * @return request options for xhr\n     */\n    buildRequest (options : {[key:string]:any}) : {[key:string]:any} {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this._timeout || 30000;\n        let opts = this.createRequestOpts(options);\n        return opts;\n    }\n\n    createRequestOpts(options : {[key:string]:any}) : {[key:string]:any} {\n        let request = this.client.createRequestOpts(options);\n        this.logDebug(\"ItemService.createRequestOpts() - \" + JSON.stringify(request));\n        return request;\n    }\n\n    execute(opts : {[key:string]:any} ) : Q.Promise<any> {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"ItemService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport default ItemService;\n","\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass DatasetService extends ItemService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/datasets';\n    }\n\n}\n\nexport default DatasetService;\n","\n\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass MapService extends ItemService {\n\n    constructor(url:string, httpClient:GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl:string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/maps';\n    }\n\n\n}\n\nexport default MapService;\n","\n\nimport * as Q from 'q';\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass LayerService extends ItemService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/layers';\n    }\n\n    /**\n     * @param id - GeoPlatform Layer identifier\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving style JSON object\n     */\n    style (id : string, options ?: any) : Q.Promise<any> {\n        return Q.resolve( id )\n        .then( (id) => {\n\n            let url = this.baseUrl + '/' + id + '/style';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching style: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.style() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param id - GeoPlatform Layer identifier\n     * @param req identifying extent, x, y\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving feature JSON object\n     */\n    describe( id : string, req : any, options ?: any ) : Q.Promise<any> {\n\n        return Q.resolve( req )\n        .then( (req) => {\n\n            if(!req) {\n                throw new Error(\"Must provide describe parameters to use\");\n            }\n\n            let keys = ['bbox', 'height', 'width', 'x', 'y'];\n            let missing = keys.find(key => !req[key]);\n            if(missing) {\n                throw new Error(`Must specify ${missing} in describe req`);\n            }\n\n            let params = {\n                srs         : 'EPSG:4326',\n                bbox        : req.bbox,\n                height      : req.height,\n                width       : req.width,\n                info_format : 'text/xml',\n                x           : req.x,\n                y           : req.y,\n                i           : req.x, //WMS 1.3.0\n                j           : req.y  //WMS 1.3.0\n            };\n\n            let url = this.baseUrl + '/' + id + '/describe';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error describing layer feature: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.describe() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param id - GeoPlatform Layer identifier\n     * @param params describing layer request to validate\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving empty if successful or a message if failed\n     */\n    validate(id : string, params : any, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( params )\n        .then( params => {\n\n            if(!params) {\n                throw new Error(\"Must provide parameters to use in layer validation\");\n            }\n\n            let url = this.baseUrl + '/' + id + '/validate';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error validating layer request: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.describe() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default LayerService;\n","\n\nimport * as Q from 'q';\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport Query from '../shared/query';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Service service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate service objects.\n *\n * @see ItemService\n */\n\nclass ServiceService extends ItemService {\n\n    constructor(url:string, httpClient:GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl:string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/services';\n    }\n\n\n    /**\n     * Fetch metadata from the specified GeoPlatform Service's\n     * web-accessible implementation using either GetCapabilities\n     * or ESRI documentInfo.\n     * @param service - GeoPlatform Service object\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving service metadata\n     */\n    about( service : any, options ?: any ) : Q.Promise<any> {\n\n        return Q.resolve( service )\n        .then( svc => {\n            if(!svc)\n                throw new Error(\"Must provide service to get metadata about\");\n            let opts = this.buildRequest({\n                method:'POST', url:this.baseUrl + '/about', data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error describing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.about() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service types\n     */\n    types (options ?: any) : Q.Promise<any> {\n\n        let query = new Query()\n        .types(ItemTypes.STANDARD)\n        .resourceTypes('ServiceType')\n        .pageSize(50)\n        .getQuery();\n\n        return Q.resolve( query )\n        .then( (params) => {\n            let url = this.apiBase + '/api/items';\n            let opts = this.buildRequest({\n                method:'GET', url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response => response.results)\n        .catch(e => {\n            let err = new Error(`Error fetching service types: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.types() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param service - GP Service definition\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving imported service\n     */\n    import (service : any, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( service )\n        .then( svc => {\n            let url = this.baseUrl + '/import';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error importing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.import() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param id - identifier of GP service to harvest layers for\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service layers\n     */\n    harvest (id : string, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/harvest';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error harvesting layers from service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.harvest() - ' + err.message);\n            return Q.reject(err);\n        });\n\n    }\n\n    /**\n     * @param id - identifier of GP service to live test\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service statistics\n     */\n    liveTest (id : string, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/test';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error testing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.liveTest() - '  + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param id - identifier of GP service to fetch statistics about\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service statistics\n     */\n    statistics (id : string, options ?: any) : Q.Promise<any> {\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/statistics';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error getting service statistics: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.statistics() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default ServiceService;\n","\nimport * as Q from 'q';\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass GalleryService extends ItemService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/galleries';\n    }\n\n    addItem (galleryId : string, itemObj : any, options ?: any) : Q.Promise<any> {\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + galleryId + '/items';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data: itemObj, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(\"Error adding item: \" + e.message);\n            Object.assign(err, e);\n            this.logError('GalleryService.addItem() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    removeItem( galleryId : string, itemId : any, options ?: any) : Q.Promise<any> {\n        return Q.resolve( this.baseUrl + '/' + galleryId + '/items/' + itemId )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:'DELETE', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .then( () =>true)\n        .catch(e => {\n            let err = new Error(\"Error adding item: \" + e.message);\n            Object.assign(err, e);\n            this.logError('GalleryService.addItem() - '+ err.message);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default GalleryService;\n","\nimport * as Q from 'q';\nimport Config from '../shared/config';\nimport GPHttpClient from '../http/client';\n\nclass UtilsService {\n\n    private baseUrl : string;\n    private client : GPHttpClient;\n    private timeout : number = 30000;\n    private logger : any;\n    private httpMethods : string[] = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        this.client = httpClient;\n        this.baseUrl = url;\n        this.timeout = Config.timeout || 30000;\n    }\n\n    setUrl(baseUrl : string) {\n        this.baseUrl = baseUrl;\n    }\n\n    /**\n     * @param logger - log service\n     */\n    setLogger(logger : any) {\n        this.logger = logger;\n    }\n\n    /**\n     * @param e - error to log (if logger specified)\n     */\n    logError(e : string|Error) {\n        if(this.logger && this.logger.error) {\n            this.logger.error(e);\n        }\n    }\n\n    /**\n     * @param msg - message to log as debug\n     */\n    logDebug(msg : string) {\n        if(this.logger && this.logger.debug) {\n            this.logger.debug(msg);\n        }\n    }\n\n\n    /**\n     * @param property - optional capa property to specifically request\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving capabilities object\n     */\n    capabilities (property : string|null, query : any, options ?: any) : Q.Promise<any> {\n\n        let url = this.baseUrl + '/api/capabilities';\n        if(property)\n            url += '/' + property;\n\n        return Q.resolve( url )\n        .then( (url) => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query||{}, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error getting capabilities: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.capabilities() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param file\n     * @param format\n     * @param options\n     * @return Promise\n     */\n    parseFile (file : any, format : string, options ?: any) : Q.Promise<any> {\n\n        var url = this.baseUrl + '/api/utils/parse';\n\n        return Q.resolve( url )\n        .then( url => {\n\n            let opts = this.buildRequest({\n                method:\"POST\",  url:url,\n                data: { format: format },\n                file: file,\n                formData: true,   //NodeJS (RequestJS)\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then( response => response )\n        .catch(e => {\n            let err = new Error(`Error parsing file: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.parseFile() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * Geolocate the specified argument to a set of candidate locations.\n     * @param value - text string to geolocate (name or lat,lng)\n     * @param options - optional config to send with http request\n     * @return Promise resolving an array of geocoded results\n     */\n    locate(value : any, options ?: any) : Q.Promise<any> {\n\n        var url = this.baseUrl + '/api/utils/gazetteer';\n        return Q.resolve(url)\n        .then( url => {\n            let opts = this.buildRequest({\n                method: 'GET',\n                url: url,\n                params: { location: value },\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then(response => response)\n        .catch(e => {\n            let err = new Error(`Error resolving location: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.locate() - ' + err.message);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param url - destination of xhr request\n     * @param params - object to be sent with request as query parameters\n     * @param data - object to be sent with request as body\n     * @param options - optional object defining request options\n     * @return request options for xhr\n     */\n    buildRequest (options : {[key:string]:any}) : {[key:string]:any} {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout || Config.timeout || 30000;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options : {[key:string]:any}) : {[key:string]:any} {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts : {[key:string]:any}) : Q.Promise<any> {\n        return this.client.execute(opts)\n        .catch(( e : Error ) => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"UtilsService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport default UtilsService;\n","\n\nimport * as Q from 'q';\nimport ItemTypes from '../shared/types';\nimport Config from '../shared/config';\nimport GPHttpClient from '../http/client';\n\n\nclass AgolQuery {\n\n    private _query : { [key:string]:any };\n\n    constructor() {\n        this._query = {\n            page: 0,\n            size: 10\n        };\n    }\n\n    getQuery() : { [key:string]:any } {\n        let result : { [key:string]:any } = {};\n        for(let prop in this._query) {\n            let value = this._query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n    // ---------------------------------------\n\n    q(value : string) : AgolQuery { this.setQ(value); return this; }\n    setQ(value : string) { this._query.q = value; }\n    getQ() : string { return this._query.q; }\n\n    // ---------------------------------------\n\n    types(value : string|string[]) : AgolQuery {\n        this.setTypes(value); return this;\n    }\n    setTypes(value : string|string[]) {\n        let val : string;\n        if(value && Array.isArray(value))\n            val = (value as Array<string>).join(',');\n        else val = value as string;\n        this._query.types = val;\n    }\n    getTypes() : string[] { return this._query.types; }\n\n    // ---------------------------------------\n\n    groups(value : string|string[]) : AgolQuery {\n        this.setGroups(value); return this;\n    }\n    setGroups(value : string|string[]) {\n        let val : string;\n        if(value && Array.isArray(value))\n            val = (value as Array<string>).join(',');\n        else val = value as string;\n        this._query.groups = val;\n    }\n    getGroups() : string[] { return this._query.groups; }\n\n    // ---------------------------------------\n\n    orgs(value : string|string[]) : AgolQuery {\n        this.setOrgs(value); return this;\n    }\n    setOrgs(value : string|string[]) {\n        let val : string;\n        if(value && Array.isArray(value))\n            val = (value as Array<string>).join(',');\n        else val = value as string;\n        this._query.orgs = val;\n    }\n    getOrgs() : string[] { return this._query.orgs; }\n\n    // ---------------------------------------\n\n    extent(value : any) : AgolQuery { this.setExtent(value); return this; }\n    setExtent(value : any) { this._query.bbox = value; }\n    getExtent() : any { return this._query.bbox; }\n\n    // ---------------------------------------\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n    sort (sort : string, order : string) : AgolQuery {\n        this.setSort(sort, order); return this;\n    }\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort : string, order : string) {\n         order = order || 'desc';\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this._query.sort = sort;\n    }\n    getSort() : string { return this._query.sort; }\n    getSortField() : string { return this._query.sort.split(',')[0]; }\n    getSortOrder() : boolean { return this._query.sort.split(',')[1] === 'asc'; }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param page - page of results to fetch\n     */\n    page (page : number) : AgolQuery {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page : number) {\n        if(isNaN(page) || page*1<0) return;\n        this._query.page = page*1;\n    }\n\n    getPage() : number {\n        return this._query.page;\n    }\n\n    nextPage() {\n        this.setPage(this._query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this._query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param size - page size to request\n     */\n    pageSize (size : number) : AgolQuery {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size : number) {\n        if(isNaN(size) || size*1<0) return;\n        this._query.size = size*1;\n    }\n\n    getPageSize() : number {\n        return this._query.size;\n    }\n\n}\n\n\n\n\nclass AgolService {\n\n\n    // @ts-ignore\n    private baseUrl : string;\n    private client : GPHttpClient;\n    private timeout : number = 30000;\n    private httpMethods : string[] = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = 30000;\n    }\n\n    setUrl(baseUrl : string) {\n        this.baseUrl = baseUrl + '/api/agol';\n    }\n\n    // -----------------------------------------------------------------------\n    // AGOL ORGS METHODS\n\n\n    /**\n     * @param id - identifier of AGOL organization to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    getOrg (id : string, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/orgs/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getOrg() - Error fetching org ${id}: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param arg - either JS object of query parameters or Query instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    searchOrgs (arg : AgolQuery, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            let ps = params.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url: this.baseUrl + '/orgs',\n                params: ps,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchOrgs() - Error searching orgs: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL GROUPS METHODS\n\n\n    /**\n     * @param id - identifier of AGOL group to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    getGroup (id : string, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/groups/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getGroup() - Error fetching group ${id}: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param arg - either JS object of query parameters or AgolQuery instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    searchGroups (arg : AgolQuery, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            let ps = params.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url: this.baseUrl + '/groups',\n                params: ps,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchGroups() - Error searching groups: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL ITEMS METHODS\n\n    /**\n     * @param id - identifier of AGOL item to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    getItem (id : string, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( id )\n        .then( (id : string) => {\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url:this.baseUrl + '/items/' + id,\n                options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getItem() - Error fetching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param arg - either JS object of query parameters or AgolQuery instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    searchItems (arg : AgolQuery, options ?: any) : Q.Promise<any> {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            let ps = params.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url: this.baseUrl + '/items',\n                params: ps,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchItems() - Error searching items: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /* --------------------------- */\n\n    getAgolId (obj : any) : string|null {\n        if(!obj) return null;\n\n        if(!obj.type) return null;\n\n        if(ItemTypes.ORGANIZATION === obj.type || 'Group' === obj.type) {\n            return obj.id;\n        }\n\n        if(!obj.identifiers || !obj.identifiers.length) return null;\n        let ids = obj.identifiers.filter( (id:string) => ~id.indexOf('agol:'));\n        if(!ids.length) return null;\n        return ids[0].replace('agol:','');\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param url - destination of xhr request\n     * @param params - object to be sent with request as query parameters\n     * @param data - object to be sent with request as body\n     * @param options - optional object defining request options\n     * @return request options for xhr\n     */\n    buildRequest (options : {[key:string]:any} ) : {[key:string]:any} {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout || Config.timeout || 30000 ;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options : {[key:string]:any}) : {[key:string]:any} {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts : {[key:string]:any}) : Q.Promise<any> {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"AGOLService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport {\n    AgolService as default,\n    AgolService,\n    AgolQuery\n};\n","\n\nimport ItemTypes from '../shared/types';\n\n\nconst Categories : {[key:string]:string} = {\n    UNKNOWN:         'Unknown Category',\n    DATASET:         'Dataset',\n    SERVICE:         'Service',\n    LAYER:           'Layer',\n    MAP:             'Map',\n    GALLERY:         'Gallery',\n    COMMUNITY:       'Community',\n    CONTACT:         'Contact',\n    ORGANIZATION:    'Organization',\n    CONCEPT:         'Concept',\n    CONCEPT_SCHEME:  'Concept Scheme',\n    APPLICATION:     'Application',\n    TOPIC:           'Topic',\n    WEBSITE:         'WebSite',\n    RIGHTS_STATEMENT: 'RightsStatement',\n    KNOWLEDGE_GRAPH: 'Knowledge Graph',\n    USER:            'User',\n    COMMUNITY_POST:  'Community Post',   //post within a community portal\n    COMMUNITY_PAGE:  'Community Page',   //page within a community portal\n    APP_PAGE:        'Application Page', //page/view within a client application\n};\n\nconst Events : {[key:string]:string} = {\n    ACCESSED:   'Accessed',  //related item was accessed using API\n    DISPLAYED:  'Displayed', //related item was displayed in a native form (map)\n    VIEWED:     'Viewed',    //related item was viewed in general form (metadata)\n    CREATED:    'Created',\n    EDITED:     'Edited',\n    DELETED:    'Deleted'\n};\n\n\nfunction getCategory(type : string) : string {\n    let result = Categories.UNKNOWN;\n    if(type) {\n        let cats : string[] = Object.keys(Categories).map((k:string)=>Categories[k]);\n        //if existing category was specified\n        if(~cats.indexOf(type))\n            return type;\n        //if an ItemType with prefix was specified (strip off prefix)\n        else if(~type.indexOf(':')) {\n            let cat = type.split(':')[1];\n            if(~cats.indexOf(cat))\n                return cat;\n        }\n    }\n    return result;\n}\n\n\n\n/**\n *\n */\nclass Event {\n\n    private category : string;\n    private type : string;\n    private item : any = null;\n    private related : any = null;\n\n    constructor(category : string, type : string, item ?: any, related ?: any) {\n        if(!category || ! type) {\n            throw new Error(\"TrackingService Event - Must specific an event \" +\n            \"category and event type when constructing events\");\n        }\n        this.category = category;\n        this.type = type;\n        this.setItem(item);\n        this.setRelated(related);\n    }\n    getCategory() : string { return this.category; }\n    getType() : string { return this.type; }\n    getItem() : any { return this.item; }\n    setItem(item : any) { this.item = item ? (item.id || item) : null; }\n    getRelated() : any { return this.related; }\n    setRelated(related : any) {\n        this.related = related ? (related.id || related) : null;\n    }\n}\n\n\n\n/**\n * @param eventType - type of event being created\n * @param item - GeoPlatform Item instance\n * @return list of event objects\n */\nfunction TrackingEventFactory(eventType : string, item : any) : Event[] {\n    let result : Event[] = [] as Event[];\n    if(eventType && item && item.type) {\n        if(ItemTypes.MAP === item.type) {\n            result.push( new Event(Categories.MAP, eventType, item) );\n            if(Events.DISPLAYED === eventType) {\n\n                item.layers.forEach( (layerState : any) => {\n                    if(layerState.layer) {\n                        let layerEvents = TrackingEventFactory(eventType, layerState.layer)\n                            .filter(e=>e!==null);\n                        if(layerEvents && layerEvents.length) {\n                            result = result.concat(layerEvents);\n                        }\n                    }\n                });\n\n                if(item.baseLayer) {\n                    let baseEvents = TrackingEventFactory(eventType, item.baseLayer)\n                        .filter(e=>e!==null);\n                    if(baseEvents && baseEvents.length)\n                        result = result.concat( baseEvents );\n                }\n            }\n\n        } else if(ItemTypes.LAYER === item.type) {\n            result.push( new Event(Categories.LAYER, eventType, item) );\n            if(Events.DISPLAYED === eventType && item.services && item.services.length) {\n                result.push( new Event(Categories.SERVICE, eventType, item.services[0]) );\n            }\n        } else {\n            let category = getCategory(item.type);\n            result.push( new Event(category, eventType, item) );\n        }\n    }\n    // else {\n    //     if(!event) console.log(\"Missing event\");\n    //     if(!item) console.log(\"Missing item\");\n    //     if(!item.type) console.log(\"Missing item type\");\n    // }\n    return result;\n}\n\n\n\n\n\n/**\n *\n */\nclass DefaultTrackingServiceProvider {\n    constructor() {}\n    logEvent(\n        category : string,\n        event : string,\n        item ?: any,\n        // @ts-ignore\n        related ?: any\n    ) {\n        console.log( \"EVENT (\" + category + \") - \" + event + \" : \" + item);\n    }\n    // logPageView( view, data ) {\n    //     console.log(\"PAGEVIEW \" + view + (data ? \" : \" + JSON.stringify(data) : '') );\n    // }\n    logSearch(params : string, resultCount : string|number) {\n        console.log( \"Query : \" + JSON.stringify(params) + \" found \" + resultCount+ \" matches\");\n    }\n}\n\n\n\n\n\n\n/**\n * TrackingService\n *\n * Service for logging events related to usage of the GeoPlatform and its data\n *\n * Example:\n *\n *   import { TrackingService, EventCategories, EventTypes } from 'geoplatform.client';\n *\n *   let tracker = new TrackingService();\n *   tracker.setProvider( ... );\n *   tracker.event( Event.of(EventCategories.MAP, EventTypes.VIEWED, map) );\n *\n * Multi-event example:\n *\n *   import {\n *      TrackingService, TrackingEventCategories, TrackingEventTypes, TrackingEventFactory\n *   } from 'geoplatform.client';\n *\n *   let tracker = new TrackingService();\n *   tracker.setProvider( ... );\n *\n *   let events = [\n *       TrackingEvent.of( TrackingCategories.MAP, TrackingEventTypes.VIEWED, this.map )\n *       TrackingEvent.of( TrackingCategories.LAYER, TrackingEventTypes.VIEWED, this.map.baseLayer )\n *   ];\n *   tracker.event(events);\n *\n *   //OR use the event factory:\n *   tracker.event( TrackingEventFactory(EventTypes.VIEWED, this.map) );\n */\nclass TrackingService {\n\n    private provider : any = null;\n\n    constructor(options ?: any) {\n        if(options && typeof(options) === 'object')\n            Object.assign(this, options);\n\n        if(!this.provider)\n            this.setProvider(new DefaultTrackingServiceProvider());\n    }\n\n    /**\n     * @param provider -\n     */\n    setProvider(provider : any) {\n        if(provider)\n            this.provider = provider;\n    }\n\n    /**\n     * @param event - event to log\n     * @return TrackingService\n     */\n    event( event : Event ) : TrackingService {\n        this.logEvent( event );\n        return this;\n    }\n\n    /**\n     * @param event - event to log\n     */\n    logEvent( event : Event|Event[]) {\n        if(!this.provider || !this.provider.logEvent || !event) return;\n\n        if(Array.isArray(event)) {\n            let events : Event[] = event as Event[];\n            events.forEach( (evt : Event) => this.logEvent(evt) );\n\n        } else {\n            let evt : Event = event as Event;\n            try {\n                this.provider.logEvent(\n                    evt.getCategory(),\n                    evt.getType(),\n                    evt.getItem(),\n                    evt.getRelated()\n                );\n            } catch(e) {\n                console.log(\n                    \"TrackingService.logEvent() - Error logging event (\" +\n                    evt.getCategory() + \", \" + evt.getType() + \", \" +\n                    evt.getItem() + \") - \" + e.message\n                );\n            }\n        }\n    }\n\n\n    /**\n     * @param view - name of the view being activated\n     * @param data - additional context to supply for the event\n     * @return TrackingService\n     * @deprecated use svc.event( new Event(EventCategories.APP_PAGE, EventTypes.VIEWED, pageId) )\n     */\n    pageView( view : string, data : any) {\n        this.logPageView(view, data);\n        return this;\n    }\n\n    /**\n     * @param view - name of the view being activated\n     * @param data - additional context to supply for the event\n     * @deprecated use svc.logEvent( new Event(EventCategories.APP_PAGE, EventTypes.VIEWED, pageId) )\n     */\n    logPageView(\n        view : string,\n        // @ts-ignore\n        data ?: any\n    ) {\n        this.logEvent( new Event(Categories.APP_PAGE, Events.VIEWED, view) );\n        // if(this.provider && this.provider.logPageView) {\n        //     this.provider.logPageView(view, data);\n        // }\n    }\n\n    /**\n     * @param params\n     * @param resultCount\n     */\n    logSearch (params : any, resultCount : string|number) {\n        this.provider.logSearch(params, resultCount);\n    }\n\n}\n\n\nexport {\n    Event as TrackingEvent,\n    TrackingService,\n    Categories as TrackingCategories,\n    Events as TrackingTypes,\n    TrackingEventFactory\n};\n","\nimport * as Q from 'q';\nimport Config from '../shared/config';\nimport KGQuery from '../shared/kg-query';\nimport GPHttpClient from '../http/client';\n\nclass KGService {\n\n    // @ts-ignore\n    private apiBase : string;\n    // @ts-ignore\n    private baseUrl : string;\n    private client : GPHttpClient;\n    private timeout : number = 30000;\n    private httpMethods : string[] = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n    }\n\n    setUrl(baseUrl : string) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/recommender';\n    }\n\n    /**\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving recommended concepts as search results\n     */\n    suggest (query : KGQuery, options ?: any) : Q.Promise<any> {\n        let url = this.baseUrl + '/suggest';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.suggest() - Error suggesting concepts: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving concept types as search results\n     */\n    types (query : KGQuery, options ?: any) : Q.Promise<any> {\n        let url = this.baseUrl + '/types';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.types() - Error searching types: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving concept sources as search results\n     */\n    sources (query : KGQuery, options ?: any) : Q.Promise<any> {\n        let url = this.baseUrl + '/sources';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.sources() - Error searching sources: ${e.message}`);\n            Object.assign(err, e);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n\n    /**\n     * internal method used by exposed methods\n     */\n    _search (url : string, query : KGQuery, options ?: any) : Q.Promise<any> {\n        return Q.resolve( true )\n        .then( () => {\n            let q : { [key:string]:any } = query.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:q, options:options\n            });\n            return this.execute(opts);\n        });\n    }\n\n\n\n    /**\n     * @param method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param url - destination of xhr request\n     * @param params - object to be sent with request as query parameters\n     * @param data - object to be sent with request as body\n     * @param options - optional object defining request options\n     * @return request options for xhr\n     */\n    buildRequest (options : {[key:string]:any}) : {[key:string]:any} {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout || Config.timeout || 30000;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options : {[key:string]:any}) : {[key:string]:any} {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts : {[key:string]:any}) : Q.Promise<any> {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"KGService.execute() - Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return Q.reject(e);\n        });\n    }\n\n}\n\nexport default KGService;\n","\nimport GPHttpClient from '../http/client';\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport LayerService from './layer';\nimport ServiceService from './service';\nimport GalleryService from './gallery';\nimport DatasetService from './dataset';\nimport MapService from './map';\n\n/**\n * @param arg - string type or object with type property\n * @param baseUrl - base endpoint of GeoPlatform API\n * @return ItemService\n */\nconst ServiceFactory = function(arg : any, baseUrl : string, httpClient : GPHttpClient) : any {\n    let type = (typeof(arg) === 'string') ?\n        arg : (arg && arg.type ? arg.type : null);\n    if(!type) throw new Error(\"Must provide a type or object with a type specified\");\n    if(!baseUrl) throw new Error(\"Must provide a base url\");\n    if(!httpClient) throw new Error(\"Must provide an http client to use to make requests\");\n    switch(type) {\n        case ItemTypes.LAYER:   return new LayerService(  baseUrl, httpClient);\n        case ItemTypes.SERVICE: return new ServiceService(baseUrl, httpClient);\n        case ItemTypes.MAP:     return new MapService(    baseUrl, httpClient);\n        case ItemTypes.GALLERY: return new GalleryService(baseUrl, httpClient);\n        case ItemTypes.DATASET: return new DatasetService(baseUrl, httpClient);\n        default:                return new ItemService(   baseUrl, httpClient);\n    }\n};\n\nexport default ServiceFactory;\n","import Polyfills from \"./shared/polyfills\";\nPolyfills();\n\nimport GPError from './shared/error';\nimport ItemTypes from './shared/types';\nimport KGQuery from './shared/kg-query';\nimport KGClassifiers from './shared/classifiers';\nimport QueryParameters from './shared/parameters';\nimport {\n    Query,\n    Fields as QueryFields,\n    Facets as QueryFacets\n} from './shared/query';\nimport QueryFactory    from './shared/query-factory';\nimport Config from './shared/config';\n\nimport {\n    Item, Asset, Dataset, Service, Layer, Map, Gallery,\n    Organization, Contact, ConceptScheme, SearchResults\n} from \"./shared/models\";\n\nimport GPHttpClient from './http/client';\n// import JQueryHttpClient from './http/jq';\nimport XHRHttpClient from './http/xhr';\n\n\nimport ItemService from './services/item';\nimport DatasetService from './services/dataset';\nimport MapService from './services/map';\nimport LayerService from './services/layer';\nimport ServiceService from './services/service';\nimport GalleryService from './services/gallery';\nimport UtilsService from './services/utils';\nimport { AgolService, AgolQuery } from './services/agol';\n\nimport {\n    TrackingEvent,\n    TrackingService,\n    TrackingCategories,\n    TrackingTypes,\n    TrackingEventFactory\n} from './services/tracking';\n\nimport KGService from './services/kg';\nimport ServiceFactory  from './services/factory';\n\n\n\n\nexport {\n\n    GPError,\n    ItemTypes,\n    QueryParameters,\n    QueryFacets,\n    Query,\n    QueryFactory,\n    QueryFields,\n    KGQuery,\n    KGClassifiers,\n    AgolQuery,\n\n    Item, Asset, Dataset, Service, Layer, Map, Gallery,\n    Organization, Contact, ConceptScheme, SearchResults,\n\n    Config,\n\n    GPHttpClient,\n    // JQueryHttpClient,\n    XHRHttpClient,\n\n\n    ItemService,\n    DatasetService,\n    MapService,\n    LayerService,\n    ServiceService,\n    GalleryService,\n    UtilsService,\n    KGService,\n    ServiceFactory,\n    AgolService,\n\n\n    TrackingEvent,\n    TrackingService,\n    TrackingCategories,\n    TrackingTypes,\n    TrackingEventFactory\n\n};\n"],"names":["tslib_1.__extends","QueryParameters","SORT_OPTIONS_DEFAULT","Q.reject","Q.resolve"],"mappings":"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"}
