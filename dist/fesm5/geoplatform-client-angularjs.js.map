{"version":3,"file":"geoplatform-client-angularjs.js.map","sources":["ng://@geoplatform/client/angularjs/http/ng.ts","ng://@geoplatform/client/angularjs/services/index.ts","ng://@geoplatform/client/angularjs/index.ts"],"sourcesContent":["\nimport * as angular from \"angular\";\nimport { GPHttpClient } from \"@geoplatform/client\";\n\n\n\nclass NGHttpClient extends GPHttpClient {\n\n    private $http : any;\n    private $q : any;\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     * @param options.$http - angular $http service instance\n     */\n    constructor(options ?: { [key:string] : any }) {\n        super(options);\n        if(typeof(angular) === 'undefined' || angular === null) {\n            throw new Error(\"AngularJS could not be found globally\");\n        }\n        if(options && options.$http)\n            this.$http = options.$http;\n        if(options && options.$q)\n            this.$q = options.$q;\n    }\n\n    createRequestOpts(options : { [key:string] : any }) : any {\n\n        let opts : { [key:string] : any } = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true || 'json' === options.responseType)\n            opts.dataType = 'json';\n        else if('text' === options.responseType)\n            opts.dataType = 'text';\n\n        if(options.params) {\n            opts.params = options.params;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n        }\n\n        //set authorization token if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n                opts.useXDomain = true;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n    execute(opts : any) : Promise<any> {\n\n        let $injector = angular.injector(['ng']);\n        let $q = this.$q || $injector.get('$q');\n        let $http = this.$http || $injector.get('$http');\n\n        let deferred = $q.defer();\n        $http(opts)\n        .then( response => { deferred.resolve(response.data); })\n        .catch(response => { deferred.reject(new Error(response.data)); });\n        return deferred.promise.then((data)=>data) as Promise<any>;\n\n        // return Promise.resolve( $http )\n        // .then($http => {\n        //     if(typeof($http) === 'undefined')\n        //         throw new Error(\"Angular $http not resolved\");\n        //\n        //     // console.log(opts);\n        //     return $http(opts);\n        // })\n        // .then(response=> () => {\n        //     return $timeout(()=>{return response.data;});\n        // })\n        // .catch(response=> { throw new Error(response.data); });\n    }\n\n}\n\nexport default NGHttpClient;\n","\nimport * as angular from \"angular\";\nimport {\n    Config, Query, QueryFactory, Item, SearchResults, GPHttpClient,\n    ItemService, UtilsService, TrackingService,\n    DatasetService, ServiceService, LayerService, MapService, GalleryService\n} from \"@geoplatform/client\";\n\nimport NGHttpClient from '../http/ng';\n\n\n\n\n/*\n * NOTICE:\n *\n * These services are angular aware (using angular's $q wrapper)\n * to ensure that any Promises returned are ultimately gated\n * through a $q instance and therefore will trigger a digest\n * upon completion.\n *\n * If you manually create an instance that is not angular aware,\n * you will need to wrap any response handler's manipulation of data\n * with $scope.$apply, $timeout, or an equivalent to trigger a digest\n */\n\n\n\n\n/** Angular-aware instance of ItemService */\nclass NGItemService extends ItemService {\n\n    private $q : any;\n\n    constructor(url : string, httpClient : GPHttpClient, $q : any) {\n        super(url, httpClient);\n        this.$q = $q;\n    }\n\n    createPromise ( arg: (resolve: (value?: any) => void, reject: (reason?: any) => void) => void ) : Promise<any> {\n        return this.$q( arg );\n    }\n    createAndResolvePromise( value : any ) : Promise<any> {\n        return this.$q.resolve(value);\n    }\n    createAndRejectPromise ( error : Error ) : Promise<any>{\n        return this.$q.reject(error);\n    }\n\n}\n\n\n/** Angular-aware instance of DatasetService */\nclass NGDatasetService extends DatasetService {\n\n    private $q : any;\n\n    constructor(url : string, httpClient : GPHttpClient, $q : any) {\n        super(url, httpClient);\n        this.$q = $q;\n    }\n\n    createPromise ( arg: (resolve: (value?: any) => void, reject: (reason?: any) => void) => void ) : Promise<any> {\n        return this.$q( arg );\n    }\n    createAndResolvePromise( value : any ) : Promise<any> {\n        return this.$q.resolve(value);\n    }\n    createAndRejectPromise ( error : Error ) : Promise<any>{\n        return this.$q.reject(error);\n    }\n\n}\n\n\n/** Angular-aware instance of GalleryService */\nclass NGGalleryService extends GalleryService {\n\n    private $q : any;\n\n    constructor(url : string, httpClient : GPHttpClient, $q : any) {\n        super(url, httpClient);\n        this.$q = $q;\n    }\n\n    createPromise ( arg: (resolve: (value?: any) => void, reject: (reason?: any) => void) => void ) : Promise<any> {\n        return this.$q( arg );\n    }\n    createAndResolvePromise( value : any ) : Promise<any> {\n        return this.$q.resolve(value);\n    }\n    createAndRejectPromise ( error : Error ) : Promise<any>{\n        return this.$q.reject(error);\n    }\n\n}\n\n\n/** Angular-aware instance of LayerService */\nclass NGLayerService extends LayerService {\n\n    private $q : any;\n\n    constructor(url : string, httpClient : GPHttpClient, $q : any) {\n        super(url, httpClient);\n        this.$q = $q;\n    }\n\n    createPromise ( arg: (resolve: (value?: any) => void, reject: (reason?: any) => void) => void ) : Promise<any> {\n        return this.$q( arg );\n    }\n    createAndResolvePromise( value : any ) : Promise<any> {\n        return this.$q.resolve(value);\n    }\n    createAndRejectPromise ( error : Error ) : Promise<any>{\n        return this.$q.reject(error);\n    }\n\n}\n\n\n/** Angular-aware instance of MapService */\nclass NGMapService extends MapService {\n\n    private $q : any;\n\n    constructor(url : string, httpClient : GPHttpClient, $q : any) {\n        super(url, httpClient);\n        this.$q = $q;\n    }\n\n    createPromise ( arg: (resolve: (value?: any) => void, reject: (reason?: any) => void) => void ) : Promise<any> {\n        return this.$q( arg );\n    }\n    createAndResolvePromise( value : any ) : Promise<any> {\n        return this.$q.resolve(value);\n    }\n    createAndRejectPromise ( error : Error ) : Promise<any>{\n        return this.$q.reject(error);\n    }\n\n}\n\n\n/** Angular-aware instance of ServiceService */\nclass NGServiceService extends ServiceService {\n\n    private $q : any;\n\n    constructor(url : string, httpClient : GPHttpClient, $q : any) {\n        super(url, httpClient);\n        this.$q = $q;\n    }\n\n    createPromise ( arg: (resolve: (value?: any) => void, reject: (reason?: any) => void) => void ) : Promise<any> {\n        return this.$q( arg );\n    }\n    createAndResolvePromise( value : any ) : Promise<any> {\n        return this.$q.resolve(value);\n    }\n    createAndRejectPromise ( error : Error ) : Promise<any>{\n        return this.$q.reject(error);\n    }\n\n}\n\n\n/** Angular-aware instance of UtilsService */\nclass NGUtilsService extends UtilsService {\n\n    private $q : any;\n\n    constructor(url : string, httpClient : GPHttpClient, $q : any) {\n        super(url, httpClient);\n        this.$q = $q;\n    }\n\n    createPromise ( arg: (resolve: (value?: any) => void, reject: (reason?: any) => void) => void ) : Promise<any> {\n        return this.$q( arg );\n    }\n    createAndResolvePromise( value : any ) : Promise<any> {\n        return this.$q.resolve(value);\n    }\n    createAndRejectPromise ( error : Error ) : Promise<any>{\n        return this.$q.reject(error);\n    }\n\n}\n\n\nexport {\n    NGItemService,\n    NGDatasetService,\n    NGServiceService,\n    NGLayerService,\n    NGMapService,\n    NGGalleryService,\n    NGUtilsService\n}\n","\nimport NGHttpClient from './http/ng';\n\n\nimport * as angular from \"angular\";\nimport {\n    Config, Query, QueryFactory, Item, SearchResults, GPHttpClient,\n    ItemService, UtilsService, TrackingService,\n    DatasetService, ServiceService, LayerService, MapService, GalleryService\n} from \"@geoplatform/client\";\n\nimport {\n    NGItemService, NGDatasetService, NGServiceService,\n    NGLayerService, NGMapService, NGGalleryService,\n    NGUtilsService\n} from './services/index';\n\n\nif(angular && typeof(angular.module) !== 'undefined') {\n\n    let serviceFactory = function(gpNgHttpClient, svcClass, url, $q) {\n        if( NGItemService === svcClass    || NGDatasetService === svcClass ||\n            NGServiceService === svcClass || NGLayerService === svcClass ||\n            NGMapService === svcClass     || NGGalleryService === svcClass ||\n            NGUtilsService === svcClass ) {\n            return new svcClass( url, gpNgHttpClient, $q);\n        }\n        return new svcClass( url, gpNgHttpClient );\n    }\n\n    /*\n     * Define AngularJS module that can be included in downstream applications\n     *\n     * Example:\n     *\n     *  angular.module('myApp', [ 'ui-router', 'gpClient' ])\n     *  .component('myComponent', {\n     *    bindings: { },\n     *    template: \"<div></div>\",\n     *    controller: function(gpQueryFactory, gpItemService) {\n     *       this.$onInit = function() {\n     *          gpItemService.search( gpQueryFactory() ).then( response => { ... });\n     *       };\n     *    }\n     *  ]);\n     */\n    angular.module('gpClient', [])\n\n    .provider('gpConfig', function() {\n        return {\n            $get: function() {\n                return Config;\n            }\n        };\n    })\n\n    .factory('gpQueryFactory', function() { return QueryFactory; })\n\n    .factory('gpNgHttpClient', ['$http', '$q',\n        function( $http, $q ) {\n            return new NGHttpClient({ $http : $http, $q: $q });\n        }\n    ])\n\n    .factory('gpTrackingServiceFactory', function() {\n        return function(options) {\n            return new TrackingService( options );\n        };\n    })\n\n    ;\n\n\n    /*\n     * Expose Service instances in the 'gpClient' module\n     * These services are angular aware using angular's $q wrapper\n     */\n    const serviceClasses = {\n        'gpItemService'   : NGItemService,\n        'gpUtilsService'  : NGUtilsService,\n        'gpDatasetService': NGDatasetService,\n        'gpServiceService': NGServiceService,\n        'gpLayerService'  : NGLayerService,\n        'gpMapService'    : NGMapService,\n        'gpGalleryService': NGGalleryService\n    };\n\n    Object.keys(serviceClasses).forEach( (name) => {\n\n        let svcClass = serviceClasses[name];\n\n        angular.module('gpClient')\n\n        /*\n            Service for each client service class that uses the\n            currently configured settings when created.  Note the\n            settings may change after the service singleton is\n            created, in which case the factory option should be used.\n         */\n        .service(name, ['gpNgHttpClient', 'gpConfig', '$q',\n            function(gpNgHttpClient, gpConfig, $q) {\n                return serviceFactory(gpNgHttpClient, svcClass, gpConfig.ualUrl, $q);\n            }\n        ])\n\n        /*\n            Factory for creating services for each client service class\n            which uses a customizable endpoint to request data from. Use\n            this if services need to be able to change API endpoints\n            during application runtime.\n         */\n        .factory(name+'Factory', ['gpNgHttpClient', '$q', function(gpNgHttpClient, $q) {\n            return function(url) {\n                return serviceFactory(gpNgHttpClient, svcClass, url, $q);\n            };\n        }]);\n\n    });\n}\n\n\n\nexport { NGHttpClient };\n"],"names":["tslib_1.__extends","angular.injector","angular.module"],"mappings":"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"}
