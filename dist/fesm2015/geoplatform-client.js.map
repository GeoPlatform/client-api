{"version":3,"file":"geoplatform-client.js","sources":["ng://@geoplatform/client/shared/polyfills.ts","ng://@geoplatform/client/shared/error.ts","ng://@geoplatform/client/shared/types.ts","ng://@geoplatform/client/shared/uri-factory.ts","ng://@geoplatform/client/shared/parameters.ts","ng://@geoplatform/client/shared/kg-query.ts","ng://@geoplatform/client/shared/classifiers.ts","ng://@geoplatform/client/shared/query.ts","ng://@geoplatform/client/shared/query-factory.ts","ng://@geoplatform/client/shared/config.ts","ng://@geoplatform/client/http/client.ts","ng://@geoplatform/client/http/xhr.ts","ng://@geoplatform/client/services/base.ts","ng://@geoplatform/client/services/item.ts","ng://@geoplatform/client/services/dataset.ts","ng://@geoplatform/client/services/map.ts","ng://@geoplatform/client/services/layer.ts","ng://@geoplatform/client/services/service.ts","ng://@geoplatform/client/services/gallery.ts","ng://@geoplatform/client/services/utils.ts","ng://@geoplatform/client/services/association.ts","ng://@geoplatform/client/services/agol.ts","ng://@geoplatform/client/services/tracking.ts","ng://@geoplatform/client/services/kg.ts","ng://@geoplatform/client/services/factory.ts","ng://@geoplatform/client/public_api.ts","ng://@geoplatform/client/geoplatform-client.ts"],"sourcesContent":["\nfunction apply() {\n    if (typeof Object.assign != 'function') {\n      // Must be writable: true, enumerable: false, configurable: true\n      Object.defineProperty(Object, \"assign\", {\n        value: function assign(target : any, varArgs : any[]) { // .length of function is 2\n\n          if (target == null) { // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n          }\n\n          if(varArgs) { }\n          var to = Object(target);\n\n          for (var index = 1; index < arguments.length; index++) {\n            var nextSource = arguments[index];\n\n            if (nextSource != null) { // Skip over if undefined or null\n              for (var nextKey in nextSource) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                  to[nextKey] = nextSource[nextKey];\n                }\n              }\n            }\n          }\n          return to;\n        },\n        writable: true,\n        configurable: true\n      });\n    }\n}\n\n\nexport default function polyfills() {\n    apply();\n};\n","\nclass GPError extends Error {\n    public error : string|null;\n    public status: number = 500;\n    public statusCode : number = 500;\n    constructor(message : string) {\n        super(message);\n        this.error = null;\n    }\n    public setError(value:string) { this.error = value; }\n    public setStatus(value:number) { this.status = this.statusCode = value; }\n}\n\nexport default GPError;\n","\n\nconst ItemTypes = {\n    DATASET         : \"dcat:Dataset\",\n    SERVICE         : \"regp:Service\",\n    LAYER           : \"Layer\",\n    MAP             : \"Map\",\n    GALLERY         : \"Gallery\",\n    COMMUNITY       : 'Community',\n    APPLICATION     : 'Application',\n    TOPIC           : 'Topic',\n    WEBSITE         : 'WebSite',\n    ORGANIZATION    : \"org:Organization\",\n    CONTACT         : \"vcard:VCard\",\n    PERSON          : \"foaf:Person\",\n    CONCEPT         : \"skos:Concept\",\n    CONCEPT_SCHEME  : \"skos:ConceptScheme\",\n    STANDARD        : 'dct:Standard',\n    RIGHTS_STATEMENT: 'dct:RightsStatement'\n};\n\nconst ItemTypeLabels = {};\nItemTypeLabels[ItemTypes.DATASET]          = \"Dataset\";\nItemTypeLabels[ItemTypes.SERVICE]          = \"Service\";\nItemTypeLabels[ItemTypes.LAYER]            = \"Layer\";\nItemTypeLabels[ItemTypes.MAP]              = \"Map\";\nItemTypeLabels[ItemTypes.GALLERY]          = \"Gallery\";\nItemTypeLabels[ItemTypes.COMMUNITY]        = 'Community';\nItemTypeLabels[ItemTypes.APPLICATION]      = 'Application';\nItemTypeLabels[ItemTypes.TOPIC]            = 'Topic';\nItemTypeLabels[ItemTypes.WEBSITE]          = 'WebSite';\nItemTypeLabels[ItemTypes.ORGANIZATION]     = \"Organization\";\nItemTypeLabels[ItemTypes.CONTACT]          = \"Contact\";\nItemTypeLabels[ItemTypes.PERSON]           = \"Person\";\nItemTypeLabels[ItemTypes.CONCEPT]          = \"Concept\";\nItemTypeLabels[ItemTypes.CONCEPT_SCHEME]   = \"Concept Scheme\";\nItemTypeLabels[ItemTypes.STANDARD]         = 'Standard';\nItemTypeLabels[ItemTypes.RIGHTS_STATEMENT] = 'Rights Statement';\n\n\nexport {\n    ItemTypes as default,\n    ItemTypes,\n    ItemTypeLabels\n};\n","\nimport ItemTypes from './types';\n\n\n\nconst URI_BASE = 'http://www.geoplatform.gov';\n\nconst ESRI_TYPES = [\n    \"http://www.geoplatform.gov/spec/esri-feature-rest\",\n    \"http://www.geoplatform.gov/spec/esri-image-rest\",\n    \"http://www.geoplatform.gov/spec/esri-map-rest\",\n    \"http://www.geoplatform.gov/spec/esri-tile-rest\"\n];\n\n\n\n\nfunction formatReference( ref : any ) : any {\n    if(ref === null) return '';\n    if(typeof(ref) === 'string')\n        return ref.toLowerCase().replace(/\\s/g,'');\n    else if(typeof(ref) === 'object') {\n        var result = '';\n        for(var prop in ref) {\n            if(ref.hasOwnProperty(prop)) {\n                var value = ref[prop];\n                if(value !== null && typeof(value) !== 'undefined') {\n                    //TODO catch non-string-able values\n                    result += (value+'').toLowerCase().replace(/\\s/g,'');\n                }\n            }\n        }\n        return result;\n    }\n    return '';\n}\n\n/**\n * Adjusts service access url to ignore certain patterns that can affect\n * how URI uniqueness is.\n * @param service - GP Service instance\n * @return access url adjusted for URI generation needs\n */\nfunction fixServiceHref(service : any) : string {\n    stripLayerFromServiceHref(service);\n    let url = service.accessURL || service.href;\n    if(!url || !url.length) return null;\n\n    //ensure case sensitivity is not an issue\n    // and that any surrounding whitespace is ignored\n    url = (url + '').trim().toLowerCase();\n\n    url = url.replace(/http(s)?:\\/\\//,'');    //ignore protocol for URI purposes\n\n    url = url.replace(/&?request=[A-Za-z]+/i,'')\n             .replace(/&?service=(WMS|WFS|WCS|CSW)/i,'')\n             .replace(/&?version=[0-9\\.]*/i,'')\n             .replace(/&?layers=[A-Za-z0-9\\-\\:_,]*/i, '')\n             .replace(/&?srs=[A-Za-z0-9\\:]*/i, '')\n             .replace(/&?crs=[A-Za-z0-9\\:]*/i, '')\n             .replace(/&?format=[A-Za-z\\/]*/i, '')\n             .replace(/&?bbox=[0-9,\\.]*/i, '');\n\n    let lastChar = url[url.length-1];\n    if( '/' === lastChar || '?' === lastChar) { //ignore empty querystring or trailing slashes\n        url = url.substring(0, url.length-1);\n    }\n    return url;\n}\n\n\n/**\n * ESRI services sometimes have layer information baked into their URL\n * which needs to be removed before the service can be used.\n * @param service - GP Service object\n */\nfunction stripLayerFromServiceHref(service : any) : string {\n\n    if(!service) return;\n    let type = service.serviceType || service.conformsTo;\n    if(!type) return;\n\n    //if ESRI service, make sure it doesn't have a layer id on the href\n    if( ESRI_TYPES.indexOf(type.uri) >= 0 ) {\n\n        let href = service.href || service.accessURL;\n        let matches = href.match(/(Map|Feature|Image)(Server\\/\\d+)/i);\n        if(matches && matches.length > 2) {\n            // 0 < full string match (ie, 'MapServer/1')\n            // 1 < server type match (ie, 'Map' or 'Feature')\n            // 2 < bit we care about (ie, 'Server/1')\n            href = href.replace(matches[2], 'Server/');\n\n            if(service.href) service.href = href;\n            if(service.accessURL) service.accessURL = href;\n        }\n    }\n}\n\n\n\n\n/**\n * @see https://geoplatform.atlassian.net/wiki/display/DT/Common+Object+Identifier+Scheme\n */\nconst URIFactory = {\n\n    factories : {},\n\n    register : function (type : string, factory : Function) {\n        this.factories[type] = factory;\n    },\n\n    create : function(object : any, md5Fn : Function) {\n        if(!object || !object.type) return null;\n        if( typeof(md5Fn) !== 'function' ) {\n            throw new Error(\"Must specify a MD5 function when using URIFactory\");\n        }\n        let factory = this.factories[object.type];\n        if(!factory) return null;\n        return factory(object, md5Fn);\n    }\n};\n\n\n\n\nURIFactory.register(ItemTypes.DATASET, function(dataset : any, md5 : Function) {\n    let pubName = (dataset.publisher||dataset.publishers||[])\n        .map( pub => { return pub.label||\"\"; }).join('');\n    let ref : any = formatReference({\n        title: dataset.title,\n        pub: pubName\n    });\n    return URI_BASE + '/id/dataset/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.SERVICE, function(service : any, md5 : Function) {\n    let url = fixServiceHref(service);\n    let ref = formatReference(url);\n    return URI_BASE + '/id/service/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.LAYER, function(layer : any, md5 : Function) {\n\n    let svcUrl = '';\n    let services = layer.servicedBy || layer.services;\n    if(services && services.length)\n        svcUrl = services[0].accessURL || services[0].href || '';\n    let lyrUrl = layer.accessURL || layer.href || '';\n    let lyrName = layer.layerName || '';\n\n    //not recommended based upon following example:\n    //  http://services.nationalmap.gov/.../MapServer/WMSServer?request=GetCapabilities&service=WMS/layer/1\n    // return url + '/layer/' + layer.layerName;\n\n    let args = svcUrl + lyrName + lyrUrl;\n    if(!args.length) return null;   //nothing was provided\n\n    //ALTERNATE URI PATTERN\n    let ref = formatReference(args);\n    return URI_BASE + '/id/layer/' + md5(ref);\n\n});\n\n/**\n * Uses the map title, createdBy, and all third-party identifiers associated with the map\n * @param {object} map - GP Map object\n * @return {string} uri unique to this object\n */\nURIFactory.register(ItemTypes.MAP, function(map : any, md5 : Function) {\n    let author = map.createdBy || map._createdBy || \"\";\n    let identifiers = (map.identifiers || map.identifier || []).join('');\n    let ref = formatReference({title: map.title, author: author, identifiers: identifiers});\n    return URI_BASE + '/id/map/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.GALLERY, function(gallery : any, md5 : Function) {\n    let author = gallery.createdBy || gallery._createdBy || \"\";\n    let ref = formatReference({title: gallery.title, author: author});\n    return URI_BASE + '/id/gallery/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.COMMUNITY, function(community : any, md5 : Function) {\n    let ref = formatReference({title: community.title});\n    return URI_BASE + '/id/community/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.ORGANIZATION, function(org : any, md5 : Function) {\n    let ref = formatReference(org.label || org.name);\n    return URI_BASE + '/id/organization/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.PERSON, function(person : any, md5 : Function) {\n    let ref = formatReference(person.name);\n    return URI_BASE + '/id/person/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.CONTACT, function(vcard : any, md5 : Function) {\n    let ref : any = {};\n    if(vcard.email || vcard.hasEmail)\n        ref.email = vcard.email || vcard.hasEmail; //email\n    if(vcard.tel)\n        ref.tel = vcard.tel; //tel\n    if(vcard.orgName || vcard['organization-name'])\n        ref.orgName = vcard.orgName || vcard['organization-name']; //orgName\n    if(vcard.positionTitle)\n        ref.positionTitle = vcard.positionTitle; //positionTitle\n    ref = formatReference(ref);\n    return URI_BASE + '/id/contact/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.CONCEPT, function(object : any, md5 : Function) {\n    let scheme = object.inScheme || object.scheme;\n    let schemeLabel = scheme ? (scheme.label || scheme.prefLabel) : '';\n    let schemeRef = formatReference(schemeLabel);\n    let ref = formatReference( object.label || object.prefLabel );\n    return URI_BASE + '/id/metadata-codelists/' + md5(schemeRef) + '/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.CONCEPT_SCHEME, function(object : any, md5 : Function) {\n    let ref = formatReference(object.label || object.prefLabel);\n    return URI_BASE + '/id/metadata-codelists/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.APPLICATION, function(object : any, md5 : Function) {\n    if(!object || !object.title) return null;\n    let author = object.createdBy || object._createdBy || \"\";\n    let ref = formatReference({title: object.title, author: author});\n    return URI_BASE + '/id/application/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.TOPIC, function(object : any, md5 : Function) {\n    if(!object || !object.title) return null;\n    let author = object.createdBy || object._createdBy || \"\";\n    let ref = formatReference({title: object.title, author: author});\n    return URI_BASE + '/id/topic/' + md5(ref);\n});\n\nURIFactory.register(ItemTypes.WEBSITE, function(item : any, md5 : Function) {\n    if(!item || !item.landingPage) return null;\n    let ref = formatReference(item.landingPage);\n    return URI_BASE + '/id/website/' + md5(ref);\n});\n\n\n\nfunction factoryFn(md5Fn) {\n    if( typeof(md5Fn) !== 'function' ) {\n        throw new Error(\"Must specify a MD5 function when using URIFactory\");\n    }\n    return function(object) {\n        return URIFactory.create(object, md5Fn);\n    };\n}\n\n\n\nexport {\n    factoryFn as default,\n    factoryFn as URIFactory\n};\n","\n\nexport default {\n    ALTERNATE_TITLE  : 'alternateTitles',\n    BEGINS           : 'startDate.min',\n    CLASSIFIERS      : 'classifiers',\n    CREATED          : 'created',\n    CREATED_BEFORE   : 'created.max',\n    CREATED_AFTER    : 'created.min',\n    CREATED_BY       : 'createdBy',\n    CREATOR          : 'creator.id',\n    CONTRIBUTED_BY   : 'contributedBy',\n    ENDS             : 'endDate.max',\n    EXTENT           : 'extent',\n    IDENTIFIERS      : 'identifiers',\n    KEYWORDS         : 'keywords',\n    LAST_MODIFIED_BY : 'lastModifiedBy',\n    MODIFIED         : 'modified',\n    MODIFIED_BEFORE  : 'modified.max',\n    MODIFIED_AFTER   : 'modified.min',\n    PUBLISHERS_ID    : 'publisher.id',\n    PUBLISHERS_LABEL : 'publisher.label',\n    PUBLISHERS_URI   : 'publisher.uri',\n    CONTACTS_ID      : 'contacts.id',\n    CONTACTS_LABEL   : 'contacts.label',\n    CONTACTS_URI     : 'contacts.uri',\n    QUERY            : 'q',\n    SCHEMES_ID       : 'scheme.id',\n    SCHEMES_LABEL    : 'scheme.label',\n    SCHEMES_URI      : 'scheme.uri',\n    SIMILAR_TO       : 'similarTo',\n    STATUS           : 'status',\n    SERVICE_TYPES    : 'serviceType.id',\n    THEMES_ID        : 'theme.id',\n    THEMES_LABEL     : 'theme.label',\n    THEMES_URI       : 'theme.uri',\n    TOPICS_ID        : 'topic.id',\n    TOPICS_LABEL     : 'topic.label',\n    TOPICS_URI       : 'topic.uri',\n    TYPES            : 'type',      //TODO change to 'types'\n    URI              : 'uri',\n    USED_BY_ID       : 'usedBy.id',\n    USED_BY_LABEL    : 'usedBy.label',\n    USED_BY_URI      : 'usedBy.uri',\n    VISIBILITY       : 'visibility',\n    RESOURCE_TYPE    : 'resourceType',\n    DATASET          : 'dataset',\n    LANDING_PAGE     : 'landingPage',\n    PURPOSE          : 'purpose',\n\n    //statistics parameters\n    RELIABILITY      : 'reliability',\n    RELIABILITY_MIN  : 'reliability.min',\n    RELIABILITY_MAX  : 'reliability.max',\n    ONLINE           : 'online',\n    COMPLIANT        : 'compliant',\n    SPEED            : 'speed',\n    SPEED_MIN        : 'speed.min',\n    SPEED_MAX        : 'speed.max',\n    LIKES            : 'likes',\n    LIKES_MIN        : 'likes.min',\n    LIKES_MAX        : 'likes.max',\n    VIEWS            : 'views',\n    VIEWS_MIN        : 'views.min',\n    VIEWS_MAX        : 'views.max',\n\n    //type-specific parameters\n    HREF             : 'href',           //service-specific\n    LAYER_TYPE       : 'layerType',     //layer-specific\n    LAYER_NAME       : 'layerName',     //...\n    PARENT_LAYER     : 'parentLayer',   //...\n    SUB_LAYER        : 'subLayer',      //...\n    SERVICE          : 'service',       //...\n    MAP_LAYER        : 'mapLayer',      //map-specific\n    GALLERY_ITEM     : 'galleryItem',   //gallery-specific\n\n    //meta-parameters\n    FACETS           : 'includeFacets',  //TODO change to 'facets'\n    FIELDS           : 'fields',\n    SORT             : 'sort',\n    PAGE             : 'page',\n    PAGE_SIZE        : 'size',\n\n    //recommender service-specific\n    FOR_TYPES        : 'for'\n};\n","\nimport QueryParameters from './parameters';\n\ninterface KVP<U> { [ key : string ] : U }\n\n\nconst SORT_OPTIONS_DEFAULT : { value:string; label:string; }[] = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nclass KGQuery {\n\n    public query : KVP<any>;\n    private defaultQuery : KVP<any>;\n\n    constructor( options ?: KVP<any> ) {\n\n        this.defaultQuery = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n        this.query = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n        if(options) {\n            this.applyParameters(options);\n        }\n    }\n\n\n    getQuery() : KVP<any> {\n        let result : KVP<any> = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    parameter(name : string, value: any) : KGQuery {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    setParameter (name : string, value : any) {\n        if(value === null || value === undefined)\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    getParameter (key : string) : any {\n        return this.query[key];\n    }\n\n    applyParameters (obj : KVP<any> ) {Â \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    q(text : string) : KGQuery {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param text - free text query\n     */\n    setQ (text : string) {\n        this.setParameter(QueryParameters.QUERY, text);\n    }\n\n    getQ() : string|null {\n        return this.getParameter(QueryParameters.QUERY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param types - KG classifiers for which concepts should be returned\n     */\n    classifiers(types : string|string[]) : KGQuery {\n        this.setClassifiers(types);\n        return this;\n    }\n\n    /**\n     * @param types - KG classifiers for which concepts should be returned\n     */\n    setClassifiers (types : string|string[]) {\n        if(!types) return;\n        if(typeof(types) === 'string') types = types = [types];\n        this.setParameter(QueryParameters.TYPES, types);\n    }\n\n    /**\n     * @return KG classifiers for which concepts should be returned\n     */\n    getClassifiers () : string[] {\n        return this.getParameter(QueryParameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.types()\n     * query parameter (they map to different HTTP request parameters).\n     * @param objTypes - Item object type names\n     */\n    types(objTypes : string|string[]) : KGQuery {\n        this.setTypes(objTypes);\n        return this;\n    }\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.setTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @param objTypes - Item object type names\n     */\n    setTypes (objTypes : string|string[]) {\n        if(!objTypes) return;\n        if(typeof(objTypes) === 'string') objTypes = [objTypes];\n        this.setParameter(QueryParameters.FOR_TYPES, objTypes);\n    }\n\n    /**\n     * Get the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.getTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @return Item object type names\n     */\n    getTypes () : string[] {\n        return this.getParameter(QueryParameters.FOR_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param page - page of results to fetch\n     */\n    page (page : number) : KGQuery {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page : number) {\n        if(isNaN(page) || page*1<0) return;\n        this.query.page = page*1;\n    }\n\n    getPage() : number {\n        return this.query.page;\n    }\n\n    nextPage() : void {\n        this.setPage(this.query.page+1);\n    }\n\n    previousPage() : void {\n        this.setPage(this.query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param size - page size to request\n     */\n    pageSize (size: number) : KGQuery {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size : number) {\n        if(isNaN(size) || size*1<0) return;\n        this.query.size = size*1;\n    }\n\n    getPageSize() : number {\n        return this.query.size;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n    sort (sort : string, order ?: string) : KGQuery {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort : string, order ?:string) {\n         order = order || 'desc';\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.query.sort = sort;\n    }\n\n    getSort() : string | null {\n        return this.query.sort;\n    }\n\n    getSortField() : string | null {\n        return this.query.sort.split(',')[0];\n    }\n\n    getSortOrder() : boolean {\n        return this.query.sort.split(',')[1] === 'asc';\n    }\n\n    /**\n     * @return list of key-value pairs of sort options\n     */\n    getSortOptions() : { value: string, label: string; }[] {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = this.defaultQuery;\n    }\n}\n\nexport default KGQuery;\n","\n\n\nexport default  {\n    PURPOSE             : 'purpose',\n    FUNCTION            : 'function',\n    TOPIC_PRIMARY       : 'primaryTopic',\n    TOPIC_SECONDARY     : 'secondaryTopic',\n    SUBJECT_PRIMARY     : 'primarySubject',\n    SUBJECT_SECONDARY   : 'secondarySubject',\n    COMMUNITY           : 'community',\n    AUDIENCE            : 'audience',\n    PLACE               : 'place',\n    CATEGORY            : 'category'\n};\n","\nimport Parameters from './parameters';\nimport Classifiers from './classifiers';\n\ninterface KVP<U> { [ key : string ] : U }\n\nconst Fields : KVP<string> = {\n    ACCESS_RIGHTS       : 'rights',\n    ALTERNATE_TITLES    : 'alternateTitles',\n    ANNOTATIONS         : 'annotations',\n    CLASSIFIERS         : 'classifiers',\n    CONCEPT_SCHEME      : 'scheme',\n    CONTACTS            : 'contacts',\n    CREATED             : 'created',\n    CREATED_BY          : 'createdBy',\n    DATASETS            : 'datasets',\n    DESCRIPTION         : 'description',\n    DISTRIBUTIONS       : 'distributions',\n    EXTENT              : 'extent',\n    GALLERY_ITEMS       : 'items',\n    HREF                : 'href',\n    IDENTIFIERS         : 'identifiers',\n    KEYWORDS            : 'keywords',\n    LABEL               : 'label',\n    LAST_MODIFIED_BY    : 'lastModifiedBy',\n    LAYERS              : 'layers',\n    LAYER_TYPE          : 'layerType',\n    LAYER_NAME          : 'layerName',\n    LEGEND              : 'legend',\n    MODIFIED            : 'modified',\n    PARENT_LAYER        : 'parentLayer',\n    PUBLISHERS          : 'publishers',\n    RESOURCE_TYPES      : 'resourceTypes',\n    SERVICE_TYPE        : 'serviceType',\n    SERVICES            : 'services',\n    SPATIAL             : 'spatial',\n    STATISTICS          : 'statistics',\n    STATUS              : 'status',\n    SUB_LAYERS          : 'subLayers',\n    TEMPORAL            : 'temporal',\n    THEMES              : 'themes',\n    THUMBNAIL           : 'thumbnail',\n    TOPICS              : 'topics',\n    USED_BY             : 'usedBy',\n    VISIBILITY          : 'visibility',\n    LANDING_PAGE        : 'landingPage'\n};\n\nconst FIELDS_DEFAULT : string[] = [\n    Fields.CREATED, Fields.MODIFIED, Fields.CREATED_BY,\n    Fields.PUBLISHERS, Fields.THEMES, Fields.DESCRIPTION\n];\n\n/* --------------------------------------------------------- */\n\nconst Facets : KVP<string> = {\n    ALTERNATE_TITLES    : 'alternateTitles',\n    CONCEPT_SCHEMES     : 'schemes',\n    CREATED_BY          : 'createdBy',\n    HREF                : 'href',\n    IDENTIFIERS         : \"identifiers\",\n    LAYER_TYPE          : 'layerType',\n    LAYER_NAME          : 'layerName',\n    LIKES               : 'likes',\n    ONLINE              : 'online',\n    PUBLISHERS          : 'publishers',\n    CONTACTS            : 'contacts',\n    RELIABILITY         : 'reliability',\n    SERVICE_TYPES       : 'serviceTypes',\n    SPEED               : 'speed',\n    STATUS              : 'status',\n    THEMES              : 'themes',\n    TOPICS              : 'topics',\n    TYPES               : 'type',   //TODO change to 'types'\n    USED_BY             : 'usedBy',\n    VIEWS               : 'views',\n    VISIBILITY          : 'visibility'\n};\n\nconst FACETS_DEFAULT : string[] = [\n    Facets.TYPES,\n    Facets.PUBLISHERS,\n    Facets.SERVICE_TYPES,\n    Facets.CONCEPT_SCHEMES,\n    Facets.VISIBILITY,\n    Facets.CREATED_BY\n];\n\n\n/*\n    Map facet keys to parameters so clients can set\n    query params using faceted results\n\n    //TODO remove these and their function below\n */\nconst FacetToParam : KVP<string> = {};\nFacetToParam[Facets.TYPES]           = Parameters.TYPES;\nFacetToParam[Facets.THEMES]          = Parameters.THEMES_ID;\nFacetToParam[Facets.TOPICS]          = Parameters.TOPICS_ID;\nFacetToParam[Facets.PUBLISHERS]      = Parameters.PUBLISHERS_ID;\nFacetToParam[Facets.CONTACTS]        = Parameters.CONTACTS_ID;\nFacetToParam[Facets.CONCEPT_SCHEMES] = Parameters.SCHEMES_ID;\nFacetToParam[Facets.USED_BY]         = Parameters.USED_BY_ID;\n\n\n\n/* --------------------------------------------------------- */\n\n\nconst SORT_OPTIONS_DEFAULT : { value: string; label: string; }[] = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nconst BBOX_REGEX = /^\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?,\\-?\\d+(\\.\\d*)?$/;\n\n\nfunction toArray(value : any) : any | null {\n    let result = value;\n    //if given a non-array value, wrap in array\n    if(result !== null && typeof(result.push) === 'undefined') result = [result];\n    //if array value is empty, nullify the result\n    if(result !== null && !result.length) result = null;\n    return result;\n}\n\n\n\n/**\n * Query\n *\n * Specify the \"default\" query constraints to use by passing in 'options.defaults = {...}';\n *\n */\nclass Query {\n\n    public query : KVP<any>;\n    private defaultQuery : KVP<any>;\n\n    /**\n     * @param options - set of initial constraints\n     */\n    constructor(options ?: KVP<any>) {\n        this.defaultQuery = { };\n        this.defaultQuery[Parameters.PAGE.toString()] = 0;\n        this.defaultQuery[Parameters.PAGE_SIZE.toString()] = 10;\n        this.defaultQuery[Parameters.SORT.toString()] = \"modified,desc\";\n        this.defaultQuery[Parameters.FIELDS.toString()] = FIELDS_DEFAULT.slice(0);\n        this.defaultQuery[Parameters.FACETS.toString()] = FACETS_DEFAULT.slice(0);\n        if(options && options.defaults) {\n            Object.assign(this.defaultQuery, options.defaults);\n            delete options.defaults;\n        }\n        this.query = JSON.parse(JSON.stringify(this.defaultQuery));\n        if(options) {\n            this.applyParameters(options);\n        }\n    }\n\n\n    /**\n     * @return containing request-ready parameters/values\n     */\n    getQuery() : KVP<any> {\n        let result : KVP<any> = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n    /**\n     * @return Query\n     */\n    clone() : Query {\n        let result = new Query();\n        let json = JSON.parse(JSON.stringify(this.query));\n        result.applyParameters(json);\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     * @param name\n     * @param value\n     * @return Query this\n     */\n    parameter(name : string, value : any) : Query {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    /**\n     * @param name\n     * @param value\n     */\n    setParameter (name : string, value: any) : void {\n        if(value === null || value === undefined || //if no value was provide\n            (typeof(value.push) !== 'undefined' && !value.length)) //or empty array\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    /**\n     * @param key - name of parameter\n     * @return value of parameter\n     */\n    getParameter (key : string) : any {\n        return this.query[key];\n    }\n\n    /**\n     * @param name - name of parameter to remove existing value for\n     */\n    clearParameter(name : string) {\n        delete this.query[name];\n    }\n\n    /**\n     * @param obj - set of parameter/values to apply to this query\n     */\n    applyParameters (obj : KVP<any>) : void {Â \n        for(let p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p as string, obj[p] as any);\n            }\n        }\n    }\n\n    /**\n     * @param facet - name of facet to set the value for as a parameter\n     * @param value - value of the facet to use as the parameter's value\n     */\n     //TODO remove this function\n    setFacetParameter (facet: string, value: string) : void {\n        let param : string = FacetToParam[facet];\n        if(!param) {\n            console.log(\"WARN : Query.applyFacetParameter() - \" +\n                \"unable to map facet to known parameter '\" + facet + \"', using \" +\n                \"as direct parameter which may not operate as intended\");\n        }\n        this.setParameter(param||facet, value);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     * @param text\n     * @return Query this\n     */\n    q(text : string) : Query { this.setQ(text); return this; }\n\n    /** @param text - free text query */\n    setQ (text : string) : void { this.setParameter(Parameters.QUERY, text); }\n    /** @return */\n    getQ() : string { return this.getParameter(Parameters.QUERY) as string; }\n\n\n    // -----------------------------------------------------------\n\n\n    keywords(text : string|string[]) : Query {\n        this.setKeywords(text);\n        return this;\n    }\n\n    /**\n     * @param text - free text query\n     */\n    setKeywords (text : string|string[]) : void {\n        this.setParameter(Parameters.KEYWORDS, toArray(text));\n    }\n\n    getKeywords() : string[] {\n        return this.getParameter(Parameters.KEYWORDS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    uri (uri : string) : Query {\n        this.setUri(uri);\n        return this;\n    }\n\n    setUri(uri : string) {\n        this.setParameter(Parameters.URI, uri);\n    }\n\n    getUri() : any {\n        return this.getParameter(Parameters.URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    types(types : string|string[]) : Query {\n        this.setTypes(types);\n        return this;\n    }\n\n    /**\n     * @param types - name of class(es) to request\n     */\n    setTypes (types : string|string[]) {\n        this.setParameter(Parameters.TYPES, toArray(types));\n    }\n\n    getTypes () : string[] {\n        return this.getParameter(Parameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    createdBy(user : string) : Query {\n        this.setCreatedBy(user);\n        return this;\n    }\n\n    /** @param user - username */\n    setCreatedBy (user : string) {\n        this.setParameter(Parameters.CREATED_BY, user);\n    }\n\n    /** @return username */\n    getCreatedBy () : any {\n        return this.getParameter(Parameters.CREATED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    lastModifiedBy(user : string) : Query {\n        this.setLastModifiedBy(user);\n        return this;\n    }\n\n    /** @param user - username */\n    setLastModifiedBy (user: string) {\n        this.setParameter(Parameters.LAST_MODIFIED_BY, user);\n    }\n\n    /** @return username */\n    getLastModifiedBy () : any {\n        return this.getParameter(Parameters.LAST_MODIFIED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.THEMES_LABEL or Parameters.THEMES_URI\n     * respectively.\n     * @param themes - string or array of strings containing theme constraint\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    themes(themes: string|string[], parameter?:string) : Query {\n        this.setThemes(themes, parameter);\n        return this;\n    }\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.THEMES_LABEL or Parameters.THEMES_URI\n     * respectively.\n     * @param themes - theme or themes to constrain by\n     */\n    setThemes (themes:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.THEMES_ID, null);\n        this.setParameter(Parameters.THEMES_LABEL, null);\n        this.setParameter(Parameters.THEMES_URI, null);\n\n        let param = parameter || Parameters.THEMES_ID;\n        this.setParameter(param, toArray(themes));\n    }\n\n    getThemes () : string[] {\n        return this.getParameter(Parameters.THEMES_ID) ||\n            this.getParameter(Parameters.THEMES_LABEL) ||\n            this.getParameter(Parameters.THEMES_URI);\n    }\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Topic or set of Topics to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.TOPIC_LABEL or Parameters.TOPIC_URI\n     * respectively.\n     * @param  topics - string or array of strings containing theme constraint\n     * @param  parameter - optional, to indicate the parameter to use\n     * @return Query instance\n     */\n    topics(topics:string|string[], parameter ?: string) : Query {\n        this.setTopics(topics, parameter);\n        return this;\n    }\n\n\n    /**\n     * Specify a Topic or set of Topics to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.TOPIC_LABEL or Parameters.TOPIC_URI\n     * respectively.\n     * @param topics - theme or topics to constrain by\n     */\n    setTopics (topics:string|string[], parameter ?: string) {\n\n        //clear existing\n        this.setParameter(Parameters.TOPICS_ID, null);\n        this.setParameter(Parameters.TOPICS_LABEL, null);\n        this.setParameter(Parameters.TOPICS_URI, null);\n\n        let param = parameter || Parameters.TOPICS_ID;\n        this.setParameter(param, toArray(topics));\n    }\n\n    getTopics () : string[] {\n        return this.getParameter(Parameters.TOPICS_ID) ||\n            this.getParameter(Parameters.TOPICS_LABEL) ||\n            this.getParameter(Parameters.TOPICS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be identifiers. If using labels or uris,\n     * specify the optional second parameter to be either\n     * Parameters.PUBLISHERS_LABEL or Parameters.PUBLISHERS_URI respectively.\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    publishers(publishers:string|string[], parameter?:string) : Query {\n        this.setPublishers(publishers, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be identifiers. If using labels or uris,\n     * specify the optional second parameter to be either\n     * Parameters.PUBLISHERS_LABEL or Parameters.PUBLISHERS_URI respectively.\n     * @param publishers - publishing orgs to constrain by\n     */\n    setPublishers (publishers:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.PUBLISHERS_ID, null);\n        this.setParameter(Parameters.PUBLISHERS_LABEL, null);\n        this.setParameter(Parameters.PUBLISHERS_URI, null);\n\n        let param = parameter || Parameters.PUBLISHERS_ID;\n        this.setParameter(param, toArray(publishers));\n    }\n\n    getPublishers () : string[] {\n        return this.getParameter(Parameters.PUBLISHERS_ID) ||\n            this.getParameter(Parameters.PUBLISHERS_LABEL) ||\n            this.getParameter(Parameters.PUBLISHERS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Point of Contact or set of Contacts to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter to be either\n     * Parameters.CONTACTS_LABEL or Parameters.CONTACTS_URI respectively.\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    contacts(contacts:string|string[], parameter?:string) : Query {\n        this.setContacts(contacts, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Contact or set of Contacts to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter to be either\n     * Parameters.CONTACTS_LABEL or Parameters.CONTACTS_URI respectively.\n     * @param contacts - publishing orgs to constrain by\n     */\n    setContacts (contacts:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.CONTACTS_ID, null);\n        this.setParameter(Parameters.CONTACTS_LABEL, null);\n        this.setParameter(Parameters.CONTACTS_URI, null);\n\n        let param = parameter || Parameters.CONTACTS_ID;\n        this.setParameter(param, toArray(contacts));\n    }\n\n    getContacts () : string[] {\n        return this.getParameter(Parameters.CONTACTS_ID) ||\n            this.getParameter(Parameters.CONTACTS_LABEL) ||\n            this.getParameter(Parameters.CONTACTS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.USED_BY_LABEL or Parameters.USED_BY_URI\n     * respectively.\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    usedBy(ids:string|string[], parameter?:string) : Query {\n        this.setUsedBy(ids, parameter);\n        return this;\n    }\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.USED_BY_LABEL or Parameters.USED_BY_URI\n     * respectively.\n     * @param ids - publishing orgs to constrain by\n     */\n    setUsedBy (ids:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.USED_BY_ID, null);\n        this.setParameter(Parameters.USED_BY_LABEL, null);\n        this.setParameter(Parameters.USED_BY_URI, null);\n\n        let param = parameter || Parameters.USED_BY_ID;\n        this.setParameter(param, toArray(ids));\n    }\n\n    getUsedBy () : string[] {\n        return this.getParameter(Parameters.USED_BY_ID) ||\n            this.getParameter(Parameters.USED_BY_LABEL) ||\n            this.getParameter(Parameters.USED_BY_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be identifiers. If using\n     * labels or uris, specify the optional second parameter\n     * to be either Parameters.SCHEMES_LABEL or Parameters.SCHEMES_URI\n     * respectively.\n     * @param schemes - schemes to constrain by\n     * @param parameter - optional, to indicate the parameter to use\n     * @return Query\n     */\n    schemes(schemes:string|string[], parameter?:string) : Query {\n        this.setSchemes(schemes, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either Parameters.SCHEMES_LABEL or Parameters.SCHEMES_URI\n     * respectively.\n     * @param schemes - schemes to constrain by\n     * @param parameter - optional, to indicate the parameter to use\n     */\n    setSchemes (schemes:string|string[], parameter?:string) {\n\n        //clear existing\n        this.setParameter(Parameters.SCHEMES_ID, null);\n        this.setParameter(Parameters.SCHEMES_LABEL, null);\n        this.setParameter(Parameters.SCHEMES_URI, null);\n\n        let param = parameter || Parameters.SCHEMES_ID;\n        this.setParameter(param, toArray(schemes));\n    }\n\n    getSchemes() : string[] {\n        return this.getParameter(Parameters.SCHEMES_ID) ||\n            this.getParameter(Parameters.SCHEMES_LABEL) ||\n            this.getParameter(Parameters.SCHEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     *\n     */\n    serviceTypes(types:string|string[]) : Query {\n        this.setServiceTypes(types);\n        return this;\n    }\n\n    /**\n     * @param types - ids\n     */\n    setServiceTypes (types:string|string[]) {\n        this.setParameter(Parameters.SERVICE_TYPES, toArray(types));\n    }\n\n    getServiceTypes () : string[] {\n        return this.getParameter(Parameters.SERVICE_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    visibility(vis:\"public\"|\"private\") : Query {\n        this.setVisibility(vis);\n        return this;\n    }\n\n    /**\n     * @param visibility - one of 'public' or 'private'\n     */\n    setVisibility (visibility : \"public\"|\"private\") {\n        this.setParameter(Parameters.VISIBILITY, visibility);\n    }\n\n    getVisibility () : any {\n        return this.getParameter(Parameters.VISIBILITY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    status(value : string) : Query {\n        this.setStatus(value);\n        return this;\n    }\n\n    /**\n     * @param status - current status of Item\n     */\n    setStatus (value : string) {\n        this.setParameter(Parameters.STATUS, value);\n    }\n\n    getStatus () : any {\n        return this.getParameter(Parameters.STATUS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    extent(bbox : any) : Query {\n        this.setExtent(bbox);\n        return this;\n    }\n\n    /**\n     * @param bbox - string form of \"minx,miny,maxx,maxy\", or L.LatLngBounds, or Array\n     */\n    setExtent (bbox : any) {\n        if(bbox) {\n            if(typeof(bbox.toBboxString) !== 'undefined') {\n                //Leaflet Bounds instance\n                bbox = bbox.toBboxString();\n\n            } else if(typeof(bbox.push) !== 'undefined' && bbox.length &&\n                //Nested array (alternate Leaflet representation):\n                // [ [minLat,minLong], [maxLat,maxLong] ]\n                typeof(bbox[0].push) !== 'undefined') {\n                bbox = bbox[0][1]+','+bbox[0][0]+','+bbox[1][1]+','+bbox[1][0];\n\n            } else if(typeof(bbox) === 'string') {\n                if(!BBOX_REGEX.test(bbox)) {\n                    throw new Error(\"Invalid argument: bbox string must be \" +\n                        \"in form of 'minx,miny,maxx,maxy'\");\n                }\n            } else {\n                throw new Error(\"Invalid argument: bbox must be one of \" +\n                    \"Leaflet.Bounds, nested array, or bbox string\");\n            }\n        }\n        this.setParameter(Parameters.EXTENT, bbox);\n    }\n\n    /**\n     * @return bbox string or null if not set\n     */\n    getExtent () : any {\n        return this.getParameter(Parameters.EXTENT);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Ex.\n     *  const { KGClassifiers, Query } from 'geoplatform.client';\n     *  let purposeId = '...';\n     *  let query = new Query();\n     *  query.classifier( KGClassifiers.PURPOSE, purposeId );\n     *\n     * @param classifier - string name of classifier to use\n     * @param value - id or array of ids of concepts to use\n     * @return Query\n     */\n    classifier(classifier : string, value : string|string[]) : Query {\n        this.setClassifier(classifier, value);\n        return this;\n    }\n\n    /**\n     * Ex.\n     *  const { KGClassifiers, Query } from 'geoplatform.client';\n     *  let purposeId = '...';\n     *  let query = new Query();\n     *  query.setClassifier( KGClassifiers.PURPOSE, purposeId );\n     *\n     * @param classifier - string name of classifier to use\n     * @param value - id or array of ids of concepts to use\n     */\n    setClassifier(classifier : string, value : string|string[]) {\n        let arr = toArray(value);\n        this.setParameter(Parameters.CLASSIFIERS + \".\" + classifier, arr);\n    }\n\n    /**\n     * @param classifier - name of classifier constraint in use\n     * @return array of concept ids\n     */\n    getClassifier(classifier : string) : string[] {\n        return this.getParameter(Parameters.CLASSIFIERS + \".\" + classifier) || [];\n    }\n\n    /**\n     * Ex.\n     *  const { KGClassifiers, Query } from 'geoplatform.client';\n     *  let purposeId = '...',\n     *      functionIds = ['...','...'];\n     *  let query = new Query();\n     *  query.classifiers({\n     *       KGClassifiers.PURPOSE: purposeId,\n     *       KGClassifiers.FUNCTION: functionIds\n     *  });\n     *\n     * @param value - object defining classifiers\n     * @return Query instance\n     */\n    classifiers(value : any) : Query {\n        this.setClassifiers(value);\n        return this;\n    }\n\n    /**\n     * @param value - object defining classifiers\n     */\n    setClassifiers (value : any) {\n        const classes = Object.keys(Classifiers).map(k=>Classifiers[k]);\n        if(!value || typeof(value) !== 'object' || Array.isArray(value)) {\n            classes.forEach( classifier => {\n                this.clearParameter( Parameters.CLASSIFIERS + \".\" + classifier );\n            });\n            return;\n        }\n        Object.keys(value).forEach( classifier => {\n            if(~classes.indexOf(classifier)) {\n                this.setClassifier( classifier, value[classifier] );\n            }\n        });\n    }\n\n    /**\n     * @return classifiers used in the query\n     */\n    getClassifiers () : any {\n        let result = {};\n        Object.keys(Classifiers).map(k=>Classifiers[k]).forEach( classifier => {\n            result[classifier] = this.getClassifier(classifier);\n        });\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    modified(date : number|Date, beforeOrAfter : boolean) : Query {\n        this.setModified(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param date - date to compare against\n     * @param beforeOrAfter - flag specifying which boundary condition (true = before, false = after) flag specifying whether to trigger update automatically\n     */\n    setModified (date : number|Date, beforeOrAfter:boolean) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(Parameters.MODIFIED_BEFORE, null);\n            this.setParameter(Parameters.MODIFIED_AFTER, null);\n            return;\n        }\n\n        if(!(date instanceof Date))\n            date = new Date(date as number);\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? Parameters.MODIFIED_BEFORE : Parameters.MODIFIED_AFTER;       //property being set\n        let oppProp = dir ? Parameters.MODIFIED_AFTER : Parameters.MODIFIED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getModified () : Date {\n        let value = this.getParameter(Parameters.MODIFIED_BEFORE) ||\n            this.getParameter(Parameters.MODIFIED_AFTER);\n        if(value && typeof(value) === 'number') {\n            value = new Date(value);\n        }\n        return value;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    created(date : number|Date, beforeOrAfter:boolean) : Query {\n        this.setCreated(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param date - date to compare against\n     * @param beforeOrAfter - flag specifying which boundary condition (true = before, false = after) flag specifying whether to trigger update automatically\n     */\n    setCreated (date : number|Date, beforeOrAfter:boolean) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(Parameters.CREATED_BEFORE, null);\n            this.setParameter(Parameters.CREATED_AFTER, null);\n            return;\n        }\n\n        if(!(date instanceof Date))\n            date = new Date(date as number);\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? Parameters.CREATED_BEFORE : Parameters.CREATED_AFTER;       //property being set\n        let oppProp = dir ? Parameters.CREATED_AFTER : Parameters.CREATED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getCreated () : Date {\n        let value = this.getParameter(Parameters.CREATED_BEFORE) ||\n            this.getParameter(Parameters.CREATED_AFTER);\n        if(value && typeof(value) === 'number') {\n            value = new Date(value);\n        }\n        return value;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    begins(date : number|Date) : Query {\n        this.setBeginDate(date);\n        return this;\n    }\n\n    setBeginDate (date : number|Date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(Parameters.BEGINS, date);\n    }\n\n    getBeginDate () : Date {\n        let date = this.getParameter(Parameters.BEGINS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    ends(date : number|Date) : Query {\n        this.setEndDate(date);\n        return this;\n    }\n\n    setEndDate (date: number|Date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(Parameters.ENDS, date);\n    }\n\n    getEndDate () : Date {\n        let date = this.getParameter(Parameters.ENDS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    between(begin : number|Date, end : number|Date) : Query {\n        this.setBetween(begin, end);\n        return this;\n    }\n\n    setBetween(begin : number|Date, end : number|Date) {\n        this.begins(begin);\n        this.ends(end);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    resourceTypes(types: string|string[]) : Query {\n        this.setResourceTypes(types);\n        return this;\n    }\n\n    setResourceTypes(types: string|string[]) {\n        this.setParameter(Parameters.RESOURCE_TYPE, toArray(types));\n    }\n\n    getResourceTypes() : string[] {\n        return this.getParameter(Parameters.RESOURCE_TYPE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    facets(names : string|string[]) : Query {\n        this.setFacets(names);\n        return this;\n    }\n\n    /*\n     * @param names - names of facets\n     */\n    setFacets (names: string|string[]) {\n        this.setParameter(Parameters.FACETS, toArray(names));\n    }\n\n    getFacets() : string[] {\n        return this.getParameter(Parameters.FACETS);\n    }\n\n    /**\n     * @param name - name of facet to add\n     */\n    addFacet(name: string) {\n        let facets = this.getFacets() || [];\n        facets.push(name);\n        this.setFacets(facets);\n    }\n\n    /**\n     * @param name - name of facet to remove\n     */\n    removeFacet(name: string) {\n        let facets = this.getFacets() || [];\n        let idx = facets.indexOf(name);\n        if(idx>=0) {\n            facets.splice(idx, 1);\n            this.setFacets(facets);\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    fields(fields: string|string[]) : Query {\n        this.setFields(fields);\n        return this;\n    }\n\n    /**\n     * @param fields - list of field names to request for each search result\n     */\n    setFields (fields: string|string[]) {\n        this.setParameter(Parameters.FIELDS, toArray(fields));\n    }\n\n    getFields() : string[] {\n        return this.getParameter(Parameters.FIELDS);\n    }\n\n    /**\n     * @param field - name of field to remove\n     */\n    addField(field: string) {\n        let fields = this.getFields() || [];\n        fields.push(field);\n        this.setFields(fields);\n    }\n\n    /**\n     * @param field - name of field to remove\n     */\n    removeField(field: string) {\n        let fields = this.getFields() || [];\n        let idx = fields.indexOf(field);\n        if(idx>=0) {\n            fields.splice(idx, 1);\n            this.setFields(fields);\n        }\n    }\n\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param page - page of results to fetch\n     */\n    page (page: number) : Query {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page: number) {\n        if(isNaN(page) || page*1<0) return;\n        this.setParameter(Parameters.PAGE, page*1);\n    }\n\n    getPage() : number {\n        return this.getParameter(Parameters.PAGE);\n    }\n\n    nextPage() : void {\n        this.setPage(this.getPage()+1);\n    }\n\n    previousPage() : void {\n        this.setPage(this.getPage()-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param size - page size to request\n     */\n    pageSize (size: number) : Query {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size: number) {\n        if(isNaN(size) || size*1<0) return;\n        this.setParameter(Parameters.PAGE_SIZE, size*1);\n    }\n\n    getPageSize() : number {\n        return this.getParameter(Parameters.PAGE_SIZE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n    sort (sort: string, order?:string) : Query {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort: string, order?:string) {\n         order = order || 'desc';\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.setParameter(Parameters.SORT, sort);\n    }\n\n    getSort() : string {\n        return this.getParameter(Parameters.SORT);\n    }\n\n    getSortField() : string | null {\n        let value = this.getSort();\n        return value && value.length ? value.split(',')[0] : null;\n    }\n\n    getSortOrder() : string | null {\n        let value = this.getSort();\n        return value && value.length ? value.split(',')[1] : null;\n    }\n\n    /**\n     * @return list of key-value pairs of sort options\n     */\n    getSortOptions() : { value: string; label: string; }[] {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = JSON.parse(JSON.stringify(this.defaultQuery));\n    }\n}\n\nexport {\n    Query as default,\n    Query,\n    Fields,\n    Facets\n};\n","\nimport Query from './query';\n\nexport default function queryFactory() {\n    return new Query();\n}\n","\nvar Config : { [key:string] : any } = {\n\n    ualUrl: 'https://ual.geoplatform.gov',\n    //appId: '...',\n\n    configure: function(options : any) {\n        Object.assign(this, options);\n    }\n};\n\nexport default Config;\n","\n\nclass GPHttpClient {\n\n    protected token : any;\n    protected cookie : any;\n    protected timeout : number = 5000;\n\n    protected authCookieName = 'gpoauth-a';\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options ?: { [key:string] : any }) {\n        options = options || {};\n        this.setTimeout(options.timeout||30000);\n        this.setAuthToken(options.token);\n        this.setCookie(options.cookie);\n    }\n\n    setTimeout(timeout : number) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg : string|Function) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    getToken() : string {\n        if(this.token && typeof(this.token) === 'function') return this.token();\n        else return this.token || null;\n    }\n\n    setCookie(cookie) {\n        this.cookie = cookie;\n    }\n\n    getCookie() {\n        return this.cookie;\n    }\n\n    createRequestOpts(\n        // @ts-ignore\n        options : { [key:string] : any }\n    ) : any {\n        throw new Error(\"Must implement 'createRequestOpts' in a sub-class\");\n    }\n\n    execute(\n        // @ts-ignore\n        opts : any\n    ) : Promise<any> {\n        return Promise.reject(new Error(\"Must overrdie 'execute' in a sub-class\"));\n    }\n\n}\n\nexport default GPHttpClient;\n","\nimport axios from 'axios';\nimport GPError from '../shared/error';\nimport GPHttpClient from './client';\n\n\nclass XHRHttpClient extends GPHttpClient {\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options ?: { [key:string] : any }) {\n        super(options);\n    }\n\n\n    createRequestOpts(options : { [key:string] : any }) : any {\n\n        let opts : { [key:string] : any } = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true)\n            opts.responseType = 'json';\n\n        if(options.params) {\n            opts.params = options.params;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n            opts.contentType = 'application/json';\n        }\n\n        //set headers requested by user config\n        opts.headers = {};\n        if(options.headers) {\n            Object.assign(opts.headers, options.headers);\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers.Authorization = 'Bearer ' + token;\n                opts.withCredentials = true;\n            }\n        }\n        let cookie = this.getCookie();\n        if(cookie) opts.headers.Cookie = this.authCookieName + '=' + cookie;\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n\n    execute(opts : any) : Promise<any> {\n\n        if(typeof(axios) === 'undefined') {\n            throw new Error(\"Axios not found, check that you have included \" +\n                \"it as a dependency of the application or use a different \" +\n                \"HttpClient implementation\")\n        }\n\n        let promise = axios(opts)\n        .then( response => { return response.data; })\n        .catch( error => {\n            let err : GPError = new GPError(error.message);\n            if (error.response) {\n                err = new GPError(error.response.data);\n            }\n            throw err;\n        });\n        return promise;\n    }\n\n}\n\nexport default XHRHttpClient;\n","\nimport Config from '../shared/config';\nimport Query from '../shared/query';\nimport GPHttpClient from '../http/client';\n\n/**\n * BaseService\n * abstract service for working with the GeoPlatform API to\n * retrieve and manipulate items.\n *\n */\nclass BaseService {\n\n    protected apiBase ?: string;\n    protected baseUrl ?: string;\n    protected client : GPHttpClient;\n    protected _timeout : number = 30000;\n    protected logger : any;\n    protected httpMethods : string[] = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n    }\n\n    setUrl(baseUrl : string) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/items';\n    }\n\n    /**\n     * @param milliseconds - override environment variable timeout\n     */\n    setTimeout(milliseconds : number) {\n        this._timeout = milliseconds;\n    }\n\n    /**\n     * @param milliseconds - override environment variable timeout\n     */\n    timeout(milliseconds : number) : BaseService {\n        this.setTimeout(milliseconds);\n        return this;\n    }\n\n    /**\n     * @return GPHttpClient instance or null if one was not provided\n     */\n    getClient() {\n        return this.client;\n    }\n\n    createPromise ( arg: (resolve: (value?: any) => void, reject: (reason?: any) => void) => void ) : Promise<any> {\n        return new Promise<any>( arg );\n    }\n    createAndResolvePromise( value : any ) : Promise<any> {\n        return Promise.resolve(value);\n    }\n    createAndRejectPromise ( error : Error ) : Promise<any>{\n        return Promise.reject(error);\n    }\n\n    /**\n     * @param logger - log service\n     */\n    setLogger(logger : any) {\n        this.logger = logger;\n    }\n\n    /**\n     * @param e - error to log (if logger specified)\n     */\n    logError(e : string|Error) {\n        if(this.logger && this.logger.error) {\n            this.logger.error(e);\n        }\n    }\n\n    /**\n     * @param msg - message to log as debug\n     */\n    logDebug(msg : string) {\n        if(this.logger && this.logger.debug) {\n            this.logger.debug(msg);\n        }\n    }\n\n\n\n\n    /**\n     * @param method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param url - destination of xhr request\n     * @param params - object to be sent with request as query parameters\n     * @param data - object to be sent with request as body\n     * @param options - optional object defining request options\n     * @return request options for xhr\n     */\n    buildRequest (options : {[key:string]:any}) : {[key:string]:any} {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this._timeout || 30000;\n        let opts = this.createRequestOpts(options);\n        return opts;\n    }\n\n    createRequestOpts(options : {[key:string]:any}) : {[key:string]:any} {\n\n        if(typeof(options.options)==='object') {\n            let req = options.options;  //user supplied configuration\n            delete options.options;\n\n            if(req.params && options.params) {    //merge user params with ones needed by API calls\n                //Note: any user-supplied parameter of the same name as one used\n                // by the GP API call will be overwritten\n                Object.keys(options.params).forEach( param => {\n                    req.params[param] = options.params[param];\n                });\n                delete options.params;\n            }\n\n            Object.assign(req, options);\n            options = req;\n        }\n\n        let request = this.client.createRequestOpts(options);\n        this.logDebug(\"BaseService.createRequestOpts() - \" + JSON.stringify(request));\n        return request;\n    }\n\n    execute(opts : {[key:string]:any} ) : Promise<any> {\n        return this.client.execute(opts)\n        .catch(e => {\n            if(e === null || typeof(e) === 'undefined') {\n                e = new Error(\"Request failed but didn't return an \" +\n                \"error. This is most likely because the request timed out\");\n            }\n            return this.createAndRejectPromise(e);\n        });\n    }\n\n}\n\n\nexport default BaseService;\n","\nimport { Item, SearchResults } from '../shared/models';\nimport Query from '../shared/query';\nimport GPHttpClient from '../http/client';\n\nimport BaseService from './base';\n\n/**\n * ItemService\n * service for working with the GeoPlatform API to\n * retrieve and manipulate items.\n *\n * Ex Searching Items\n *      let params = { q: 'test' };\n *      itemService.search(params).then(response=>{\n *          console.log(response.results.length + \" of \" + response.totalResults);\n *      }).catch(e=>{...});\n *\n * Ex Fetch Item:\n *      itemService.get(itemId).then(item=>{...}).catch(e=>{...});\n *\n * Ex Saving Item:\n *      itemService.save(item).then(item=>{...}).catch(e=>{...});\n *\n * Ex Deleting Item:\n *      itemService.remove(itemId).then(()=>{...}).catch(e=>{...});\n *\n * Ex Patching Item:\n *      itemService.patch(itemId,patch).then(item=>{...}).catch(e=>{...});\n *\n */\nclass ItemService extends BaseService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n\n    /**\n     * @param id - identifier of item to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    get (id : string, options ?: any) : Promise<Item> {\n\n        let url = this.baseUrl + '/' + id;\n        if(options && options.version) {\n            url += '/versions/' + options.version;\n            // this.logDebug(\"Client.get requesting version: \" + options.version);\n        }\n        return this.createAndResolvePromise( url )\n        .then( url => {\n            let opts = this.buildRequest({ method:\"GET\", url:url, options:options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.get() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param itemObj - item to create or update\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    save (itemObj : Item, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( itemObj )\n        .then( item => {\n\n            let method = 'POST',\n                url = this.baseUrl;\n            if(item.id) {\n                method = \"PUT\";\n                url += '/' + item.id;\n            } else {\n                //if item is being created and has no URI already defined\n                // attempt to create one using the API's method for doing so\n                // and then attempt the actual item creation\n                if(!item.uri) {\n                    return this.getUri(item, options)\n                    .then( uri => {\n                        item.uri = uri;\n                        let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n                        return this.execute(opts);\n                    });\n                }\n            }\n\n            let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`Error saving item: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.save() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param id - identifier of item to delete\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving true if successful or an error\n     */\n    remove (id : string, options ?: any) : Promise<boolean> {\n\n        return this.createAndResolvePromise( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:\"DELETE\", url: url, options: options\n            });\n            return this.execute(opts);\n        })\n        .then( () => true)\n        .catch(e => {\n            let err = new Error(`Error deleting item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.remove() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param id - identifier of item to patch\n     * @param patch - HTTP-PATCH compliant set of properties to patch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    patch (id : string, patch : any, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method: \"PATCH\", url: url, data: patch, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error patching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.patch() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param id - identifier of item to clone\n     * @param overrides - KVP of property-value overrides to apply to cloned instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving clone of Item or an error\n     */\n    clone (id : string, overrides : any, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( this.baseUrl + '/' + id + '/clone' )\n        .then( url => {\n            let opts = this.buildRequest({\n                method: \"POST\", url: url, data: overrides, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error cloning item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.clone() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param arg - either JS object of query parameters or Query instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    search (arg ?: any, options ?: any) : Promise<SearchResults> {\n\n        return this.createAndResolvePromise( arg )\n        .then( params => {\n            let ps = {};\n            if(params && typeof(params.getQuery) === 'function') ps = params.getQuery();\n            else if(typeof(params) === 'object') ps = params;\n            else ps = {};\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url: this.baseUrl,\n                params: ps,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error searching items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.search() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     *\n     * @param arg - URL to metadata document or File to upload\n     * @param format - metadata format of specified document\n     * @return Promise resolving GeoPlatform Item\n     */\n    import (arg : any, format : string, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( true )\n        .then( () => {\n            if(arg===null || arg === undefined) {\n                throw new Error(\"Must provide a valid URL or File\");\n            }\n            let isFile = typeof(arg) !== 'string';\n            let ro : { [key:string]:any } = {\n                method:\"POST\",\n                url: this.apiBase + '/api/import',\n                processData: true,  //for jQuery\n                formData: true,     //for Node (RequestJS)\n                options: options\n            };\n            if(isFile) {\n                ro.file = arg;\n                ro.data = { format: format };\n            } else {\n                ro.formData = false;    //must be false for data to not be multi-part formdata\n                ro.data = { url: arg, format: format };\n            }\n            if(options && options.overwrite) {\n                ro.data.overwrite = (!!options.overwrite)+'';\n                delete options.overwrite;\n            }\n            let opts = this.buildRequest(ro);\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`Error importing item: ${e.message||e}`);\n            Object.assign(err, e);\n            if(e.status === 409 || (e.message && ~e.message.indexOf('Item already exists') ))\n                Object.assign(err, {status: 409});\n            if(e.item)\n                Object.assign(err, { item : e.item });\n            this.logError('ItemService.import() - ' + (err.message||e));\n            throw err;\n        });\n    }\n\n\n\n    /**\n     * @param id - identifier of the item to export\n     * @param format - string mime type to export\n     * @return Promise resolving HTTP response object for enabling attachment downloading\n     */\n    export (id : string, format : string, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/export';\n            let opts = this.buildRequest({\n                method: \"GET\", url: url,\n                params: {format:format},\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let msg = e.message;\n            //https://github.com/GeoPlatform/client-api/issues/1\n            if(e.statusCode && e.statusCode===406 || e.statusCode==='406') {\n                msg = `Unsupported export format specified '${format}'`;\n            }\n            let err = new Error(`Error exporting item: ${msg}`);\n            Object.assign(err, e);\n            this.logError('ItemService.export() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param object - GP object definition to generate a URI for\n     * @param options - optional request options\n     * @return Promise resolving string URI\n     */\n    getUri (object : any, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( object )\n        .then( obj => {\n            if(!obj || !obj.type)\n                throw new Error(\"Must provide an object with a type property\");\n            let url = this.apiBase + '/api/utils/uri';\n            options = options || {};\n            options.responseType = 'text';  //to ensure plaintext is expected\n            let opts = this.buildRequest({\n                method: \"POST\", url: url, data: obj, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`Error getting URI for item: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.getUri() - ' + err.message);\n            throw err;\n        });\n\n    }\n\n\n    /**\n     * @param ids - list of identifiers to fetch objects for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving list of matching items or an error\n     */\n    getMultiple (ids : string[], options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( ids )\n        .then( identifiers => {\n\n            let method = 'POST',\n                url = this.apiBase + '/api/fetch';\n\n            let opts = this.buildRequest({method:method, url:url, data:identifiers, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.getMultiple() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param uris - list of URIs to retrieve objects for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving list containing uri-item association where exists\n     */\n    exists(uris : string[], options ?: any) : Promise<any> {\n        return this.createAndResolvePromise(uris)\n        .then( uris => {\n            let method = 'POST', url = this.apiBase + '/api/utils/exists';\n            let opts = this.buildRequest({method:method, url:url, data:uris, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error resolving items: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.exists() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    like(item : any, options ?: any) : Promise<any> {\n        return this.createAndResolvePromise(item.id)\n        .then( id => {\n            let method = 'PUT', url = this.apiBase + '/api/items/' + id + '/likes';\n            let opts = this.buildRequest({method:method, url:url, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error liking item ${item.id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.like() - ' + err.message);\n            throw err;\n        });\n    }\n\n    view(item : any, options ?: any) : Promise<any> {\n        return this.createAndResolvePromise(item.id)\n        .then( id => {\n            let method = 'PUT', url = this.apiBase + '/api/items/' + id + '/views';\n            let opts = this.buildRequest({method:method, url:url, options:options});\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error incrementing views for item ${item.id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.like() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param id - identifier of item to fetch associations for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving array of associated items of the item in question\n     */\n    associations (id : string, params : any, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/associations';\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url:url,\n                params: params || {},\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching associations for item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.associations() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param id - identifier of item to fetch version info for\n     * @param params - optional set of query parameters to constrain list of versions\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving array of available versions of the item\n     */\n    versions (id : string, params ?: any, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/versions';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params: params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching versions for item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ItemService.versions() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /*\n    getThumbnail ( id : string, options ?: any ) : Promise<any> {\n        return this.createAndResolvePromise( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/thumbnail';\n            let opts = this.buildRequest({\n                method: \"GET\", url: url,\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let msg = e.message;\n            let err = new Error(`Error getting thumbnail for item: ${msg}`);\n            Object.assign(err, e);\n            this.logError(`ItemService.getThumbnail() - ${msg}`);\n            throw err;\n        });\n    }\n\n    createThumbnail ( id : string, options ?: any ) : Promise<any> {\n        return this.createAndResolvePromise( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/thumbnail';\n            let opts = this.buildRequest({\n                method: \"POST\", url: url,\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let msg = e.message;\n            let err = new Error(`Error creating thumbnail for item: ${msg}`);\n            Object.assign(err, e);\n            this.logError(`ItemService.createThumbnail() - ${msg}`);\n            throw err;\n        });\n    }\n    */\n\n\n}\n\nexport default ItemService;\n","\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass DatasetService extends ItemService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/datasets';\n    }\n\n}\n\nexport default DatasetService;\n","\n\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass MapService extends ItemService {\n\n    constructor(url:string, httpClient:GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl:string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/maps';\n    }\n\n\n}\n\nexport default MapService;\n","\n\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass LayerService extends ItemService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/layers';\n    }\n\n    /**\n     * Fetch a style associated with a given GeoPlatform Layer asset. This may\n     * be the style for an Esri FeatureServer layer using the following:\n     *\n     *   .style( layerId, options);\n     *\n     * or a specific style definition for a non-Esri layer using the following call:\n     *\n     *   .style( layerId, styleId, options);\n     *\n     * @param id - GeoPlatform Layer identifier\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving style JSON object\n     */\n    style (id : string, ...args) : Promise<any> {\n        return Promise.resolve( id )\n        .then( (id) => {\n\n            let options = { params: null };\n            let url = this.baseUrl + '/' + id + '/style';\n\n            if(args[0] && typeof(args[0]) === 'string') { //style id parameter\n                url += 's/' + args[0];                    //\n                if(args[1]) options.params = args[1];            // ... plus options parameter\n\n            } else if(args[0] && typeof(args[0]) === 'object') { //options parameter\n                options.params = args[0];\n            }\n\n            let opts = this.buildRequest({ method:\"GET\", url:url, options:options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching style: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.style() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * Fetch the list of styles associated with a given GeoPlatform Layer asset\n     * @param id - GeoPlatform Layer identifier\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving style JSON object\n     */\n    styles ( id : string, options ?: any ) : Promise<any[]> {\n        return Promise.resolve( id )\n        .then( (id) => {\n            let url = this.baseUrl + '/' + id + '/styles';\n            let opts = this.buildRequest({ method:\"GET\", url:url, options:options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching style: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.style() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param id - GeoPlatform Layer identifier\n     * @param req identifying extent, x, y\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving feature JSON object\n     */\n    describe( id : string, req : any, options ?: any ) : Promise<any> {\n\n        return Promise.resolve( req )\n        .then( (req) => {\n\n            if(!req) {\n                throw new Error(\"Must provide describe parameters to use\");\n            }\n\n            let keys = ['bbox', 'height', 'width', 'x', 'y'];\n            let missing = keys.find(key => !req[key]);\n            if(missing) {\n                throw new Error(`Must specify ${missing} in describe req`);\n            }\n\n            let params = {\n                srs         : 'EPSG:4326',\n                bbox        : req.bbox,\n                height      : req.height,\n                width       : req.width,\n                info_format : 'text/xml',\n                x           : req.x,\n                y           : req.y,\n                i           : req.x, //WMS 1.3.0\n                j           : req.y  //WMS 1.3.0\n            };\n\n            let url = this.baseUrl + '/' + id + '/describe';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error describing layer feature: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.describe() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param id - GeoPlatform Layer identifier\n     * @param params describing layer request to validate\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving empty if successful or a message if failed\n     */\n    validate(id : string, params : any, options ?: any) : Promise<any> {\n\n        return Promise.resolve( params )\n        .then( params => {\n\n            if(!params) {\n                throw new Error(\"Must provide parameters to use in layer validation\");\n            }\n\n            let url = this.baseUrl + '/' + id + '/validate';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error validating layer request: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('LayerService.describe() - ' + err.message);\n            throw err;\n        });\n    }\n\n}\n\nexport default LayerService;\n","\n\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport Query from '../shared/query';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Service service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate service objects.\n *\n * @see ItemService\n */\n\nclass ServiceService extends ItemService {\n\n    constructor(url:string, httpClient:GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl:string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/services';\n    }\n\n\n    /**\n     * Fetch metadata from the specified GeoPlatform Service's\n     * web-accessible implementation using either GetCapabilities\n     * or ESRI documentInfo.\n     * @param service - GeoPlatform Service object\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving service metadata\n     */\n    about( service : any, options ?: any ) : Promise<any> {\n\n        return Promise.resolve( service )\n        .then( svc => {\n            if(!svc)\n                throw new Error(\"Must provide service to get metadata about\");\n            let opts = this.buildRequest({\n                method:'POST', url:this.baseUrl + '/about', data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error describing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.about() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n\n    /**\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service types\n     */\n    types (options ?: any) : Promise<any> {\n\n        let query = new Query()\n        .types(ItemTypes.STANDARD)\n        .resourceTypes('ServiceType')\n        .pageSize(50)\n        .getQuery();\n\n        return Promise.resolve( query )\n        .then( (params) => {\n            let url = this.apiBase + '/api/items';\n            let opts = this.buildRequest({\n                method:'GET', url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response => response.results)\n        .catch(e => {\n            let err = new Error(`Error fetching service types: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.types() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param service - GP Service definition\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving imported service\n     */\n    import (service : any, options ?: any) : Promise<any> {\n\n        return Promise.resolve( service )\n        .then( svc => {\n            let url = this.baseUrl + '/import';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error importing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.import() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param id - identifier of GP service to harvest layers for\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service layers\n     */\n    harvest (id : string, options ?: any) : Promise<any> {\n\n        return Promise.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/harvest';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error harvesting layers from service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.harvest() - ' + err.message);\n            throw err;\n        });\n\n    }\n\n    /**\n     * @param id - identifier of GP service to live test\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service statistics\n     */\n    liveTest (id : string, options ?: any) : Promise<any> {\n\n        return Promise.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/test';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error testing service: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.liveTest() - '  + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param id - identifier of GP service to fetch statistics about\n     * @param options - optional set of request options to apply to request\n     * @return Promise resolving service statistics\n     */\n    statistics (id : string, options ?: any) : Promise<any> {\n        return Promise.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/statistics';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error getting service statistics: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('ServiceService.statistics() - ' + err.message);\n            throw err;\n        });\n    }\n\n}\n\nexport default ServiceService;\n","\nimport ItemService from './item';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass GalleryService extends ItemService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/galleries';\n    }\n\n    addItem (galleryId : string, itemObj : any, options ?: any) : Promise<any> {\n        return Promise.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + galleryId + '/items';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data: itemObj, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(\"Error adding item: \" + e.message);\n            Object.assign(err, e);\n            this.logError('GalleryService.addItem() - ' + err.message);\n            throw err;\n        });\n    }\n\n    removeItem( galleryId : string, itemId : any, options ?: any) : Promise<any> {\n        return Promise.resolve( this.baseUrl + '/' + galleryId + '/items/' + itemId )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:'DELETE', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .then( () =>true)\n        .catch(e => {\n            let err = new Error(\"Error adding item: \" + e.message);\n            Object.assign(err, e);\n            this.logError('GalleryService.addItem() - '+ err.message);\n            throw err;\n        });\n    }\n\n}\n\nexport default GalleryService;\n","\nimport Config from '../shared/config';\nimport GPHttpClient from '../http/client';\nimport BaseService from './base';\n\n\nclass UtilsService extends BaseService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n        this.setTimeout(30000);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl;\n    }\n\n    /**\n     * @param property - optional capa property to specifically request\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving capabilities object\n     */\n    capabilities (property : string|null, query : any, options ?: any) : Promise<any> {\n\n        let url = this.baseUrl + '/api/capabilities';\n        if(property)\n            url += '/' + property;\n\n        return this.createAndResolvePromise( url )\n        .then( (url) => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query||{}, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error getting capabilities: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.capabilities() - ' + err.message);\n            throw err;\n        });\n    }\n\n    /**\n     * @param file\n     * @param format\n     * @param options\n     * @return Promise\n     */\n    parseFile (file : any, format : string, options ?: any) : Promise<any> {\n\n        var url = this.baseUrl + '/api/utils/parse';\n\n        return this.createAndResolvePromise( url )\n        .then( url => {\n\n            let opts = this.buildRequest({\n                method:\"POST\",  url:url,\n                data: { format: format },\n                file: file,\n                formData: true,   //NodeJS (RequestJS)\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then( response => response )\n        .catch(e => {\n            let err = new Error(`Error parsing file: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.parseFile() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * Geolocate the specified argument to a set of candidate locations.\n     * @param value - text string to geolocate (name or lat,lng)\n     * @param options - optional config to send with http request\n     * @return Promise resolving an array of geocoded results\n     */\n    locate(value : any, options ?: any) : Promise<any> {\n\n        var url = this.baseUrl + '/api/utils/gazetteer';\n        return this.createAndResolvePromise(url)\n        .then( url => {\n            let opts = this.buildRequest({\n                method: 'GET',\n                url: url,\n                params: { location: value },\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then(response => response)\n        .catch(e => {\n            let err = new Error(`Error resolving location: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.locate() - ' + err.message);\n            throw err;\n        });\n    }\n\n\n    /**\n     * Upload a file to store within the GeoPlatform for association with\n     * one or more portfolio Assets.\n     *\n     * @param file File to store\n     * @param format string media type of the file being stored\n     * @param options optional\n     * @return Promise resolving metadata for stored content\n     */\n    store (file : any, format : string, options ?: any) : Promise<any> {\n\n        var url = this.baseUrl + '/api/store';\n\n        return this.createAndResolvePromise( url )\n        .then( url => {\n\n            let opts = this.buildRequest({\n                method:\"POST\",\n                url:url,\n                data: { format: format },\n                file: file,\n                formData: true,   //NodeJS (RequestJS)\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then( response => response )\n        .catch(e => {\n            let err = new Error(`Error uploading file for storage: ${e.message}`);\n            Object.assign(err, e);\n            this.logError('UtilsService.store() - ' + err.message);\n            throw err;\n        });\n    }\n\n}\n\nexport default UtilsService;\n","\n\nimport BaseService from './base';\nimport GPHttpClient from '../http/client';\n\n/**\n * GeoPlatform Association service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate association objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass AssociationService extends BaseService {\n\n    constructor(url:string, httpClient:GPHttpClient) {\n        super(url, httpClient);\n    }\n\n\n    /**\n     * @param itemId - identifier of item to fetch associations for\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving array of associated items of the item in question\n     */\n    search (itemId : string, params ?: any, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( itemId )\n        .then( id => {\n\n            if(!id) throw new Error(\"Must specify a GeoPlatform resource for which to search associations\");\n\n            let url = this.baseUrl + '/' + id + '/associations';\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url:url,\n                params: params || {},\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching associations for item ${itemId}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError(`AssociationService.search(${itemId}) - ${err.message}`);\n            throw err;\n        });\n    }\n\n    /**\n     * @param itemId - identifier of item\n     * @param associationId - identifier of association to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving association\n     */\n    get (itemId : string, associationId : string, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( itemId )\n        .then( itemId => {\n\n            if(!itemId || !associationId)\n                throw new Error(\"Must specify both the GeoPlatform resource id and its association's id\");\n\n            let url = this.baseUrl + '/' + itemId + '/associations/' + associationId;\n            let opts = this.buildRequest({ method:\"GET\", url:url, options: options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error fetching association for item ${itemId}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError(`AssociationService.get(${itemId},${associationId}) - ${err.message}`);\n            throw err;\n        });\n    }\n\n    /**\n     * @param itemId - identifier of item\n     * @param associationId - identifier of association to remove\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving empty\n     */\n    remove (itemId : string, associationId : string, options ?: any) : Promise<any> {\n\n        return this.createAndResolvePromise( itemId )\n        .then( itemId => {\n\n            if(!itemId || !associationId)\n                throw new Error(\"Must specify both the GeoPlatform resource id and its association's id\");\n\n            let url = this.baseUrl + '/' + itemId + '/associations/' + associationId;\n            let opts = this.buildRequest({ method:\"DELETE\", url:url, options: options });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`Error removing association for item ${itemId}: ${e.message}`);\n            Object.assign(err, e);\n            this.logError(`AssociationService.remove(${itemId},${associationId}) - ${err.message}`);\n            throw err;\n        });\n    }\n\n}\n\nexport default AssociationService;\n","\nimport { Item, SearchResults } from '../shared/models';\nimport ItemTypes from '../shared/types';\nimport Config from '../shared/config';\nimport GPHttpClient from '../http/client';\nimport BaseService from \"./base\";\n\nclass AgolQuery {\n\n    private _query : { [key:string]:any };\n\n    constructor() {\n        this._query = {\n            page: 0,\n            size: 10\n        };\n    }\n\n    getQuery() : { [key:string]:any } {\n        let result : { [key:string]:any } = {};\n        for(let prop in this._query) {\n            let value = this._query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n    // ---------------------------------------\n\n    q(value : string) : AgolQuery { this.setQ(value); return this; }\n    setQ(value : string) { this._query.q = value; }\n    getQ() : string { return this._query.q; }\n\n    // ---------------------------------------\n\n    types(value : string|string[]) : AgolQuery {\n        this.setTypes(value); return this;\n    }\n    setTypes(value : string|string[]) {\n        let val : string;\n        if(value && Array.isArray(value))\n            val = (value as Array<string>).join(',');\n        else val = value as string;\n        this._query.types = val;\n    }\n    getTypes() : string[] { return this._query.types; }\n\n    // ---------------------------------------\n\n    groups(value : string|string[]) : AgolQuery {\n        this.setGroups(value); return this;\n    }\n    setGroups(value : string|string[]) {\n        let val : string;\n        if(value && Array.isArray(value))\n            val = (value as Array<string>).join(',');\n        else val = value as string;\n        this._query.groups = val;\n    }\n    getGroups() : string[] { return this._query.groups; }\n\n    // ---------------------------------------\n\n    orgs(value : string|string[]) : AgolQuery {\n        this.setOrgs(value); return this;\n    }\n    setOrgs(value : string|string[]) {\n        let val : string;\n        if(value && Array.isArray(value))\n            val = (value as Array<string>).join(',');\n        else val = value as string;\n        this._query.orgs = val;\n    }\n    getOrgs() : string[] { return this._query.orgs; }\n\n    // ---------------------------------------\n\n    extent(value : any) : AgolQuery { this.setExtent(value); return this; }\n    setExtent(value : any) { this._query.bbox = value; }\n    getExtent() : any { return this._query.bbox; }\n\n    // ---------------------------------------\n\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n    sort (sort : string, order : string) : AgolQuery {\n        this.setSort(sort, order); return this;\n    }\n    /**\n     * @param sort - form of <field>,<dir> or just field name\n     * @param order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort : string, order : string) {\n         order = order || 'desc';\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this._query.sort = sort;\n    }\n    getSort() : string { return this._query.sort; }\n    getSortField() : string { return this._query.sort.split(',')[0]; }\n    getSortOrder() : boolean { return this._query.sort.split(',')[1] === 'asc'; }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param page - page of results to fetch\n     */\n    page (page : number) : AgolQuery {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page : number) {\n        if(isNaN(page) || page*1<0) return;\n        this._query.page = page*1;\n    }\n\n    getPage() : number {\n        return this._query.page;\n    }\n\n    nextPage() {\n        this.setPage(this._query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this._query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param size - page size to request\n     */\n    pageSize (size : number) : AgolQuery {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size : number) {\n        if(isNaN(size) || size*1<0) return;\n        this._query.size = size*1;\n    }\n\n    getPageSize() : number {\n        return this._query.size;\n    }\n\n}\n\n\nclass AgolService extends BaseService {\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n        this.setTimeout(30000);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/agol';\n    }\n\n    // -----------------------------------------------------------------------\n    // AGOL ORGS METHODS\n\n\n    /**\n     * @param id - identifier of AGOL organization to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    getOrg (id : string, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/orgs/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getOrg() - Error fetching org ${id}: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n    /**\n     * @param arg - either JS object of query parameters or Query instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    searchOrgs (arg : AgolQuery, options ?: any) : Promise<SearchResults> {\n\n        return this.createAndResolvePromise( arg )\n        .then( params => {\n\n            let ps = params.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url: this.baseUrl + '/orgs',\n                params: ps,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchOrgs() - Error searching orgs: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL GROUPS METHODS\n\n\n    /**\n     * @param id - identifier of AGOL group to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    getGroup (id : string, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/groups/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getGroup() - Error fetching group ${id}: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param arg - either JS object of query parameters or AgolQuery instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    searchGroups (arg : AgolQuery, options ?: any) : Promise<SearchResults> {\n\n        return this.createAndResolvePromise( arg )\n        .then( params => {\n\n            let ps = params.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url: this.baseUrl + '/groups',\n                params: ps,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchGroups() - Error searching groups: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL ITEMS METHODS\n\n    /**\n     * @param id - identifier of AGOL item to fetch\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving Item object or an error\n     */\n    getItem (id : string, options ?: any) : Promise<Item> {\n\n        return this.createAndResolvePromise( id )\n        .then( (id : string) => {\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url:this.baseUrl + '/items/' + id,\n                options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getItem() - Error fetching item ${id}: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param arg - either JS object of query parameters or AgolQuery instance\n     * @param options - optional set of request options to apply to xhr request\n     * @return Promise resolving search results\n     */\n    searchItems (arg : AgolQuery, options ?: any) : Promise<SearchResults> {\n\n        return this.createAndResolvePromise( arg )\n        .then( params => {\n\n            let ps = params.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\",\n                url: this.baseUrl + '/items',\n                params: ps,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchItems() - Error searching items: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n\n    /* --------------------------- */\n\n    getAgolId (obj : any) : string|null {\n        if(!obj) return null;\n\n        if(!obj.type) return null;\n\n        if(ItemTypes.ORGANIZATION === obj.type || 'Group' === obj.type) {\n            return obj.id;\n        }\n\n        if(!obj.identifiers || !obj.identifiers.length) return null;\n        let ids = obj.identifiers.filter( (id:string) => ~id.indexOf('agol:'));\n        if(!ids.length) return null;\n        return ids[0].replace('agol:','');\n    }\n\n}\n\nexport {\n    AgolService as default,\n    AgolService,\n    AgolQuery\n};\n","\n\nimport ItemTypes from '../shared/types';\n\n\nconst Categories : {[key:string]:string} = {\n    UNKNOWN:         'Unknown Category',\n    DATASET:         'Dataset',\n    SERVICE:         'Service',\n    LAYER:           'Layer',\n    MAP:             'Map',\n    GALLERY:         'Gallery',\n    COMMUNITY:       'Community',\n    CONTACT:         'Contact',\n    ORGANIZATION:    'Organization',\n    CONCEPT:         'Concept',\n    CONCEPT_SCHEME:  'Concept Scheme',\n    APPLICATION:     'Application',\n    TOPIC:           'Topic',\n    WEBSITE:         'WebSite',\n    IMAGE_PRODUCT:   'Image Product',\n    RIGHTS_STATEMENT:'RightsStatement',\n    KNOWLEDGE_GRAPH: 'Knowledge Graph',\n    USER:            'User',\n    COMMUNITY_POST:  'Community Post',   //post within a community portal\n    COMMUNITY_PAGE:  'Community Page',   //page within a community portal\n    APP_PAGE:        'Application Page', //page/view within a client application\n};\n\nconst Events : {[key:string]:string} = {\n    ACCESSED:   'Accessed',  //related item was accessed using API\n    DISPLAYED:  'Displayed', //related item was displayed in a native form (map)\n    VIEWED:     'Viewed',    //related item was viewed in general form (metadata)\n    CREATED:    'Created',\n    EDITED:     'Edited',\n    DELETED:    'Deleted',\n    CLONED:     'Cloned',\n    ADDED:      'Added',    //item was added to another (ie, layer on map)\n    REMOVED:    'Removed',  //item was removed from another (ie, item from gallery)\n    EXPORTED:   'Exported',\n    IMPORTED:   'Imported'\n};\n\n\nfunction getCategory(type : string) : string {\n    let result = Categories.UNKNOWN;\n    if(type) {\n        let cats : string[] = Object.keys(Categories).map((k:string)=>Categories[k]);\n        //if existing category was specified\n        if(~cats.indexOf(type))\n            return type;\n        //if an ItemType with prefix was specified (strip off prefix)\n        else if(~type.indexOf(':')) {\n            let cat = type.split(':')[1];\n            if(~cats.indexOf(cat))\n                return cat;\n        }\n    }\n    return result;\n}\n\n\n\n/**\n *\n */\nclass Event {\n\n    private category : string;\n    private type : string;\n    private item : any = null;\n    private related : any = null;\n\n    constructor(category : string, type : string, item ?: any, related ?: any) {\n        if(!category || ! type) {\n            throw new Error(\"TrackingService Event - Must specific an event \" +\n            \"category and event type when constructing events\");\n        }\n        this.category = category;\n        this.type = type;\n        this.setItem(item);\n        this.setRelated(related);\n    }\n    getCategory() : string { return this.category; }\n    getType() : string { return this.type; }\n    getItem() : any { return this.item; }\n    setItem(item : any) { this.item = item ? (item.id || item) : null; }\n    getRelated() : any { return this.related; }\n    setRelated(related : any) {\n        this.related = related ? (related.id || related) : null;\n    }\n}\n\n\n\n/**\n * @param eventType - type of event being created\n * @param item - GeoPlatform Item instance\n * @return list of event objects\n */\nfunction TrackingEventFactory(eventType : string, item : any) : Event[] {\n    let result : Event[] = [] as Event[];\n    if(eventType && item && item.type) {\n        if(ItemTypes.MAP === item.type) {\n            result.push( new Event(Categories.MAP, eventType, item) );\n            if(Events.DISPLAYED === eventType) {\n\n                item.layers.forEach( (layerState : any) => {\n                    if(layerState.layer) {\n                        let layerEvents = TrackingEventFactory(eventType, layerState.layer)\n                            .filter(e=>e!==null);\n                        if(layerEvents && layerEvents.length) {\n                            result = result.concat(layerEvents);\n                        }\n                    }\n                });\n\n                if(item.baseLayer) {\n                    let baseEvents = TrackingEventFactory(eventType, item.baseLayer)\n                        .filter(e=>e!==null);\n                    if(baseEvents && baseEvents.length)\n                        result = result.concat( baseEvents );\n                }\n            }\n\n        } else if(ItemTypes.LAYER === item.type) {\n            result.push( new Event(Categories.LAYER, eventType, item) );\n            if(Events.DISPLAYED === eventType && item.services && item.services.length) {\n                result.push( new Event(Categories.SERVICE, eventType, item.services[0]) );\n            }\n        } else {\n            let category = getCategory(item.type);\n            result.push( new Event(category, eventType, item) );\n        }\n    }\n    // else {\n    //     if(!event) console.log(\"Missing event\");\n    //     if(!item) console.log(\"Missing item\");\n    //     if(!item.type) console.log(\"Missing item type\");\n    // }\n    return result;\n}\n\n\n\n\n\n/**\n *\n */\nclass DefaultTrackingServiceProvider {\n    constructor() {}\n    logEvent(\n        category : string,\n        event : string,\n        item ?: any,\n        // @ts-ignore\n        related ?: any\n    ) {\n        console.log( \"Event (\" + category + \") - \" + event + \" : \" + item);\n    }\n    logPageView( view, data ) {\n        console.log(\"Page View \" + view + (data ? \" : \" + JSON.stringify(data) : '') );\n    }\n    logSearch(params : string, resultCount : string|number) {\n        console.log( \"Query : \" + JSON.stringify(params) + \" found \" + resultCount+ \" matches\");\n    }\n}\n\n\n\n\n\n\n/**\n * TrackingService\n *\n * Service for logging events related to usage of the GeoPlatform and its data\n *\n * Example:\n *\n *   import { TrackingService, EventCategories, EventTypes } from 'geoplatform.client';\n *\n *   let tracker = new TrackingService();\n *   tracker.setProvider( ... );\n *   tracker.event( Event.of(EventCategories.MAP, EventTypes.VIEWED, map) );\n *\n * Multi-event example:\n *\n *   import {\n *      TrackingService, TrackingEventCategories, TrackingEventTypes, TrackingEventFactory\n *   } from 'geoplatform.client';\n *\n *   let tracker = new TrackingService();\n *   tracker.setProvider( ... );\n *\n *   let events = [\n *       TrackingEvent.of( TrackingCategories.MAP, TrackingEventTypes.VIEWED, this.map )\n *       TrackingEvent.of( TrackingCategories.LAYER, TrackingEventTypes.VIEWED, this.map.baseLayer )\n *   ];\n *   tracker.event(events);\n *\n *   //OR use the event factory:\n *   tracker.event( TrackingEventFactory(EventTypes.VIEWED, this.map) );\n */\nclass TrackingService {\n\n    private provider : any = null;\n\n    constructor(options ?: any) {\n        if(options && typeof(options) === 'object')\n            Object.assign(this, options);\n\n        if(!this.provider)\n            this.setProvider(new DefaultTrackingServiceProvider());\n    }\n\n    /**\n     * @param provider -\n     */\n    setProvider(provider : any) {\n        if(provider)\n            this.provider = provider;\n    }\n\n    /**\n     * @param event - event to log\n     * @return TrackingService\n     */\n    event( event : Event ) : TrackingService {\n        this.logEvent( event );\n        return this;\n    }\n\n    /**\n     * @param event - event to log\n     */\n    logEvent( event : Event|Event[]) {\n        if(!this.provider || !this.provider.logEvent || !event) return;\n\n        if(Array.isArray(event)) {\n            let events : Event[] = event as Event[];\n            events.forEach( (evt : Event) => this.logEvent(evt) );\n\n        } else {\n            let evt : Event = event as Event;\n            try {\n                this.provider.logEvent(\n                    evt.getCategory(),\n                    evt.getType(),\n                    evt.getItem(),\n                    evt.getRelated()\n                );\n            } catch(e) {\n                console.log(\n                    \"TrackingService.logEvent() - Error logging event (\" +\n                    evt.getCategory() + \", \" + evt.getType() + \", \" +\n                    evt.getItem() + \") - \" + e.message\n                );\n            }\n        }\n    }\n\n\n    /**\n     * @param view - name of the view being activated\n     * @param data - additional context to supply for the event\n     * @return TrackingService\n     * @deprecated use svc.event( new Event(EventCategories.APP_PAGE, EventTypes.VIEWED, pageId) )\n     */\n    pageView( view : string, data : any) {\n        this.logPageView(view, data);\n        return this;\n    }\n\n    /**\n     * @param view - name of the view being activated\n     * @param data - additional context to supply for the event\n     * @deprecated use svc.logEvent( new Event(EventCategories.APP_PAGE, EventTypes.VIEWED, pageId) )\n     */\n    logPageView(\n        view : string,\n        // @ts-ignore\n        data ?: any\n    ) {\n        if(this.provider && this.provider.logPageView) {\n            this.provider.logPageView(view, data);\n        } else {\n            this.logEvent( new Event(Categories.APP_PAGE, Events.VIEWED, view) );\n        }\n    }\n\n    /**\n     * @param params\n     * @param resultCount\n     */\n    logSearch (params : any, resultCount : string|number) {\n        if(this.provider.logSearch)\n            this.provider.logSearch(params, resultCount);\n    }\n\n}\n\n\nexport {\n    Event as TrackingEvent,\n    TrackingService,\n    Categories as TrackingCategories,\n    Events as TrackingTypes,\n    TrackingEventFactory\n};\n","\nimport Config from '../shared/config';\nimport KGQuery from '../shared/kg-query';\nimport GPHttpClient from '../http/client';\n\nimport BaseService from './base';\n\n\n\nclass KGService extends BaseService {\n\n    // @ts-ignore\n    // private apiBase : string;\n    // @ts-ignore\n    // private baseUrl : string;\n    // private client : GPHttpClient;\n    // private timeout : number = 30000;\n    // private httpMethods : string[] = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n\n    constructor(url : string, httpClient : GPHttpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl : string) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/recommender';\n    }\n\n    /**\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving recommended concepts as search results\n     */\n    suggest (query : KGQuery, options ?: any) : Promise<any> {\n\n        let url = this.baseUrl + '/suggest';\n        return this._search(url, query, options)\n        .catch(e => {\n            this.logError('KGService.suggest() - ' + e.message);\n            let err = new Error(`Error suggesting concepts: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n    /**\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving concept types as search results\n     */\n    types (query : KGQuery, options ?: any) : Promise<any> {\n        let url = this.baseUrl + '/types';\n        return this._search(url, query, options)\n        .catch(e => {\n            this.logError('KGService.types() - ' + e.message);\n            let err = new Error(`Error searching types: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n\n    /**\n     * @param query - optional query parameters to include with request\n     * @param options - optional config to send with http request\n     * @return Promise resolving concept sources as search results\n     */\n    sources (query : KGQuery, options ?: any) : Promise<any> {\n        let url = this.baseUrl + '/sources';\n        return this._search(url, query, options)\n        .catch(e => {\n            this.logError('KGService.sources() - ' + e.message);\n            let err = new Error(`Error searching sources: ${e.message}`);\n            Object.assign(err, e);\n            throw err;\n        });\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n\n    /**\n     * internal method used by exposed methods\n     */\n    _search (url : string, query : KGQuery, options ?: any) : Promise<any> {\n        return this.createAndResolvePromise( url )\n        .then( (url) => {\n            let q : { [key:string]:any } = query.getQuery();\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:q, options:options\n            });\n            return this.execute(opts);\n        });\n    }\n\n\n\n    // /**\n    //  * @param method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n    //  * @param url - destination of xhr request\n    //  * @param params - object to be sent with request as query parameters\n    //  * @param data - object to be sent with request as body\n    //  * @param options - optional object defining request options\n    //  * @return request options for xhr\n    //  */\n    // buildRequest (options : {[key:string]:any}) : {[key:string]:any} {\n    //\n    //     if(this.httpMethods.indexOf(options.method)<0)\n    //         throw new Error(`Unsupported HTTP method ${options.method}`);\n    //\n    //     if(!options.url)\n    //         throw new Error(`Must specify a URL for HTTP requests`);\n    //\n    //     options.timeout = this.timeout || Config.timeout || 30000;\n    //\n    //     return this.createRequestOpts(options);\n    // }\n    //\n    // createRequestOpts(options : {[key:string]:any}) : {[key:string]:any} {\n    //     return this.client.createRequestOpts(options);\n    // }\n    //\n    // execute(opts : {[key:string]:any}) : Promise<any> {\n    //     return this.client.execute(opts)\n    //     .catch(e => {\n    //         if(e === null || typeof(e) === 'undefined') {\n    //             e = new Error(\"KGService.execute() - Request failed but didn't return an \" +\n    //             \"error. This is most likely because the request timed out\");\n    //         }\n    //         throw e;\n    //     });\n    // }\n\n}\n\nexport default KGService;\n","\nimport GPHttpClient from '../http/client';\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport LayerService from './layer';\nimport ServiceService from './service';\nimport GalleryService from './gallery';\nimport DatasetService from './dataset';\nimport MapService from './map';\n\n/**\n * @param arg - string type or object with type property\n * @param baseUrl - base endpoint of GeoPlatform API\n * @return ItemService\n */\nconst ServiceFactory = function(arg : any, baseUrl : string, httpClient : GPHttpClient) : any {\n    let type = (typeof(arg) === 'string') ?\n        arg : (arg && arg.type ? arg.type : null);\n    if(!type) throw new Error(\"Must provide a type or object with a type specified\");\n    if(!baseUrl) throw new Error(\"Must provide a base url\");\n    if(!httpClient) throw new Error(\"Must provide an http client to use to make requests\");\n    switch(type) {\n        case ItemTypes.LAYER:   return new LayerService(  baseUrl, httpClient);\n        case ItemTypes.SERVICE: return new ServiceService(baseUrl, httpClient);\n        case ItemTypes.MAP:     return new MapService(    baseUrl, httpClient);\n        case ItemTypes.GALLERY: return new GalleryService(baseUrl, httpClient);\n        case ItemTypes.DATASET: return new DatasetService(baseUrl, httpClient);\n        default:                return new ItemService(   baseUrl, httpClient);\n    }\n};\n\nexport default ServiceFactory;\n","\n/*\n    Version of the library exposed to consumers.\n    Long-term this value should be auto-set to be whatever is set in package.json\n */\nexport const ClientVersion = \"0.3.0\";\n\nimport Polyfills from \"./shared/polyfills\";\nPolyfills();\n\nexport * from './shared/index';\nexport * from './http/index';\nexport * from './services/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["QueryParameters","SORT_OPTIONS_DEFAULT","Polyfills"],"mappings":"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"}