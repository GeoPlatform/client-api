{"version":3,"file":"geoplatform.client.js","sources":["../../src/http/client.js","../../src/http/jq.js","../../src/http/ng.js","../../src/http/node.js","../../src/shared/types.js","../../src/services/base.js","../../src/models/properties.js","../../src/models/base.js","../../src/models/item.js","../../src/models/dataset.js","../../src/models/service.js","../../src/models/layer.js","../../src/models/map.js","../../src/models/gallery.js","../../src/models/community.js","../../src/models/contact.js","../../src/models/organization.js","../../src/models/concept.js","../../src/models/concept-scheme.js","../../src/models/factory.js","../../src/models/search-results.js","../../src/services/item.js","../../src/services/dataset.js","../../src/services/map.js","../../src/services/layer.js","../../src/shared/parameters.js","../../src/shared/facets.js","../../src/shared/query.js","../../src/shared/query-factory.js","../../src/services/service.js","../../src/services/gallery.js","../../src/services/community.js","../../src/services/utils.js","../../src/shared/kg-query.js","../../src/services/kg.js","../../src/shared/classifiers.js","../../src/services/factory.js","../../src/shared/config.js"],"sourcesContent":["\n\nclass HttpClientBase {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options) {\n        options = options || {};\n        this.setTimeout(options.timeout||10000);\n        this.setAuthToken(options.token);\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n        throw new Error(\"HttpClientBase.createRequestOpts() - Function must be overridden by a sub-class\");\n    }\n\n\n    execute(opts) {\n        throw new Error(\"HttpClientBase.execute() - Function must be overridden by a sub-class\");\n    }\n\n}\n\nexport default HttpClientBase;\n","\nimport Q from 'q';\nimport HttpClientBase from './client';\n\nclass JQueryHttpClient extends HttpClientBase {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true)\n            opts.dataType = 'json';\n\n        if(options.params) {\n            opts.data = options.params;\n            opts.processData = true;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n            opts.processData = options.processData || false;\n            opts.contentType = 'application/json';\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n\n    execute(opts) {\n\n        if(typeof(jQuery) === 'undefined') {\n            throw new Error(\"jQuery is not available. Ensure it is included in your application\");\n        }\n        let d = Q.defer();\n        opts.success = function(data) { d.resolve(data); };\n        opts.error = function(xhr, status, message) { d.reject(new Error(message)); };\n        jQuery.ajax(opts);\n        return d.promise;\n    }\n\n}\n\nexport default JQueryHttpClient;\n","\nimport Q from 'q';\nimport HttpClientBase from './client';\n\nclass NGHttpClient extends HttpClientBase {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     * @param {Object} options.$http - angular $http service instance\n     */\n    constructor(options) {\n        super(options);\n        if(typeof(angular) === 'undefined')\n            throw new Error(\"Angular not defined\");\n        if(options.$http)\n            this.$http = options.$http;\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true)\n            opts.dataType = 'json';\n\n        if(options.params) {\n            opts.params = options.params;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n        }\n\n        //set authorization token if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n                opts.useXDomain = true;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n    execute(opts) {\n\n        if(typeof(angular) === 'undefined')\n            throw new Error(\"Angular is not defined, ensure you have included it as a dependency in your application\");\n\n        let $http = this.$http || angular.injector(['ng']).get('$http');\n        return Q.resolve( $http )\n        .then($http => {\n            if(typeof($http) === 'undefined')\n                throw new Error(\"Angular $http not resolved\");\n\n            // console.log(opts);\n            return $http(opts);\n        })\n        .then(response=>response.data)\n        .catch(response=>Q.reject(response.data));\n    }\n\n}\n\nexport default NGHttpClient;\n","\nimport Q from 'q';\nimport HttpClientBase from './client';\n\nclass NodeHttpClient extends HttpClientBase {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            json: false !== options.json,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.params) {\n            opts.qs = options.params;\n        }\n\n        if(options.file) {\n            const fs = require('fs');\n            if(!fs) throw new Error(\"Module 'fs' not available\");\n            opts.formData = {\n                file: {\n                    value:  fs.createReadStream(options.file.path),\n                    options: {\n                        filename: options.file.originalFilename\n                    }\n                }\n            };\n            Object.assign(opts.formData, options.data||{});\n\n        } else if(options.data) {\n            if(options.formData) {\n                opts.formData = options.data;\n            } else {\n                opts.body = options.data;\n            }\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.auth = { 'bearer': token };\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        // console.log(JSON.stringify(opts));\n\n        return opts;\n    }\n\n\n\n    /**\n     *\n     */\n    execute(options) {\n        let deferred = Q.defer();\n\n        const request = require('request');\n        if(!request) {\n            throw new Error(\"Module 'request' not available\");\n        }\n        // require('request-debug')(request);\n\n        request(options, (error, response, body) => {\n            this.checkAndHandleError(error, response)\n            .then( () =>  {\n                if(options.json === false)\n                    deferred.resolve( response );\n                else\n                    deferred.resolve( body );\n            })\n            .catch( e => deferred.reject(e) );\n        });\n        return deferred.promise;\n    }\n\n\n    /**\n     *\n     */\n    checkAndHandleError (error, response) {\n\n        let props = {\n            message: null,\n            error: null,    //error type\n            status: 200\n        };\n\n        if(error) {\n            // Logger.debug(\"Error generated by request library: \" + error.code);\n\n            if(error.code === 'ETIMEDOUT' || error.code === 'ESOCKETTIMEDOUT') {\n\n                props.status = 500;\n                props.error = \"Connection Timeout\";\n                props.message = \"The response from the service took too long to read\";\n\n                if(error.connect === true) {\n                    props.message = \"Unable to establish a connection to the service\";\n                }\n\n            } else {\n                return Q.reject(error);\n            }\n\n        } else if(response.statusCode < 200 || response.statusCode > 204) {\n\n            // Logger.debug('Error returned by remote endpoint (' + response.statusCode + ')');\n            // Logger.debug(JSON.stringify(response));\n\n            props.status = response.statusCode;\n\n            if(response.body && typeof(response.body) === 'object') {\n                props = response.body;\n                props.status = props.status || response.statusCode;\n                props.message = props.message || \"An error occurred communicating with service\";\n\n                if(response.statusCode === 409) {\n                    let sidx = response.body.message.indexOf(\" \");\n                    let eidx = response.body.message.indexOf(' already exists');\n                    if(sidx >= 0 && eidx > sidx) {\n                        props.item = response.body.message.substring(sidx+1, eidx);\n                    }\n                }\n\n            } else {\n\n                switch(response.statusCode) {\n                    case 404 :\n                        props.error = \"Not Found\";\n                        props.message = response.request.uri.pathname + \" cannot be found\";\n                        break;\n                    case 401 :\n                        props.error = \"Unauthenticated\";\n                        props.message = \"You are not authenticated\";\n                        break;\n                    case 403 :\n                        props.error = \"Unauthorized\";\n                        props.message = \"You are not authorized to access \" + response.request.uri.pathname;\n                        break;\n                    case 409 :\n                        props.error = \"Conflict\";\n                        props.message = \"Item already exists\";\n\n                        // pattern received is: { ..., message: 'Resource <identifier> already exists', ... }\n                        try {\n                            let json = JSON.parse(response.body);\n                            let sidx = json.message.indexOf(\" \");\n                            let eidx = json.message.indexOf(' already exists');\n                            if(sidx >= 0 && eidx > sidx) {\n                                props.item = json.message.substring(sidx+1, eidx);\n                            }\n                        } catch( e ) {\n                            message += '.  Unable to extract existing identifier from service response';\n                        }\n                        break;\n\n                    default:\n\n                        try {\n                            let json = JSON.parse(response.body);\n                            props = json;\n                            props.status = response.statusCode;\n                            // Logger.debug(\"PARSED ERROR: \" + JSON.stringify(props));\n\n                        } catch (e) {\n                            props.error = \"Server Error\";\n                            props.message = response.body;\n                            // Logger.debug(\"DEFAULTED ERROR: \" + JSON.stringify(props));\n                        }\n                }\n\n            }\n\n        }\n\n        if( props.status < 200 || props.status > 204 ) {\n\n            props.error = props.error || \"Server Error\";\n            props.status = props.status || response.statusCode;\n            props.message = props.message || \"An error occurred communicating with service\";\n\n            let err = new Error(props.message);\n            Object.assign(err, props);\n\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err);\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + JSON.stringify(err));\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err.message);\n            return Q.reject(err);\n        }\n\n        return Q.resolve();\n    }\n\n}\n\n\nexport default NodeHttpClient;\n","\n\nexport default {\n    DATASET         : \"dcat:Dataset\",\n    SERVICE         : \"regp:Service\",\n    LAYER           : \"Layer\",\n    MAP             : \"Map\",\n    GALLERY         : \"Gallery\",\n    CONTACT         : \"vcard:VCard\",\n    ORGANIZATION    : \"org:Organization\",\n    COMMUNITY       : 'Community',\n    CONCEPT         : \"skos:Concept\",\n    CONCEPT_SCHEME  : \"skos:ConceptScheme\",\n    STANDARD        : 'dct:Standard'\n};\n","\nimport Q from 'q';\n\n/**\n * BaseService\n * service for working with the GeoPlatform API to\n * retrieve and manipulate items.\n *\n * Ex Searching Items\n *      let params = { q: 'test' };\n *      itemService.search(params).then(response=>{\n *          console.log(response.results.length + \" of \" + response.totalResults);\n *      }).catch(e=>{...});\n *\n * Ex Fetch Item:\n *      itemService.get(itemId).then(item=>{...}).catch(e=>{...});\n *\n * Ex Saving Item:\n *      itemService.save(item).then(item=>{...}).catch(e=>{...});\n *\n * Ex Deleting Item:\n *      itemService.remove(itemId).then(()=>{...}).catch(e=>{...});\n *\n * Ex Patching Item:\n *      itemService.patch(itemId,patch).then(item=>{...}).catch(e=>{...});\n *\n */\nclass BaseService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.setTimeout(10000);\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/items';\n    }\n\n    /**\n     * @param {number} milliseconds - override environment variable timeout\n     */\n    setTimeout(milliseconds) {\n        this.timeout = milliseconds;\n    }\n\n    /**\n     * @param {Error} e - error generated by the api\n     * @param {string} prefixMsg - label or message to prepend to the error's message\n     * @return {Promise} rejecting with the updated error\n     */\n    _onError (e, prefixMsg) {\n\n        let code = e.statusCode || e.status || 500;\n        let title = e.error;\n        let msg = e.message;\n        if(!msg) {\n            if(code === 400) msg = \"The request was invalid\";\n            else if(code === 401) msg = \"You must sign in before making this request\";\n            else if(code === 403) msg = \"You are not authorized to make this request\";\n            else if(code === 404) msg = \"The specified resource was not found\";\n            else if(code === 409) msg = \"The resource already exists\";\n            else msg = \"The request resulted in an unspecified error\";\n        }\n\n        e.message = prefixMsg ? (prefixMsg + \": \" + msg) : msg;\n        e.status = code;\n        e.error = title;\n        return Q.reject(e);\n    }\n\n}\n\nexport default BaseService;\n","\nimport ItemTypes from '../shared/types';\n\n\nconst ItemProperties = {\n\n    //all Items have the following properties\n    ID              : { key: 'id',            forType:'Item' },\n    URI             : { key: 'uri',           forType:'Item' },\n    TYPE            : { key: 'type',          forType:'Item' },\n    CREATED         : { key: '_created',      forType:'Item' },\n    MODIFIED        : { key: 'modified',      forType:'Item' },\n    LAST_MODIFIED_BY: { key: 'lastModifiedBy', forType:'Item' },\n    IDENTIFIERS     : { key: 'identifiers',   forType:'Item', multi: true },\n    CREATED_BY      : { key: 'createdBy',     forType:'Item' },\n    LABEL           : { key: 'label',         forType:'Item' },\n    RESOURCE_TYPES  : { key: 'resourceTypes', forType:'Item',   multi: true, type: 'object'  },\n\n    //all Assets have the following properties\n    TITLE           : { key: 'title'                                      },\n    DESCRIPTION     : { key: 'description'                                },\n    ALTERNATE_TITLES: { key: 'alternateTitles',               multi: true },\n    KEYWORDS        : { key: 'keywords',                      multi: true },\n    GEOGRAPHIC_EXTENT: { key: 'extent',       type: \"object\"              },\n    TEMPORAL_EXTENT : { key: 'temporal',      type: \"object\"              },\n    STATISTICS      : { key: 'statistics',    type: 'object'              },\n    LANDING_PAGE    : { key: 'landingPage'                                },\n    STATUS          : { key: 'status'                                     },\n    VISIBILITY      : { key: 'visibility'                                 },\n    THEMES          : { key: 'themes',        type: 'item',   multi: true },\n    PUBLISHERS      : { key: 'publishers',    type: 'item',   multi: true },\n    CONTACTS        : { key: 'contacts',      type: 'item',   multi: true },\n    CONTRIBUTORS    : { key: 'contributors',  type: 'item',   multi: true },\n    DISTRIBUTIONS   : { key: 'distributions', type: 'object', multi: true },\n    CLASSIFIERS     : { key: 'classifiers',   type: 'object'              },\n    ACCESS_RIGHTS   : { key: 'accessRights',  type: 'object', multi: true },\n    RELATED_RESOURCES : { key: 'related',     type: 'object', multi: true },\n    USED_BY         : { key: 'usedBy',        type: 'item',   multi: true },\n    PURPOSE         : { key: 'purpose'                                    },\n\n    //Services also have these\n    HREF            : { key: 'href' },\n    SERVICE_TYPE    : { key: 'serviceType',     type: 'object' },\n    DATASETS        : { key: 'datasets',        type: 'item', multi: true },\n\n    //Layers also have these\n    LAYER_TYPE      : { key: 'layerType' },\n    LAYER_NAME      : { key: 'layerName' },\n    LEGEND          : { key: 'legend',      type: 'object'               },\n    SERVICES        : { key: 'services',    type: 'item', multi: true    },\n    SUPPORTED_FORMATS: { key: 'supportedFormats',         multi: true    },\n    MIN_SCALE       : { key: 'minScale'                                  },\n    MAX_SCALE       : { key: 'maxScale'                                  },\n    LEGEND          : { key: 'legend',      type: 'object'               },\n\n    //Maps also have these\n    BASE_LAYER      : { key: 'baseLayer',   type: 'item'                 },\n    MAP_LAYERS      : { key: 'layers',      type: 'object', multi: true  },\n    THUMBNAIL       : { key: 'thumbnail',   type: \"object\"               },\n    ANNOTATIONS     : { key: 'annotations', type: 'object'               },\n\n    //Galleries have these\n    GALLERY_ITEMS   : { key: 'items',       type: 'object',  multi: true },\n\n    //Concepts have these\n    CONCEPT_SCHEME  : { key: 'scheme', type: 'item'                      },\n\n    //Contacts have these\n    FULL_NAME       : { key: 'fullName'     },\n    ORGANIZATION_NAME : { key: 'orgName'    },\n    POSITION_TITLE  : { key: 'positionTitle' },\n    EMAIL           : { key: 'email'        },\n    TELEPHONE       : { key: 'tel'          },\n    ADDRESS         : { key: 'address', type: 'object'  },\n\n    //Organizations have these\n    NAME                : { key: 'name' },\n    PARENT_ORGANIZATION : { key: 'subOrganizationOf', type: 'item' }\n\n};\n\n\n\n\n\n//all Items have the following properties\nconst ItemProps = [\n    ItemProperties.ID,\n    ItemProperties.URI,\n    ItemProperties.TYPE,\n    ItemProperties.CREATED,\n    ItemProperties.MODIFIED,\n    ItemProperties.LAST_MODIFIED_BY,\n    ItemProperties.IDENTIFIERS,\n    ItemProperties.CREATED_BY,\n    ItemProperties.LABEL,\n    ItemProperties.RESOURCE_TYPES\n];\n\n//all Assets have the following properties\nconst AssetProps = ItemProps.concat([\n    ItemProperties.TITLE,\n    ItemProperties.DESCRIPTION,\n    ItemProperties.ALTERNATE_TITLES,\n    ItemProperties.KEYWORDS,\n    ItemProperties.GEOGRAPHIC_EXTENT,\n    ItemProperties.TEMPORAL_EXTENT,\n    ItemProperties.STATISTICS,\n    ItemProperties.LANDING_PAGE,\n    ItemProperties.STATUS,\n    ItemProperties.VISIBILITY,\n    ItemProperties.THEMES,\n    ItemProperties.PUBLISHERS,\n    ItemProperties.CONTACTS,\n    ItemProperties.CONTRIBUTORS,\n    ItemProperties.DISTRIBUTIONS,\n    ItemProperties.CLASSIFIERS,\n    ItemProperties.ACCESS_RIGHTS,\n    ItemProperties.RELATED_RESOURCES,\n    ItemProperties.USED_BY,\n    ItemProperties.PURPOSE\n]);\n\n\n\nconst ServiceProps = AssetProps.concat([\n    ItemProperties.HREF,\n    ItemProperties.SERVICE_TYPE,\n    ItemProperties.DATASETS\n]);\n\n\nconst LayerProps = AssetProps.concat([\n    ItemProperties.LAYER_TYPE,\n    ItemProperties.LAYER_NAME,\n    ItemProperties.LEGEND,\n    ItemProperties.SERVICES,\n    ItemProperties.SUPPORTED_FORMATS,\n    ItemProperties.MIN_SCALE,\n    ItemProperties.MAX_SCALE\n]);\n\nconst MapProps = AssetProps.concat([\n    ItemProperties.BASE_LAYER,\n    ItemProperties.MAP_LAYERS,\n    ItemProperties.THUMBNAIL,\n    ItemProperties.ANNOTATIONS\n]);\n\n\nconst GalleryProps = AssetProps.concat([\n    ItemProperties.GALLERY_ITEMS\n]);\n\n\nconst ConceptProps = ItemProps.concat([\n    ItemProperties.CONCEPT_SCHEME\n]);\n\nconst ContactProps = ItemProps.concat([\n    ItemProperties.FULL_NAME,\n    ItemProperties.ORGANIZATION_NAME,\n    ItemProperties.POSITION_TITLE,\n    ItemProperties.EMAIL,\n    ItemProperties.TELEPHONE,\n    ItemProperties.ADDRESS\n]);\n\nconst OrgProps = ItemProps.concat([\n    ItemProperties.NAME,\n    ItemProperties.PARENT_ORGANIZATION\n]);\n\n\n\nlet props = {};\nprops[ItemTypes.DATASET] = AssetProps;\nprops[ItemTypes.SERVICE] = ServiceProps;\nprops[ItemTypes.LAYER]   = LayerProps;\nprops[ItemTypes.MAP]     = MapProps;\nprops[ItemTypes.GALLERY] = GalleryProps;\nprops[ItemTypes.COMMUNITY] = AssetProps;\nprops[ItemTypes.CONCEPT] = ConceptProps;\nprops[ItemTypes.CONCEPT_SCHEME] = ItemProps;\nprops[ItemTypes.CONTACT] = ContactProps;\nprops[ItemTypes.ORGANIZATION] = OrgProps;\n\nfunction PropertiesFor(type) {\n    if(props[type]) return props[type].slice(0);\n    else return ItemProps.slice(0);\n}\n\n\n\n\nexport {\n    ItemProperties as default,\n    ItemProperties,\n    PropertiesFor\n}\n","\n\nimport ItemFactory from './factory';\nimport ItemProperties from './properties';\n\nfunction mapArray (arr, fn) {\n    let len = arr.length, res = [];\n    for(let i=0; i<len; ++i) {\n        res[i] = fn(arr[i]);\n    }\n    return res;\n}\n\n\n/**\n *\n */\nclass BaseModel {\n\n    constructor() {\n        this._data = {};\n    }\n\n    set(property, value) {\n\n        // console.log(' ');\n        // console.log('-------------------');\n        // console.log(`Item.set() - ${property.key} = ${typeof(value)}` );\n        // console.log(`Item.set() - ${property.type} / ${property.multi}`);\n\n        if(value === null || value === undefined)\n            delete this._data[property.key];\n        else {\n            let newValue = value;\n            let isItem = 'item' === property.type;\n            if(property.multi) {\n                if(typeof(value.push) === 'undefined') {\n                    // console.log('Item.set() - ' + key + ' has many but is singular: ' + typeof(value.push));\n                    newValue = isItem ? [ this.toItem(value) ] : [ value ];\n                } else {\n                    newValue = mapArray(value, v => {\n                        return isItem ? this.toItem(v) : v;\n                    });\n                }\n\n            } else if(isItem) {\n                newValue = this.toItem(value);\n            } else {\n                newValue = JSON.parse(JSON.stringify(value));\n            }\n\n            this._data[property.key] = newValue;\n        }\n        // console.log('---------------------');\n        // console.log(' ');\n\n    }\n\n    get(property) {\n        return this._data[property.key];\n    }\n\n    addTo(property, value) {\n        if(value === null || value === undefined) return;\n        if(property.multi) {\n            if(!this._data[property.key])\n                this._data[property.key] = [];\n\n            if(typeof(value.push) !== 'undefined') {\n                if('item' === property.type) {\n                    value = mapArray(value, v => this.toItem(v) );\n                } else {\n                    value = value.slice(0);\n                }\n                this._data[property.key] = this._data[property.key].concat(value);\n\n            } else {\n                if('item' === property.type) {\n                    value = this.toItem(value);\n                }\n                this._data[property.key].push(value);\n            }\n        }\n    }\n\n    removeFrom(property, value) {\n        if(value === null || value === undefined) return;\n        if(property.multi) {\n\n            let isObj = 'object' === property.type;\n            let current = this.get(property);\n            if(!current) return;\n\n            if(typeof(value.push) !== 'undefined') {\n\n                // this._data[property.key] = current.concat(value);\n                for(let i=0; i<value.length; ++i) {\n                    if(isObj) {\n                        current = this.removeObject(value, current);\n                    } else {\n                        current = this.removeValue(value, current);\n                    }\n                }\n                this._data[property.key] = current;\n\n            } else {\n\n                if(isObj) {\n                    current = this.removeObject(value, current);\n                } else {\n                    current = this.removeValue(value, current);\n                }\n                this._data[property.key] = current;\n            }\n        }\n    }\n\n    addObject(value, arr) {\n        if(!value) return;\n        arr = arr || [];\n        arr.push(value);\n        return arr;\n    }\n    removeObject(value, arr) {\n        if(!value || (!value.id && !value.uri)) return;\n        let k = value.id ? 'id' : 'uri';\n        arr = arr || [];\n        let idx = -1;\n        arr.each( (p,i) => {\n            if(p[k] === value[k])\n                idx = i;\n        });\n        if(idx>=0) {\n            arr.splice(idx, 1);\n        }\n        return arr;\n    }\n\n    addValue(value, arr) {\n        if(!value) return;\n        arr = arr || [];\n        arr.push(value);\n        return arr;\n    }\n    removeValue(value, arr) {\n        if(!value) return;\n        arr = arr || [];\n        let idx = arr.indexOf(value);\n        if(idx>=0) {\n            arr.splice(idx, 1);\n        }\n        return arr;\n    }\n\n    default(property, value) {\n        let current = this.get(property);\n        if(current === null || current === undefined)\n            this.set(property, value);\n    }\n\n    toItem(obj) {\n        // console.log(\" \");\n        if(!obj) {\n            // console.log(`Item[${this._data.type}].toItem() - Value is null`);\n            return null;\n        }\n\n        let itemFactory = this.getFactory();\n        if(itemFactory) {\n            // console.log(`Item[${this._data.type}].toItem() - INPUT: ${JSON.stringify(obj)}`);\n            let result = itemFactory(obj);\n            // console.log(`Item[${this._data.type}].toItem() - ITEMIZED: ${JSON.stringify(result)}`);\n            return result;\n        } else {\n            console.log(`WARN: Item[${this._data.type}].toItem() - No Factory!`);\n            return JSON.parse(JSON.stringify(obj));\n        }\n    }\n\n    getFactory() {\n        return ItemFactory;\n    }\n\n    /**\n     * @param {ItemProperty} property - property to be written to output JSON object\n     * @param {any} value - value associated with the property\n     * @param {Object} parentJson - parent object to write the property's value to\n     */\n    propertyToJson(property, value, parentJson) {\n\n        if(value !== null && value !== undefined) {\n\n            let isItem = 'item' === property.type;\n            let isMulti = property.multi;\n            let result = null;\n\n            if(isMulti && isItem) {\n                result = value.map( v => v.toJson() );\n            } else if(isMulti) {\n                result = value.slice(0);\n            } else if(isItem) {\n                result = value.toJson();\n            } else {\n                result = value;\n            }\n\n            parentJson[property.key] = result;\n        }\n\n    }\n}\n\n\nexport default BaseModel;\n","\n\n\nimport BaseModel from './base';\nimport { ItemProperties, PropertiesFor } from './properties';\n\n\n\nfunction parseDateLong(date) {\n    let result = null;\n    if(date) {\n        if(typeof(date) === 'number') {\n            //formatted as milliseconds (hopefully)\n            result = date;\n\n        } else if(typeof(date.getTime) !== 'undefined') {\n            //date obj\n            result = date.getTime();\n        }\n    }\n    return result;\n}\n\nfunction isNullUnDef(arg) {\n    return arg === null || isUnDef(arg);\n}\nfunction isUnDef(arg) {\n    return typeof(arg) === 'undefined';\n}\n\n\n\n/**\n * Item\n * base class for GeoPlatform objects\n */\nclass ItemModel extends BaseModel {\n\n    constructor(data) {\n        super();\n\n        if(data) {\n\n            // console.log(' ');\n            // console.log('-------------------------------');\n            // console.log('Item() - initializing using ' + JSON.stringify(data));\n\n            for(let p in ItemProperties) {\n                let property = ItemProperties[p];\n                let key = property.key;\n                let value = data[key];\n                if(value !== null && value !== undefined) {\n                    this.set(property, value);\n                }\n            }\n            // console.log('-------------------------------');\n            // console.log(' ');\n        }\n\n        this.default(ItemProperties.KEYWORDS, []);\n        this.default(ItemProperties.IDENTIFIERS, []);\n        this.default(ItemProperties.ALTERNATE_TITLES, []);\n        this.default(ItemProperties.THEMES, []);\n        this.default(ItemProperties.CONTACTS, []);\n        this.default(ItemProperties.PUBLISHERS, []);\n        this.default(ItemProperties.CONTRIBUTORS, []);\n        this.default(ItemProperties.RESOURCE_TYPES, []);\n        this.default(ItemProperties.USED_BY, []);\n        this.default(ItemProperties.ACCESS_RIGHTS, []);\n        this.default(ItemProperties.RELATED_RESOURCES, []);\n    }\n\n    getId() { return this.get(ItemProperties.ID); }\n    getType() { return this.get(ItemProperties.TYPE); }\n    getCreated() { return this.get(ItemProperties.CREATED); }\n    getModified() { return this.get(ItemProperties.MODIFIED); }\n    getLastModifiedBy() { return this.get(ItemProperties.LAST_MODIFIED_BY); }\n\n    //-----------------------------------------------------------\n\n    uri(value) {  this.setUri(value);  return this; }\n    getUri() { return this.get(ItemProperties.URI); }\n    setUri(value) { this.set(ItemProperties.URI, value); }\n\n    //-----------------------------------------------------------\n\n    identifiers(value) { this.setIdentifiers(value); return this; }\n    getIdentifiers() { return this.get(ItemProperties.IDENTIFIERS); }\n    setIdentifiers(value) { this.set(ItemProperties.IDENTIFIERS, value); }\n    addIdentifier(value) { this.addTo(ItemProperties.IDENTIFIERS, value); }\n    removeIdentifier(value) { this.removeFrom(ItemProperties.IDENTIFIERS, value); }\n\n    //-----------------------------------------------------------\n\n    alternateTitles(value) { this.setAlternateTitles(value); return this; }\n    getAlternateTitles() { return this.get(ItemProperties.ALTERNATE_TITLES); }\n    setAlternateTitles(value) { this.set(ItemProperties.ALTERNATE_TITLES, value); }\n    addAlternateTitle(value) { this.addTo(ItemProperties.ALTERNATE_TITLES, value); }\n    removeAlternateTitle(value) { this.removeFrom(ItemProperties.ALTERNATE_TITLES, value); }\n\n    //-----------------------------------------------------------\n\n    createdBy(value) { this.setCreatedBy(value); return this; }\n    getCreatedBy() { return this.get(ItemProperties.CREATED_BY); }\n    setCreatedBy(value) { this.set(ItemProperties.CREATED_BY, value); }\n\n    //-----------------------------------------------------------\n\n    label(value) { this.setLabel(value); return this; }\n    getLabel() { return this.get(ItemProperties.LABEL); }\n    setLabel(value) { this.set(ItemProperties.LABEL, value); }\n\n    //-----------------------------------------------------------\n\n    description(value) { this.setDescription(value); return this; }\n    getDescription() { return this.get(ItemProperties.DESCRIPTION); }\n    setDescription(value) { this.set(ItemProperties.DESCRIPTION, value); }\n\n    //-----------------------------------------------------------\n\n    keywords(value) { this.setKeywords(value); return this; }\n    getKeywords() { return this.get(ItemProperties.KEYWORDS); }\n    setKeywords(value) { this.set(ItemProperties.KEYWORDS, value); }\n\n    //-----------------------------------------------------------\n\n    landingPage(value) { this.setLandingPage(value); return this; }\n    getLandingPage() { return this.get(ItemProperties.LANDING_PAGE); }\n    setLandingPage(value) { this.set(ItemProperties.LANDING_PAGE, value); }\n\n    //-----------------------------------------------------------\n\n    status(value) { this.setStatus(value); return this; }\n    getStatus() { return this.get(ItemProperties.STATUS); }\n    setStatus(value) { this.set(ItemProperties.STATUS, value); }\n\n    //-----------------------------------------------------------\n\n    visibility(value) { this.setVisibility(value); return this; }\n    getVisibility() { return this.get(ItemProperties.VISIBILITY); }\n    setVisibility(value) { this.set(ItemProperties.VISIBILITY, value===true); }\n\n    //-----------------------------------------------------------\n\n    purpose(value) { this.setPurpose(value); return this; }\n    getPurpose() { return this.get(ItemProperties.PURPOSE); }\n    setPurpose(value) { this.set(ItemProperties.PURPOSE, value===true); }\n\n    //-----------------------------------------------------------\n\n    themes(value) { this.setThemes(value); return this; }\n    getThemes() { return this.get(ItemProperties.THEMES); }\n    setThemes(value) { this.set(ItemProperties.THEMES, value); }\n    addTheme(value) { this.addTo(ItemProperties.THEMES, value); }\n    removeTheme(value) { this.removeFrom(ItemProperties.THEMES, value); }\n\n    //-----------------------------------------------------------\n\n    publishers(value) { this.setPublishers(value); return this; }\n    getPublishers() { return this.get(ItemProperties.PUBLISHERS); }\n    setPublishers(value) { this.set(ItemProperties.PUBLISHERS, value); }\n    addPublisher(value) { this.addTo(ItemProperties.PUBLISHERS, value); }\n    removePublisher(value) { this.removeFrom(ItemProperties.PUBLISHERS, value); }\n\n    //-----------------------------------------------------------\n\n    contacts(value) { this.setContacts(value); return this; }\n    getContacts() { return this.get(ItemProperties.CONTACTS); }\n    setContacts(value) { this.set(ItemProperties.CONTACTS, value); }\n    addContact(value) { this.addTo(ItemProperties.CONTACTS, value); }\n    removeContact(value) { this.removeFrom(ItemProperties.CONTACTS, value); }\n\n    //-----------------------------------------------------------\n\n    contributors(value) { this.setContributors(value); return this; }\n    getContributors() { return this.get(ItemProperties.CONTRIBUTORS); }\n    setContributors(value) { this.set(ItemProperties.CONTRIBUTORS, value); }\n    addContributor(value) { this.addTo(ItemProperties.CONTRIBUTORS, value); }\n    removeContributor(value) { this.removeFrom(ItemProperties.CONTRIBUTORS, value); }\n\n    //-----------------------------------------------------------\n\n    resourceTypes(value) { this.setResourceTypes(value); return this; }\n    getResourceTypes() { return this.get(ItemProperties.RESOURCE_TYPES); }\n    setResourceTypes(value) { this.set(ItemProperties.RESOURCE_TYPES, value); }\n    addResourceType(value) { this.addTo(ItemProperties.RESOURCE_TYPES, value); }\n    removeResourceType(value) { this.removeFrom(ItemProperties.RESOURCE_TYPES, value); }\n\n    //-----------------------------------------------------------\n\n    distributions(value) { this.setDistributions(value); return this; }\n    getDistributions() { return this.get(ItemProperties.DISTRIBUTIONS); }\n    setDistributions(value) { this.set(ItemProperties.DISTRIBUTIONS, value); }\n    addDistribution(value) { this.addTo(ItemProperties.DISTRIBUTIONS, value); }\n    removeDistribution(value) { this.removeFrom(ItemProperties.DISTRIBUTIONS, value); }\n\n    //-----------------------------------------------------------\n\n    classifiers(value) { this.setClassifiers(value); return this; }\n    getClassifiers() { return this.get(ItemProperties.CLASSIFIERS); }\n    setClassifiers(value) {\n        if(!value || typeof(value) !== 'object') {\n            this.set(ItemProperties.CLASSIFIERS, {});\n        } else {\n            this.set(ItemProperties.CLASSIFIERS, value);\n        }\n    }\n\n    //-----------------------------------------------------------\n\n    usedBy(value) { this.setUsedBy(value); return this; }\n    getUsedBy() { return this.get(ItemProperties.USED_BY); }\n    setUsedBy(value) { this.set(ItemProperties.USED_BY, value); }\n    addUsedBy(value) { this.addTo(ItemProperties.USED_BY, value); }\n    removeUsedBy(value) { this.removeFrom(ItemProperties.USED_BY, value); }\n\n    //-----------------------------------------------------------\n\n    accessRights(value) { this.setAccessRights(value); return this; }\n    getAccessRights() { return this.get(ItemProperties.ACCESS_RIGHTS); }\n    setAccessRights(value) { this.set(ItemProperties.ACCESS_RIGHTS, value); }\n    addAccessRight(value) { this.addTo(ItemProperties.ACCESS_RIGHTS, value); }\n    removeAccessRight(value) { this.removeFrom(ItemProperties.ACCESS_RIGHTS, value); }\n\n    //-----------------------------------------------------------\n\n    related(value) { this.setRelatedResources(value); return this; }\n    getRelatedResources() { return this.get(ItemProperties.RELATED_RESOURCES); }\n    setRelatedResources(value) { this.set(ItemProperties.RELATED_RESOURCES, value); }\n    addRelatedResource(value) { this.addTo(ItemProperties.RELATED_RESOURCES, value); }\n    removeRelatedResource(value) { this.removeFrom(ItemProperties.RELATED_RESOURCES, value); }\n\n    //-----------------------------------------------------------\n\n    extent(value) { this.setExtent(value); return this; }\n    getExtent() { return this.get(ItemProperties.GEOGRAPHIC_EXTENT); }\n    setExtent(value) {\n        if(typeof(value) === 'string') {\n            //bbox string (minx, miny, maxx, maxy)\n            let str = value.split(',');\n            value = {\n                minx: str[0].trim()*1,\n                miny: str[1].trim()*1,\n                maxx: str[2].trim()*1,\n                maxy: str[3].trim()*1\n            };\n        } else if(value && value.length && value[0].length) {\n            //nested arrays (geojson)\n            value = {\n                minx: value[0][1]*1, miny: value[0][0]*1,\n                maxx: value[1][1]*1, maxy: value[1][0]*1\n            };\n        } else if(value &&\n            !isNullUnDef(value.minx) && !isNullUnDef(value.miny) &&\n            !isNullUnDef(value.maxx) && !isNullUnDef(value.maxy)) {\n            //already in correct format\n\n        } else {\n            console.log(\"ItemModel.setExtent() - invalid argument\");\n            return;\n        }\n        this.set(ItemProperties.GEOGRAPHIC_EXTENT, value);\n    }\n    intersects(arg) {\n        if(isNullUnDef(arg)) return false;\n        let extent = this.getExtent();\n        if(isNullUnDef(extent) ||\n            isNullUnDef(extent.minx) || isNullUnDef(extent.miny) ||\n            isNullUnDef(extent.maxx) || isNullUnDef(extent.maxy))\n            return false;\n\n        if( !isNullUnDef(arg.minx) || !isNullUnDef(arg.miny) ||\n            !isNullUnDef(arg.maxx) || !isNullUnDef(arg.maxy)) {\n            //default format (object)\n            return !(arg.minx > extent.maxx || arg.miny > extent.maxy ||\n                     arg.maxx < extent.minx || arg.maxy < extent.miny);\n\n        } else if(!isUnDef(arg.push) && arg.length >= 2 &&\n            arg[0] && !isUnDef(arg[0].push) && arg[0].length >= 2) {\n            //nested arrays (geojson)\n            return !(arg[0][1] > extent.maxx || arg[0][0] > extent.maxy ||\n                     arg[1][1] < extent.minx || arg[1][0] < extent.miny);\n        }\n        return false;\n    }\n\n    //-----------------------------------------------------------\n\n    temporal(value) { this.setTemporalExtent(value); return this; }\n    getTemporalExtent() { return this.get(ItemProperties.TEMPORAL_EXTENT); }\n    setTemporalExtent(value) {\n        let val = { startDate: null, endDate: null };\n        if(value && typeof(value) === 'object') {\n            val.startDate = parseDateLong(value.startDate);\n            val.endDate = parseDateLong(value.endDate);\n        } else {\n            console.log(\"ItemModel.setTemporalExtent() - invalid argument\");\n            return;\n        }\n        this.set(ItemProperties.TEMPORAL_EXTENT, val);\n    }\n    isAfter(date) {\n        if(!date || isUnDef(date.getTime)) return false;\n        let temporal = this.getTemporalExtent();\n        if(isNullUnDef(temporal) || isNullUnDef(temporal.startDate)) return false;\n        return temporal.startDate < date.getTime();\n    }\n    isBefore(date) {\n        if(!date || isUnDef(date.getTime)) return false;\n        let temporal = this.getTemporalExtent();\n        if(isNullUnDef(temporal) || isNullUnDef(temporal.endDate)) return false;\n        return temporal.endDate > date.getTime();\n    }\n\n\n    //-----------------------------------------------------------\n\n\n    // statistics(value) { this.setStatistics(value); return this; }\n    getStatistics() { return this.get(ItemProperties.STATISTICS); }\n    // setStatistics(value) { this.set(ItemProperties.STATISTICS, value); }\n\n\n    //-----------------------------------------------------------\n\n\n    /**\n     * @return {boolean} true if the required fields are provided\n     */\n    isValid() {\n        return this.getType() && this.getLabel();\n    }\n\n    //-----------------------------------------------------------\n\n\n    toJson() {\n        let result = {};\n        let props = PropertiesFor(this.getType()) || [];\n        for(let i=0; i<props.length; ++i) {\n            let property = props[i];\n            let value = this.get(property);\n            this.propertyToJson(property, value, result);\n        }\n        return result;\n    }\n\n}\n\nexport default ItemModel;\n","\n\nimport ItemModel from './item';\nimport ItemTypes from '../shared/types';\nimport ItemProperties from './properties';\n\n\nclass DatasetModel extends ItemModel {\n\n    constructor(data) {\n        super(data);\n        this.set(ItemProperties.TYPE, ItemTypes.DATASET);\n        this.default(ItemProperties.SERVICES, []);\n    }\n\n    //-----------------------------------------------------------\n\n    services(value) { this.setServices(value); return this; }\n    getServices() { return this.get(ItemProperties.SERVICES); }\n    setServices(value) { this.set(ItemProperties.SERVICES, value); }\n    addService(value) { this.addTo(ItemProperties.SERVICES, value); }\n    removeService(value) { this.removeFrom(ItemProperties.SERVICES, value); }\n\n    //-----------------------------------------------------------\n\n\n}\n\nexport default DatasetModel;\n","\nimport ItemModel from './item';\nimport ItemTypes from '../shared/types';\nimport ItemProperties from './properties';\n\n\nclass ServiceModel extends ItemModel {\n\n    constructor(data) {\n        super(data);\n        this.set(ItemProperties.TYPE, ItemTypes.SERVICE);\n        this.default(ItemProperties.DATASETS, []);\n    }\n\n    //-----------------------------------------------------------\n\n    href(value) { this.setHref(value); return this; }\n    getHref() { return this.get(ItemProperties.HREF); }\n    setHref(value) { this.set(ItemProperties.HREF, value); }\n\n    //-----------------------------------------------------------\n\n    serviceType(value) { this.setServiceType(value); return this; }\n    getServiceType() { return this.get(ItemProperties.SERVICE_TYPE); }\n    setServiceType(value) { this.set(ItemProperties.SERVICE_TYPE, value); }\n\n    //-----------------------------------------------------------\n\n    datasets(value) { this.setDatasets(value); return this; }\n    getDatasets() { return this.get(ItemProperties.DATASETS); }\n    setDatasets(value) { this.set(ItemProperties.DATASETS, value); }\n    addDataset(value) { this.addTo(ItemProperties.DATASETS, value); }\n    removeDataset(value) { this.removeFrom(ItemProperties.DATASETS, value); }\n\n    //-----------------------------------------------------------\n}\n\nexport default ServiceModel;\n","\nimport ItemModel from './item';\nimport ItemTypes from '../shared/types';\nimport ItemProperties from './properties';\n\n\nconst LEGEND_PROPS = {\n    LABEL             : { key: \"label\"          },\n    DESCRIPTION       : { key: \"description\"    },\n    URL               : { key: \"url\"            },\n    CONTENT           : { key: \"contentData\"    },\n    MEDIA_TYPE        : { key: \"mediaType\"      },\n    WIDTH             : { key: \"width\"          },\n    HEIGHT            : { key: \"height\"         },\n    VALUES            : { key: \"values\",      multi: true }\n};\n\nclass LayerModel extends ItemModel {\n\n    constructor(data) {\n        super(data);\n        this.set(ItemProperties.TYPE, ItemTypes.LAYER);\n        this.default(ItemProperties.SERVICES, []);\n    }\n\n    //-----------------------------------------------------------\n\n    layerType(value) { this.setLayerType(value); return this; }\n    getLayerType() { return this.get(ItemProperties.LAYER_TYPE); }\n    setLayerType(value) { this.set(ItemProperties.LAYER_TYPE, value); }\n\n    //-----------------------------------------------------------\n\n    layerName(value) { this.setLayerName(value); return this; }\n    getLayerName() { return this.get(ItemProperties.LAYER_NAME); }\n    setLayerName(value) { this.set(ItemProperties.LAYER_NAME, value); }\n\n    //-----------------------------------------------------------\n\n    legend(value) { this.setLegend(value); return this; }\n    getLegend() { return this.get(ItemProperties.LEGEND); }\n    setLegend(value) { this.set(ItemProperties.LEGEND, value); }\n\n    //-----------------------------------------------------------\n\n    services(value) { this.setServices(value); return this; }\n    getServices() { return this.get(ItemProperties.SERVICES); }\n    setServices(value) { this.set(ItemProperties.SERVICES, value); }\n    addService(value) { this.addTo(ItemProperties.SERVICES, value); }\n    removeService(value) { this.removeFrom(ItemProperties.SERVICES, value); }\n\n    //-----------------------------------------------------------\n\n    formats(value) { this.setFormats(value); return this; }\n    getFormats() { return this.get(ItemProperties.SUPPORTED_FORMATS); }\n    setFormats(value) { this.set(ItemProperties.SUPPORTED_FORMATS, value); }\n    addFormat(value) {\n        //TODO\n    }\n    removeFormat(value) {\n        //TODO\n    }\n\n    //-----------------------------------------------------------\n\n    minScale(value) { this.setMinScale(value); return this; }\n    getMinScale() { return this.get(ItemProperties.MIN_SCALE); }\n    setMinScale(value) { this.set(ItemProperties.MIN_SCALE, value); }\n\n    //-----------------------------------------------------------\n\n    maxScale(value) { this.setMaxScale(value); return this; }\n    getMaxScale() { return this.get(ItemProperties.MAX_SCALE); }\n    setMaxScale(value) { this.set(ItemProperties.MAX_SCALE, value); }\n\n    //-----------------------------------------------------------\n\n    scale(min, max) {\n        this.setMinScale(min);\n        this.setMinScale(max);\n        return this;\n    }\n\n    //-----------------------------------------------------------\n\n    legend(value) { this.setLegend(value); return this; }\n    getLegend() { return this.get(ItemProperties.LEGEND); }\n    setLegend(value) { this.set(ItemProperties.LEGEND, value); }\n    /**\n     * @param {object} item - defining a legend item, including label and either a URL or contentData\n     */\n    addLegendItem(item) {\n        if( !item[LEGEND_PROPS.LABEL.key]) {\n            console.log(\"LayerModel.addLegendItem() - legends must have a '\" +\n                LEGEND_PROPS.LABEL.key + \"'\");\n            return;\n        }\n        if( !item[LEGEND_PROPS.URL.key] && !item[LEGEND_PROPS.CONTENT.key]) {\n            console.log(\"LayerModel.addLegendItem() - legends must have either a '\" +\n            LEGEND_PROPS.URL.key + \"' or '\" + LEGEND_PROPS.CONTENT.key + \"'\");\n            return;\n        }\n        let result = {};\n        for(let p in LEGEND_PROPS) {\n            let prop = LEGEND_PROPS[p];\n            let key = prop.key;\n            result[key] = item[key];\n        }\n        let legend = this.getLegend();\n        if(!legend) legend = { title: this.getLabel() + \" Legend\", items: [] };\n        else if(!legend.items) legend.items = [];\n        legend.items.push(result);\n        this.setLegend(legend);\n    }\n\n    //-----------------------------------------------------------\n\n}\n\nexport default LayerModel;\n","\nimport ItemModel from './item';\nimport ItemTypes from '../shared/types';\nimport ItemProperties from './properties';\n\n\nconst LayerStateProperties = {\n    LAYER_ID    : { key: \"layer_id\"     },\n    LAYER       : { key: \"layer\"        },\n    OPACITY     : { key: \"opacity\"      },\n    VISIBILITY  : { key: \"visibility\"   }\n};\n\n\nclass MapModel extends ItemModel {\n\n    constructor(data) {\n        super(data);\n\n        //manually re-set the overlays because each objectc\n        // has a nested Item (layer) which needs to be item-ized\n        // and the initializer used in the constructor isn't tied\n        // to any specific instance's logic.\n        let layers = this.getLayers();\n        if(layers) {\n            this.setLayers(layers);\n        }\n\n        this.set(ItemProperties.TYPE, ItemTypes.MAP);\n        this.default(ItemProperties.MAP_LAYERS, []);\n    }\n\n    //-----------------------------------------------------------\n\n    thumbnail(value) { this.setThumbnail(value); return this; }\n    getThumbnail() { return this.get(ItemProperties.THUMBNAIL); }\n    setThumbnail(value) { this.set(ItemProperties.THUMBNAIL, value); }\n\n    //-----------------------------------------------------------\n\n    baseLayer(value) { this.setBaseLayer(value); return this; }\n    getBaseLayer() { return this.get(ItemProperties.BASE_LAYER); }\n    setBaseLayer(value) { this.set(ItemProperties.BASE_LAYER, value); }\n\n    //-----------------------------------------------------------\n\n    layers(value) { this.setLayers(value); return this; }\n    getLayers() { return this.get(ItemProperties.MAP_LAYERS); }\n    setLayers(value) {\n        let states = [];\n        if(value) {\n            if(typeof(value.push) === 'undefined') {\n                value = [value];\n            }\n            states = value.map( v => this.toLayerState(v) );\n        }\n        this.set(ItemProperties.MAP_LAYERS, states);\n    }\n    addLayer(value) {\n        if(!value) return;\n        let state = this.toLayerState(value);\n        this.addTo(ItemProperties.MAP_LAYERS, state);\n    }\n    removeLayer(value) {\n        if(!value) return;\n        //get id of layer to be removed\n        let layerId = value.id;\n        if(!layerId && value.layer) {\n            layerId = value.layer.id;\n        }\n        if(!layerId) return;    //can't remove unpersisted layers\n        //filter out selected layer from current layers and update\n        let layers = this.getLayers().filter(ls => ls.layer.id !== layerId );\n        this.set(ItemProperties.MAP_LAYERS, layers);\n    }\n\n    //-----------------------------------------------------------\n\n    annotations(value) { this.setAnnotations(value); return this; }\n    getAnnotations() { return this.get(ItemProperties.ANNOTATIONS); }\n    setAnnotations(value) { this.set(ItemProperties.ANNOTATIONS, value); }\n\n    //-----------------------------------------------------------\n\n\n    /*\n     * In order to properly handle Layers nested within plain PoJSos\n     * @override ItemModel.propertyToJson\n     */\n    propertyToJson(property, value, parentJson) {\n        if(!property || !property.key) return;\n        if(property.key === ItemProperties.MAP_LAYERS.key && value && value.length) {\n            let json = value.map(v => this.fromLayerState(v) );\n            parentJson[property.key] = json;\n        } else {\n            super.propertyToJson(property, value, parentJson);\n        }\n    }\n\n    /**\n     * @param {Object} object\n     * @return {Object} layer state representation of the input\n     */\n    toLayerState(object) {\n        if(!object) {\n            // console.log(\"MapModel.toLayerState() - input was null\");\n            return null;\n        }\n\n        let result = {};\n\n        if(object.layer) {\n            // console.log(\"MapModel.toLayerState() - input was already a state\");\n            let layer = this.toItem(object.layer);\n            if(!layer) return null;\n            result[LayerStateProperties.LAYER.key] = layer;\n            result[LayerStateProperties.LAYER_ID.key] = layer.getId() || object.layer_id;\n            result[LayerStateProperties.OPACITY.key] = object.opacity || 1.0;\n            result[LayerStateProperties.VISIBILITY.key] =\n                object.visibility !== undefined ? object.visibility : true;\n\n        } else if(!object.layer) {\n            // console.log(\"MapModel.toLayerState() - input was a layer\");\n            let layer = this.toItem(object);\n            if(!layer) return null;\n            result[LayerStateProperties.LAYER.key] = layer;\n            result[LayerStateProperties.LAYER_ID.key] = layer.getId();\n            result[LayerStateProperties.OPACITY.key] = 1.0;\n            result[LayerStateProperties.VISIBILITY.key] = true;\n        }\n\n        return result;\n    }\n\n    /**\n     * @param {Object} state -\n     * @return {Object} JSON representation\n     */\n    fromLayerState(state) {\n        let result = {};\n        for(let p in state) {\n            let value = state[p];\n            if(LayerStateProperties.LAYER.key === p) {\n                value = value.toJson();\n            }\n            result[p] = value;\n        }\n        return result;\n    }\n\n}\n\nexport default MapModel;\n","\nimport ItemModel from './item';\nimport ItemTypes from '../shared/types';\nimport ItemProperties from './properties';\n\nconst GalleryItemProperties = {\n    LABEL       : { key: \"label\"     },\n    ASSET_ID    : { key: \"assetId\"   },\n    ASSET       : { key: \"asset\"     },\n    ASSET_TYPE  : { key: \"assetType\" }\n};\n\n\n/**\n * Gallery\n */\nclass GalleryModel extends ItemModel {\n\n    constructor(data) {\n        super(data);\n\n        //manually re-set the overlays because each objectc\n        // has a nested Item (layer) which needs to be item-ized\n        // and the initializer used in the constructor isn't tied\n        // to any specific instance's logic.\n        let items = this.getItems();\n        if(items) {\n            this.setItems(items);\n        }\n\n        this.set(ItemProperties.TYPE, ItemTypes.GALLERY);\n        this.default(ItemProperties.GALLERY_ITEMS, []);\n    }\n\n    //-----------------------------------------------------------\n\n    items(value) { this.setItems(value); return this; }\n    getItems() { return this.get(ItemProperties.GALLERY_ITEMS); }\n    setItems(value) {\n        let items = [];\n        //ensure that items being set contain Item-ized assets\n        if(value) {\n            if(typeof(value.push) === 'undefined') {\n                value = [value];\n            }\n            items = value.map(v=>this.toGalleryItem(v));\n        }\n        this.set(ItemProperties.GALLERY_ITEMS, items);\n    }\n    addItem(value) {\n        if(!value) return;\n        let item = this.toGalleryItem(value);\n        this.addTo(ItemProperties.GALLERY_ITEMS, item);\n    }\n    removeItem(value) {\n        if(!value || typeof(value.toJson) === 'undefined') return;\n        let items = this.getItems().filter(i=>i.assetId !== value.getId());\n        this.setItems(items);\n    }\n    reorderItem(value, newPosition) {\n        let idx = -1;\n        let arr = this.getItems();\n        arr.each( (p,i) => {\n            if(p.id === value.id)\n                idx = i;\n        });\n        if(idx < 0) return;\n        arr.splice(idx, 1);\n        arr.splice(idx, 0, value);\n        this.setItems(arr);\n    }\n\n    //-----------------------------------------------------------\n\n    /*\n     * In order to properly handle Items nested within plain PoJSos\n     * @override ItemModel.propertyToJson\n     */\n    propertyToJson(property, value, parentJson) {\n        if(!property || !property.key) return;\n        if(property.key === ItemProperties.GALLERY_ITEMS.key && value && value.length) {\n            let json = value.map(v => this.fromGalleryItem(v) ).filter(v=>v!==null);\n            parentJson[property.key] = json;\n        } else {\n            super.propertyToJson(property, value, parentJson);\n        }\n    }\n\n\n\n\n    toGalleryItem(object) {\n        if(!object) return null;\n\n        // console.log(\"GalleryModel.toGalleryItem() - \" + JSON.stringify(object));\n\n        let result = {};\n\n        if(object.asset) {\n            //adding a gallery item container already containing an asset\n            // console.log(\"GalleryModel.toGalleryItem() - input was already an item\");\n            let asset = this.toItem(object.asset);\n            if(!asset) return null;\n            result[GalleryItemProperties.ASSET.key] = asset;\n            result[GalleryItemProperties.ASSET_ID.key] =\n                asset.getId() || object[GalleryItemProperties.ASSET_ID.key];\n            result[GalleryItemProperties.ASSET_TYPE.key] =\n                asset.getType() || object[GalleryItemProperties.ASSET_TYPE.key];\n            result[GalleryItemProperties.LABEL.key] =\n                object[GalleryItemProperties.LABEL.key] || asset.getLabel();\n\n        } else if(object.toJson !== undefined || object.type){\n            //adding an item to the gallery, so it must be wrapped by the gallery item container\n            // console.log(\"GalleryModel.toGalleryItem() - input was an asset\");\n            let asset = this.toItem(object);\n            if(!asset) return null;\n            result[GalleryItemProperties.ASSET.key] = asset;\n            result[GalleryItemProperties.ASSET_ID.key] = asset.getId();\n            result[GalleryItemProperties.ASSET_TYPE.key] = asset.getType();\n            result[GalleryItemProperties.LABEL.key] = asset.getLabel();\n\n        } else if(object[GalleryItemProperties.ASSET_ID.key] &&\n            object[GalleryItemProperties.ASSET_TYPE.key]) {\n            //adding a gallery item container that does not already contain a fully-realized\n            // item, but does contain the id and type of the item contained within\n            // console.log(\"GalleryModel.toGalleryItem() - input was partial container\");\n            result[GalleryItemProperties.ASSET_ID.key] = object[GalleryItemProperties.ASSET_ID.key];\n            result[GalleryItemProperties.ASSET_TYPE.key] = object[GalleryItemProperties.ASSET_TYPE.key];\n            result[GalleryItemProperties.LABEL.key] = object[GalleryItemProperties.LABEL.key] || \"Unlabeled item\";\n        }\n\n        return result;\n    }\n\n    fromGalleryItem(item) {\n        let result = {};\n        for(let p in item) {\n            let value = item[p];\n            if(GalleryItemProperties.ASSET.key === p) {\n                value = value.toJson();\n            }\n            result[p] = value;\n        }\n        return result;\n    }\n\n}\n\nexport default GalleryModel;\n","\n\nimport ItemModel from './item';\nimport ItemTypes from '../shared/types';\nimport ItemProperties from './properties';\n\n\nclass CommunityModel extends ItemModel {\n\n    constructor(data) {\n        super(data);\n        this.set(ItemProperties.TYPE, ItemTypes.COMMUNITY);\n    }\n\n    //-----------------------------------------------------------\n\n\n\n    //-----------------------------------------------------------\n\n\n}\n\nexport default CommunityModel;\n","\n\nimport ItemModel from './item';\nimport ItemTypes from '../shared/types';\nimport ItemProperties from './properties';\n\n\nconst ADDRESS_STREET  = 'street';\nconst ADDRESS_CITY    = 'city';\nconst ADDRESS_STATE   = 'state';\nconst ADDRESS_ZIP     = 'zip';\nconst ADDRESS_COUNTRY = 'country';\n\n\nclass ContactModel extends ItemModel {\n\n    constructor(data) {\n        super(data);\n        this.set(ItemProperties.TYPE, ItemTypes.CONTACT);\n    }\n\n    //-----------------------------------------------------------\n\n    fullName(value) { this.setFullName(value); return this; }\n    getFullName() { return this.get(ItemProperties.FULL_NAME); }\n    setFullName(value) { this.set(ItemProperties.FULL_NAME, value); }\n\n    //-----------------------------------------------------------\n\n    orgName(value) { this.setOrgName(value); return this; }\n    getOrgName() { return this.get(ItemProperties.ORGANIZATION_NAME); }\n    setOrgName(value) { this.set(ItemProperties.ORGANIZATION_NAME, value); }\n\n    //-----------------------------------------------------------\n\n    position(value) { this.setPosition(value); return this; }\n    getPosition() { return this.get(ItemProperties.POSITION_TITLE); }\n    setPosition(value) { this.set(ItemProperties.POSITION_TITLE, value); }\n\n    //-----------------------------------------------------------\n\n    email(value) { this.setEmail(value); return this; }\n    getEmail() { return this.get(ItemProperties.EMAIL); }\n    setEmail(value) { this.set(ItemProperties.EMAIL, value); }\n\n    //-----------------------------------------------------------\n\n    phone(value) { this.setPhone(value); return this; }\n    getPhone() { return this.get(ItemProperties.TELEPHONE); }\n    setPhone(value) { this.set(ItemProperties.TELEPHONE, value); }\n\n    //-----------------------------------------------------------\n\n    address(value) { this.setAddress(value); return this; }\n    getAddress() { return this.get(ItemProperties.ADDRESS); }\n    setAddress(value) { this.set(ItemProperties.ADDRESS, value); }\n\n    //-----------------------------------------------------------\n\n    street(value) { this.setStreet(value); return this; }\n    getStreet() {\n        let address = this.getAddress();\n        return address ? address[ADDRESS_STREET] : null;\n    }\n    setStreet(value) {\n        let address = this.getAddress() || {};\n        address[ADDRESS_STREET] = value;\n        this.setAddress(address);\n    }\n\n    //-----------------------------------------------------------\n\n    city(value) { this.setCity(value); return this; }\n    getCity() {\n        let address = this.getAddress();\n        return address ? address[ADDRESS_CITY] : null;\n    }\n    setCity(value) {\n        let address = this.getAddress() || {};\n        address[ADDRESS_CITY] = value;\n        this.setAddress(address);\n    }\n\n    //-----------------------------------------------------------\n\n    state(value) { this.setState(value); return this; }\n    getState() {\n        let address = this.getAddress();\n        return address ? address[ADDRESS_STATE] : null;\n    }\n    setState(value) {\n        let address = this.getAddress() || {};\n        address[ADDRESS_STATE] = value;\n        this.setAddress(address);\n    }\n\n    //-----------------------------------------------------------\n\n    zipCode(value) { this.setZipCode(value); return this; }\n    getZipCode() {\n        let address = this.getAddress();\n        return address ? address[ADDRESS_ZIP] : null;\n    }\n    setZipCode(value) {\n        let address = this.getAddress() || {};\n        address[ADDRESS_ZIP] = value;\n        this.setAddress(address);\n    }\n\n    //-----------------------------------------------------------\n\n    country(value) { this.setCountry(value); return this; }\n    getCountry() {\n        let address = this.getAddress();\n        return address ? address[ADDRESS_COUNTRY] : null;\n    }\n    setCountry(value) {\n        let address = this.getAddress() || {};\n        address[ADDRESS_COUNTRY] = value;\n        this.setAddress(address);\n    }\n\n    //-----------------------------------------------------------\n\n}\n\nexport default ContactModel;\n","\n\nimport ItemModel from './item';\nimport ItemTypes from '../shared/types';\nimport ItemProperties from './properties';\n\n\nclass OrganizationModel extends ItemModel {\n\n    constructor(data) {\n        super(data);\n        this.set(ItemProperties.TYPE, ItemTypes.ORGANIZATION);\n    }\n\n    //-----------------------------------------------------------\n\n    name(value) { this.setName(value); return this; }\n    getName() { return this.get(ItemProperties.NAME); }\n    setName(value) { this.set(ItemProperties.NAME, value); }\n\n    //-----------------------------------------------------------\n\n    parentOrg(value) { this.setParentOrganization(value); return this; }\n    getParentOrganization() { return this.get(ItemProperties.PARENT_ORGANIZATION); }\n    setParentOrganization(value) { this.set(ItemProperties.PARENT_ORGANIZATION, value); }\n\n    //-----------------------------------------------------------\n\n\n}\n\nexport default OrganizationModel;\n","\n\nimport ItemModel from './item';\nimport ItemTypes from '../shared/types';\nimport ItemProperties from './properties';\n\nclass ConceptModel extends ItemModel {\n\n    constructor(data) {\n        super(data);\n        this.set(ItemProperties.TYPE, ItemTypes.CONCEPT);\n    }\n\n    //-----------------------------------------------------------\n\n    scheme(value) { this.setScheme(value); return this; }\n    getScheme() { return this.get(ItemProperties.CONCEPT_SCHEME); }\n    setScheme(value) { this.set(ItemProperties.CONCEPT_SCHEME, value); }\n\n    //-----------------------------------------------------------\n\n\n}\n\nexport default ConceptModel;\n","\nimport ItemModel from './item';\nimport ItemTypes from '../shared/types';\nimport ItemProperties from './properties';\n\n\nclass ConceptSchemeModel extends ItemModel {\n\n    constructor(data) {\n        super(data);\n        this.set(ItemProperties.TYPE, ItemTypes.CONCEPT_SCHEME);\n    }\n\n    //-----------------------------------------------------------\n\n\n\n    //-----------------------------------------------------------\n\n\n}\n\nexport default ConceptSchemeModel;\n","\nimport ItemTypes        from '../shared/types';\nimport ItemProperties   from './properties';\nimport BaseModel        from './base';\nimport DatasetModel     from './dataset';\nimport ServiceModel     from './service';\nimport LayerModel       from './layer';\nimport MapModel         from './map';\nimport GalleryModel     from './gallery';\nimport CommunityModel   from './community';\nimport ContactModel     from './contact';\nimport OrganizationModel from './organization';\nimport ConceptModel     from './concept';\nimport ConceptSchemeModel from './concept-scheme';\n\n\nfunction itemFactory(type, options) {\n    let item = null;\n\n    // console.log(\" \");\n    // console.log(`ItemFactory() - Creating ${type} Item`);\n    // console.log(\" using... \" + JSON.stringify(options));\n    // console.log(\"-------------------------------\");\n\n    try {\n\n        switch(type) {\n            case ItemTypes.DATASET:         item = new DatasetModel(options); break;\n            case ItemTypes.SERVICE:         item = new ServiceModel(options); break;\n            case ItemTypes.LAYER:           item = new LayerModel(options); break;\n            case ItemTypes.MAP:             item = new MapModel(options); break;\n            case ItemTypes.GALLERY:         item = new GalleryModel(options); break;\n            case ItemTypes.COMMUNITY:       item = new CommunityModel(options); break;\n            case ItemTypes.CONTACT:         item = new ContactModel(options); break;\n            case ItemTypes.ORGANIZATION:    item = new OrganizationModel(options); break;\n            case ItemTypes.CONCEPT:         item = new ConceptModel(options); break;\n            case ItemTypes.CONCEPT_SCHEME:  item = new ConceptSchemeModel(options); break;\n            default: throw new Error(`Unsupported item type '${type}'`);\n        }\n\n    } catch(e) {\n        console.log(\"ItemFactory.parse() - Error creating \" + type +\n            \" using \" + JSON.stringify(options) +\n            \" : \" + e.message);\n        throw new Error(\"ItemFactory.parse() - Error creating \" + type +\n            \" using \" + JSON.stringify(options) +\n            \" : \" + e.message);\n    }\n\n    // console.log(`ItemFactory - done with ${item.getType()}`);\n    // console.log(\" \");\n    return item;\n}\n\n\n\n\nexport default function factory(arg) {\n\n    // console.log(\"ItemFactory() - \" + JSON.stringify(arg));\n\n    let type = null, options = null;\n    if(arg && typeof(arg) === 'string')\n        type = arg;\n    else if(arg && typeof(arg) === 'object') {\n\n        if(typeof(arg.toJson) !== 'undefined') {\n            // console.log(arg.getType() + \" is already an Item\");\n            return arg; //already an Item instance\n        }\n\n        if(arg.type)\n            type = arg.type;\n        else {\n            // console.log('*******************');\n            // console.log(JSON.stringify(arg));\n            // console.log('----');\n            throw new Error(\"ItemFactory() - Must specify 'type' in parameter object\");\n        }\n\n        options = arg;\n    } else {\n        throw new Error(\"Illegal argument; must be string type or object definition\");\n    }\n\n    return itemFactory(type, options);\n\n}\n","\n\n\nclass SearchResults {\n\n    constructor(data) {\n        this._data = {\n            totalResults: 0,\n            results: []\n        };\n        if(data) {\n            this._data.totalResults = data.totalResults || 0;\n            this._data.results = data.results || [];\n        }\n    }\n\n    getTotalResults() { return this._data.totalResults; }\n\n    getItems() { return this._data.results; }\n\n}\n\nexport default SearchResults;\n","\nimport Q from 'q';\nimport BaseService from './base';\nimport ItemFactory from '../models/factory';\nimport SearchResults from '../models/search-results';\n\n/**\n * ItemService\n * service for working with the GeoPlatform API to\n * retrieve and manipulate items.\n *\n * Ex Searching Items\n *      let params = { q: 'test' };\n *      itemService.search(params).then(response=>{\n *          console.log(response.results.length + \" of \" + response.totalResults);\n *      }).catch(e=>{...});\n *\n * Ex Fetch Item:\n *      itemService.get(itemId).then(item=>{...}).catch(e=>{...});\n *\n * Ex Saving Item:\n *      itemService.save(item).then(item=>{...}).catch(e=>{...});\n *\n * Ex Deleting Item:\n *      itemService.remove(itemId).then(()=>{...}).catch(e=>{...});\n *\n * Ex Patching Item:\n *      itemService.patch(itemId,patch).then(item=>{...}).catch(e=>{...});\n *\n */\nclass ItemService extends BaseService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    /**\n     * @param {string} id - identifier of item to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    get (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .then( obj => ItemFactory(obj) )\n        .catch(e => this._onError(e, `ItemService.get() - Error fetching item ${id}`) );\n    }\n\n    /**\n     * @param {Object} itemObj - item to create or update\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    save (itemObj, options) {\n\n        return Q.resolve( itemObj )\n        .then( item => {\n\n            if(item.toJson) {\n                //if passed an ItemModel instance, convert to JSON\n                item = item.toJson();\n            }\n\n            let method = 'POST',\n                url = this.baseUrl;\n            if(item.id) {\n                method = \"PUT\";\n                url += '/' + item.id;\n            }\n\n            let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n            return this.execute(opts);\n\n        })\n        .then(obj => ItemFactory(obj) )\n        .catch(e => this._onError(e, `ItemService.save() - Error saving item`) );\n    }\n\n    /**\n     * @param {string} id - identifier of item to delete\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving true if successful or an error\n     */\n    remove (id, options) {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:\"DELETE\", url: url, options: options\n            });\n            return this.execute(opts);\n        })\n        .then(response => true)\n        .catch(e => this._onError(e, `ItemService.remove() - Error deleting item ${id}`) );\n    }\n\n    /**\n     * @param {string} id - identifier of item to patch\n     * @param {Object} patch - HTTP-PATCH compliant set of properties to patch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    patch (id, patch, options) {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method: \"PATCH\", url: url, data: patch, options: options\n            });\n            return this.execute(opts);\n        })\n        .then( obj => ItemFactory(obj) )\n        .catch(e => this._onError(e, `ItemService.patch() - Error patching item ${id}`) );\n    }\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or GeoPlatform.Query instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    search (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl, params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .then( response => new SearchResults(response) )\n        .catch(e => this._onError(e, `ItemService.search() - Error searching items`) );\n    }\n\n\n    /**\n     *\n     * @param {string} arg - URL to metadata document or File to upload\n     * @param {string} format - metadata format of specified document\n     * @return {Promise} resolving GeoPlatform Item\n     */\n    import (arg, format, options) {\n\n        return Q.resolve( true )\n        .then( () => {\n            if(!arg || arg.indexOf('http')<0) {\n                throw new Error(\"Must provide a valid URL or File\");\n            }\n            let isFile = typeof(arg) !== 'string';\n            let ro = {\n                method:\"POST\",\n                url: this.apiBase + '/api/import',\n                processData: true,  //for jQuery\n                formData: true,     //for Node (RequestJS)\n                options: options\n            };\n            if(isFile) {\n                ro.file = arg;\n                ro.data = { format: format };\n            } else {\n                ro.formData = false; //prevent multi-part form/data encoding\n                ro.data = { url: arg, format: format };\n            }\n            let opts = this.buildRequest(ro);\n            return this.execute(opts);\n        })\n        .then( obj => ItemFactory(obj) )\n        .catch( e => {\n            let err = new Error(`ItemService.import() - Error importing item: ${e.message}`);\n            if(e.status === 409 || ~e.message.indexOf('Item already exists')) err.status = 409;\n            if(e.item) err.item = e.item;\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {string} id - identifier of the item to export\n     * @param {format} format - string mime type to export\n     * @return {Promise} resolving HTTP response object for enabling attachment downloading\n     */\n    export (id, format, options) {\n\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/export';\n            let opts = this.buildRequest({\n                method: \"GET\", url: url,\n                params: {format:format},\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => this._onError(e, `ItemService.export() - Error exporting item`) );\n    }\n\n\n    /**\n     * @param {Object} object - GP object definition to generate a URI for\n     * @param {Object} options - optional request options\n     * @return {Promise} resolving string URI\n     */\n    getUri (object, options) {\n\n        return Q.resolve( object )\n        .then( obj => {\n\n            if(!obj) {\n                let err = new Error(\"Must provide an typed object\");\n                err.status = 400;\n                err.error = \"Bad Request\";\n                throw err;\n            }\n\n            if(obj.toJson) {\n                //if passed an ItemModel instance, convert to JSON\n                obj = obj.toJson();\n            }\n\n            if(!obj.type) {\n                let err = new Error(\"Must provide a valid type on the specified object\");\n                err.status = 400;\n                err.error = \"Bad Request\";\n            }\n\n            let url = this.apiBase + '/api/utils/uri';\n            let opts = this.buildRequest({\n                method: \"POST\", url: url, data: obj, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => this._onError(e, `ItemService.getUri() - Error getting URI for item`) );\n\n    }\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0) {\n            let err = new Error(`Unsupported HTTP method ${options.method}`);\n            err.status = 400;\n            err.error = \"Bad Request\";\n            throw err;\n        }\n\n        if(!options.url) {\n            let err = new Error(`Must specify a URL for HTTP requests`);\n            err.status = 400;\n            err.error = \"Bad Request\";\n            throw err;\n        }\n\n        options.timeout = this.timeout;\n\n        let opts = this.createRequestOpts(options);\n\n        return opts;\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts);\n    }\n\n}\n\nexport default ItemService;\n","\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass DatasetService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/datasets';\n    }\n\n\n}\n\nexport default DatasetService;\n","\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass MapService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/maps';\n    }\n\n\n}\n\nexport default MapService;\n","\n\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass LayerService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/layers';\n    }\n\n    /**\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving style JSON object\n     */\n    style (options) {\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/style';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => this._onError(e, \"LayerService.style() - Error fetching style\") );\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} req identifying extent, x, y\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving feature JSON object\n     */\n    describe( id, req, options ) {\n\n        return Q.resolve( req )\n        .then( (req) => {\n\n            if(!req) {\n                let err = new Error(\"Must provide describe parameters to use\");\n                err.status = 400;\n                err.error = \"Bad Request\";\n                throw err;\n            }\n\n            let keys = ['bbox', 'height', 'width', 'x', 'y'];\n            let missing = keys.find(key => !req[key]);\n            if(missing) {\n                let err = new Error(`Must specify ${missing} in describe req`);\n                err.status = 400;\n                err.error = \"Bad Request\";\n                throw err;\n            }\n\n            let params = {\n                srs         : 'EPSG:4326',\n                bbox        : req.bbox,\n                height      : req.height,\n                width       : req.width,\n                info_format : 'text/xml',\n                x           : req.x,\n                y           : req.y,\n                i           : req.x, //WMS 1.3.0\n                j           : req.y  //WMS 1.3.0\n            };\n\n            let url = this.baseUrl + '/' + id + '/describe';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => this._onError(e, \"LayerService.describe() - Error describing layer feature\") );\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} params describing layer request to validate\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving empty if successful or a message if failed\n     */\n    validate(id, params, options) {\n\n        return Q.resolve( params )\n        .then( params => {\n\n            if(!params) {\n                let err = new Error(\"Must provide parameters to use in layer validation\");\n                err.status = 400;\n                err.error = \"Bad Request\";\n                throw err;\n            }\n\n            let url = this.baseUrl + '/' + id + '/validate';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => this._onError(e, \"LayerService.describe() - Error describing layer feature\") );\n    }\n\n}\n\nexport default LayerService;\n","\n\nexport default {\n    TYPES            : 'type',\n    QUERY            : 'q',\n    KEYWORDS         : 'keyword',\n    URI              : 'uri',\n    CREATED_BY       : 'createdBy',\n    CONTRIBUTED_BY   : 'contributedBy',\n    CREATOR          : 'creator.id',\n    SVC_TYPES        : 'serviceType.id',\n    THEMES_ID        : 'theme.id',\n    THEMES_LABEL     : 'theme.label',\n    THEMES_URI       : 'theme.uri',\n    PUBLISHERS       : 'publisher.id',\n    PUBLISHERS_LABEL : 'publisher.label',\n    PUBLISHERS_URI   : 'publisher.uri',\n    USED_BY_ID       : 'usedBy.id',\n    USED_BY_LABEL    : 'usedBy.label',\n    USED_BY_URI      : 'usedBy.uri',\n    SCHEMES_ID       : 'scheme.id',\n    SCHEMES_LABEL    : 'scheme.label',\n    SCHEMES_URI      : 'scheme.uri',\n    VISIBILITY       : 'visibility',\n    EXTENT           : 'extent',\n    MODIFIED_BEFORE  : 'modified.max',\n    MODIFIED_AFTER   : 'modified.min',\n    BEGINS           : 'startDate.min',\n    ENDS             : 'endDate.max',\n    RESOURCE_TYPE    : 'resourceType',\n\n    //recommender service-specific\n    FOR_TYPES        : 'for'\n};\n","\n\n\nexport default {\n    TYPES           : 'types',\n    THEMES          : 'themes',\n    PUBLISHERS      : 'publishers',\n    SERVICE_TYPES   : 'serviceTypes',\n    CONCEPT_SCHEMES : 'schemes',\n    VISIBILITY      : 'visibility',\n    CREATED_BY      : 'createdBy',\n    USED_BY         : 'usedBy.id'\n};\n","\nimport QueryParameters from './parameters';\nimport QueryFacets from './facets';\n\n\nconst FIELDS_DEFAULT = [\n    'created','modified','createdBy','publishers','themes','description'\n];\n\nconst FACETS_DEFAULT = [\n    QueryFacets.TYPES,\n    QueryFacets.PUBLISHERS,\n    QueryFacets.SERVICE_TYPES,\n    QueryFacets.CONCEPT_SCHEMES,\n    QueryFacets.VISIBILITY,\n    QueryFacets.CREATED_BY\n];\n\nconst SORT_OPTIONS_DEFAULT = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nclass Query {\n\n    constructor() {\n\n        this.defaultQuery = {\n            page: 0,\n            size: 10,\n            total: 0,\n            sort: \"modified,desc\",\n            fields: FIELDS_DEFAULT.slice(0),\n            includeFacets: FACETS_DEFAULT.slice(0)\n        };\n\n        this.query = {\n            page: 0,\n            size: 10,\n            total: 0,\n            sort: \"modified,desc\",\n            fields: FIELDS_DEFAULT.slice(0),\n            includeFacets: FACETS_DEFAULT.slice(0)\n        };\n\n    }\n\n\n\n    getQuery() {\n        let result = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value === null || value === undefined)\n                continue;\n            if(typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            if(typeof(value) !== 'string' || value.length > 0)\n                result[prop] = value;\n        }\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    parameter(name, value) {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    setParameter (name, value) {\n        if(value === null || value === undefined)\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    getParameter (key) {\n        return this.getParameter(key);\n    }\n\n    applyParameters (obj) { \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    q(text) {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setQ (text) {\n        this.setParameter(QueryParameters.QUERY, text);\n    }\n\n    getQ() {\n        return this.getParameter(QueryParameters.QUERY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    keywords(text) {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setKeywords (text) {\n        if(text && typeof(text.push) !== 'undefined')\n            text = text.join(',');\n        this.setParameter(QueryParameters.KEYWORDS, text);\n    }\n\n    getKeywords() {\n        return this.getParameter(QueryParameters.KEYWORDS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    uri (uri) {\n        this.setUri(uri);\n        return this;\n    }\n\n    setUri(uri) {\n        this.setParameter(QueryParameters.URI, uri);\n    }\n\n    getUri() {\n        return this.getParameter(QueryParameters.URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    types(types) {\n        this.setTypes(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - name of class(es) to request\n     */\n    setTypes (types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.TYPES, types);\n    }\n\n    getTypes () {\n        return this.getParameter(QueryParameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    createdBy(user) {\n        this.setCreatedBy(user);\n        return this;\n    }\n\n    /**\n     * @param {string} user - username\n     * @param {boolean} fireUpdate -\n     */\n    setCreatedBy (user) {\n        this.setParameter(QueryParameters.CREATED_BY, user);\n    }\n\n    getCreatedBy () {\n        return this.getParameter(QueryParameters.CREATED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.THEMES_LABEL or QueryParameters.THEMES_URI\n     * respectively.\n     * @param {array[string]} themes - string or array of strings containing theme constraint\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    themes(themes, parameter) {\n        this.setThemes(themes, parameter);\n        return this;\n    }\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.THEMES_LABEL or QueryParameters.THEMES_URI\n     * respectively.\n     * @param {array[string]} themes - theme or themes to constrain by\n     */\n    setThemes (themes, parameter) {\n        if(themes && themes.push === 'undefined')\n            themes = [themes];\n\n        //clear existing\n        this.setParameter(QueryParameters.THEMES_ID, null);\n        this.setParameter(QueryParameters.THEMES_LABEL, null);\n        this.setParameter(QueryParameters.THEMES_URI, null);\n\n        let param = parameter || QueryParameters.THEMES_ID;\n        this.setParameter(param, themes);\n    }\n\n    getThemes () {\n        return this.getParameter(QueryParameters.THEMES_ID) ||\n            this.getParameter(QueryParameters.THEMES_LABEL) ||\n            this.getParameter(QueryParameters.THEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.PUBLISHERS_LABEL or QueryParameters.PUBLISHERS_URI\n     * respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    publishers(publishers, parameter) {\n        this.setPublishers(publishers, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.PUBLISHERS_LABEL or QueryParameters.PUBLISHERS_URI\n     * respectively.\n     * @param {array[string]} publishers - publishing orgs to constrain by\n     */\n    setPublishers (publishers, parameter) {\n        if(publishers && publishers.push === 'undefined')\n            publishers = [publishers];\n\n        //clear existing\n        this.setParameter(QueryParameters.PUBLISHERS_ID, null);\n        this.setParameter(QueryParameters.PUBLISHERS_LABEL, null);\n        this.setParameter(QueryParameters.PUBLISHERS_URI, null);\n\n        let param = parameter || QueryParameters.PUBLISHERS_ID;\n        this.setParameter(param, publishers);\n    }\n\n    getPublishers () {\n        return this.getParameter(QueryParameters.PUBLISHERS_ID) ||\n            this.getParameter(QueryParameters.PUBLISHERS_LABEL) ||\n            this.getParameter(QueryParameters.PUBLISHERS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.USED_BY_LABEL or QueryParameters.USED_BY_URI\n     * respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    usedBy(ids, parameter) {\n        this.setUsedBy(ids, parameter);\n        return this;\n    }\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.USED_BY_LABEL or QueryParameters.USED_BY_URI\n     * respectively.\n     * @param {array[string]} ids - publishing orgs to constrain by\n     */\n    setUsedBy (ids, parameter) {\n        if(ids && ids.push === 'undefined')\n            ids = [ids];\n\n        //clear existing\n        this.setParameter(QueryParameters.USED_BY_ID, null);\n        this.setParameter(QueryParameters.USED_BY_LABEL, null);\n        this.setParameter(QueryParameters.USED_BY_URI, null);\n\n        let param = parameter || QueryParameters.USED_BY_ID;\n        this.setParameter(param, ids);\n    }\n\n    getUsedBy () {\n        return this.getParameter(QueryParameters.USED_BY_ID) ||\n            this.getParameter(QueryParameters.USED_BY_LABEL) ||\n            this.getParameter(QueryParameters.USED_BY_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.SCHEMES_LABEL or QueryParameters.SCHEMES_URI\n     * respectively.\n     * @param {array[string]} schemes - schemes to constrain by\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    schemes(schemes, parameter) {\n        this.setSchemes(schemes, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.SCHEMES_LABEL or QueryParameters.SCHEMES_URI\n     * respectively.\n     * @param {array[string]} schemes - schemes to constrain by\n     * @param {string} parameter - optional, to indicate the parameter to use\n     */\n    setSchemes (schemes, parameter) {\n        if(schemes && schemes.push === 'undefined')\n            schemes = [schemes];\n\n        //clear existing\n        this.setParameter(QueryParameters.SCHEMES_ID, null);\n        this.setParameter(QueryParameters.SCHEMES_LABEL, null);\n        this.setParameter(QueryParameters.SCHEMES_URI, null);\n\n        let param = parameter || QueryParameters.SCHEMES_ID;\n        this.setParameter(param, schemes);\n    }\n\n    getSchemes() {\n        return this.getParameter(QueryParameters.SCHEMES) ||\n            this.getParameter(QueryParameters.SCHEMES_LABEL) ||\n            this.getParameter(QueryParameters.SCHEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     *\n     */\n    serviceTypes(types) {\n        this.setServiceTypes(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - ids\n     */\n    setServiceTypes (types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.SERVICE_TYPES, types);\n    }\n\n    getServiceTypes () {\n        return this.getParameter(QueryParameters.SERVICE_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    visibility(vis) {\n        this.setVisibility(vis);\n        return this;\n    }\n\n    /**\n     * @param {string} visibility - one of 'public' or 'private'\n     * @param {boolean} fireUpdate\n     */\n    setVisibility (visibility) {\n        this.setParameter(QueryParameters.VISIBILITY, visibility);\n    }\n\n    getVisibility () {\n        this.getParameter(QueryParameters.VISIBILITY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    modified(date, beforeOrAfter) {\n        this.setModified(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param {Date} date - date to compare against\n     * @param {boolean} beforeOrAfter - flag specifying which boundary condition (true = before, false = after)\n     * @param {boolean} fireUpdate - flag specifying whether to trigger update automatically\n     */\n    setModified (date, beforeOrAfter) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(QueryParameters.MODIFIED_BEFORE, null);\n            this.setParameter(QueryParameters.MODIFIED_AFTER, null);\n            return;\n        }\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? QueryParameters.MODIFIED_BEFORE : QueryParameters.MODIFIED_AFTER;       //property being set\n        let oppProp = dir ? QueryParameters.MODIFIED_AFTER : QueryParameters.MODIFIED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getModified () {\n        return  this.getParameter(QueryParameters.MODIFIED_BEFORE) ||\n                this.getParameter(QueryParameters.MODIFIED_AFTER);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    extent(bbox) {\n        this.setExtent(bbox);\n        return this;\n    }\n\n    /**\n     * @param {string} bboxStr - form of \"minx,miny,maxx,maxy\"\n     */\n    setExtent (bbox) {\n        if(bbox && typeof(bbox.toBboxString) !== 'undefined')\n            bbox = bbox.toBboxString();\n        this.setParameter(QueryParameters.EXTENT, bbox);\n    }\n\n    /**\n     * @return {string} bbox string or null if not set\n     */\n    getExtent () {\n        return this.getParameter(QueryParameters.EXTENT);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    begins(date) {\n        this.setBeginDate(date);\n        return this;\n    }\n\n    setBeginDate (date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(QueryParameters.BEGINS, date);\n    }\n\n    getBeginDate () {\n        let date = this.getParameter(this.parameter.BEGINS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    ends(date) {\n        this.setEndDate(date);\n        return this;\n    }\n\n    setEndDate (date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(QueryParameters.ENDS, date);\n    }\n\n    getEndDate () {\n        let date = this.getParameter(this.parameter.ENDS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    between(begin, end) {\n        this.setBetween(begin, end);\n        return this;\n    }\n\n    setBetween(begin, end) {\n        this.begins(begin);\n        this.ends(end);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    resourceTypes(types) {\n        this.setResourceTypes(types);\n        return this;\n    }\n\n    setResourceTypes(types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.RESOURCE_TYPE, types);\n    }\n\n    getResourceTypes() {\n        return this.getParameter(QueryParameters.RESOURCE_TYPE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    facets(names) {\n        this.setFacets(names);\n        return this;\n    }\n\n    /*\n     * @param {array[string]} names - names of facets\n     */\n    setFacets (names) {\n        this.query.includeFacets = names;\n    }\n\n    getFacets() {\n        return this.query.includeFacets;\n    }\n\n    /**\n     * @param {string} name - name of facet to add\n     */\n    addFacet(name) {\n        let facets = (this.getFacets()||[]).push(name);\n        this.setFacets(facets);\n    }\n\n    /**\n     * @param {string} name - name of facet to remove\n     */\n    removeFacet(name) {\n        let facets = this.getFacets() || [];\n        let idx = facets.indexOf(name);\n        if(idx>=0) {\n            facets.splice(idx, 1);\n            this.setFacets(facets);\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    fields(fields) {\n        this.setFields(fields);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} fields - list of field names to request for each search result\n     */\n    setFields (fields) {\n        if(fields && typeof(fields.push) === 'undefined')\n            fields = [fields];\n        this.query.fields = fields;\n    }\n\n    getFields() {\n        return this.query.fields;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this.query.page = page*1;\n    }\n\n    getPage() {\n        return this.query.page;\n    }\n\n    nextPage() {\n        this.setPage(this.query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this.query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this.query.size = size*1;\n    }\n\n    getPageSize() {\n        return this.query.size;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.query.sort = sort;\n    }\n\n    getSort() {\n        return this.query.sort;\n    }\n\n    getSortField() {\n        return this.query.sort.split(',')[0];\n    }\n\n    getSortOrder() {\n        return this.query.sort.split(',')[1] === 'asc';\n    }\n\n    /**\n     * @return {array} list of key-value pairs of sort options\n     */\n    getSortOptions() {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = this.defaultQuery;\n    }\n}\n\nexport default Query;\n","\nimport Query from './query';\n\nexport default function() {\n    return new Query();\n}\n","\n\nimport Q from 'q';\nimport ItemTypes from '../shared/types';\nimport QueryFactory from '../shared/query-factory';\nimport ItemFactory from '../models/factory';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Service service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate service objects.\n *\n * @see ItemService\n */\n\nclass ServiceService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/services';\n    }\n\n    /**\n     * Fetch metadata from the specified GeoPlatform Service's\n     * web-accessible implementation using either GetCapabilities\n     * or ESRI documentInfo.\n     * @param {Object} service - GeoPlatform Service object\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving service metadata\n     */\n    about( service, options ) {\n\n        return Q.resolve( service )\n        .then( svc => {\n            if(!svc) {\n                let err = new Error(\"Must provide service to get metadata about\");\n                err.status = 400;\n                err.error = \"Bad Request\";\n                throw err;\n            }\n            let opts = this.buildRequest({\n                method:'POST', url:this.baseUrl + '/about', data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => this._onError(e, \"ServiceService.about() - Error describing service\") );\n    }\n\n\n\n    /**\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service types\n     */\n    types (options) {\n\n        let query = QueryFactory()\n        .types(ItemTypes.STANDARD)\n        .resourceTypes('ServiceType')\n        .pageSize(50)\n        .getQuery();\n\n        return Q.resolve( query )\n        .then( (params) => {\n            let url = this.apiBase + '/api/items';\n            let opts = this.buildRequest({\n                method:'GET', url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response => response.results)\n        .catch(e => this._onError(e, \"ServiceService.types() - Error fetching service types\") );\n    }\n\n\n    /**\n     * @param {Object} service - GP Service definition\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving imported service\n     */\n    import (service, options) {\n\n        return Q.resolve( service )\n        .then( svc => {\n\n            if(svc.toJson) {\n                //if passed an ItemModel instance, convert to JSON\n                svc = svc.toJson();\n            }\n\n            let url = this.baseUrl + '/import';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(obj => ItemFactory(obj))\n        .catch(e => this._onError(e, \"ServiceService.import() - Error importing service\") );\n    }\n\n\n    /**\n     * @param {string} id - identifier of GP service to harvest layers for\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service layers\n     */\n    harvest (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/harvest';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => this._onError(e, \"ServiceService.harvest() - Error harvesting layers from service\") );\n\n    }\n\n    /**\n     * @param {string} id - identifier of GP service to live test\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service statistics\n     */\n    liveTest (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/test';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => this._onError(e, \"ServiceService.liveTest() - Error testing service\") );\n    }\n\n    /**\n     * @param {string} id - identifier of GP service to fetch statistics about\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service statistics\n     */\n    statistics (id, options) {\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/statistics';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => this._onError(e, \"ServiceService.statistics() - Error getting service statistics\") );\n    }\n\n}\n\nexport default ServiceService;\n","\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass GalleryService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/galleries';\n    }\n\n    addItem (galleryId, itemObj, options) {\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + galleryId + '/items';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data: itemObj, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => this._onError(e, \"GalleryService.addItem() - Error adding item\") );\n    }\n\n    removeItem( galleryId, itemId, options) {\n        return Q.resolve( this.baseUrl + '/' + galleryId + '/items/' + itemId )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:'DELETE', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response=>true)\n        .catch(e => this._onError(e, \"GalleryService.addItem() - Error adding item\") );\n    }\n\n}\n\nexport default GalleryService;\n","\n\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate Community objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass CommunityService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/communities';\n    }\n\n}\n\nexport default CommunityService;\n","\n\nimport Q from 'q';\nimport BaseService from './base';\n\nconst METHODS = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n\n\nclass UtilsService extends BaseService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        this.baseUrl = baseUrl;\n    }\n\n    /**\n     * @param {string} property - optional capa property to specifically request\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving capabilities object\n     */\n    capabilities (property, query, options) {\n\n        let url = this.baseUrl + '/api/capabilities';\n        if(property)\n            url += '/' + property;\n\n        return Q.resolve( url )\n        .then( (url) => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query||{}, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => this._onError(e, \"UtilsService.capabilities() - Error getting capabilities\") );\n    }\n\n    /**\n     * @param {File} file\n     * @param {string} format\n     * @param {Object} options\n     * @return {Promise}\n     */\n    parseFile (file, format, options) {\n\n        var url = this.baseUrl + '/api/utils/parse';\n\n        return Q.resolve( url )\n        .then( url => {\n\n            let opts = this.buildRequest({\n                method:\"POST\",  url:url,\n                data: { format: format },\n                file: file,\n                formData: true,   //NodeJS (RequestJS)\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then( response => response )\n        .catch(e => {\n            let err = new Error(`UtilsService.parseFile() - Error parsing file: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0) {\n            let err = new Error(`Unsupported HTTP method ${options.method}`);\n            err.status = 400;\n            err.error = \"Bad Request\";\n            throw err;\n        }\n\n        if(!options.url) {\n            let err = new Error(`Must specify a URL for HTTP requests`);\n            err.status = 400;\n            err.error = \"Bad Request\";\n            throw err;\n        }\n\n        options.timeout = this.timeout;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts);\n    }\n\n}\n\nexport default UtilsService;\n","\nimport QueryParameters from './parameters';\n\nconst SORT_OPTIONS_DEFAULT = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nclass KGQuery {\n\n    constructor() {\n\n        this.defaultQuery = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n        this.query = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n    }\n\n\n\n    getQuery() {\n        let result = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    parameter(name, value) {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    setParameter (name, value) {\n        if(value === null || value === undefined)\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    getParameter (key) {\n        return this.getParameter(key);\n    }\n\n    applyParameters (obj) { \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    q(text) {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setQ (text) {\n        this.setParameter(QueryParameters.QUERY, text);\n    }\n\n    getQ() {\n        return this.getParameter(QueryParameters.QUERY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {array[string]} types - KG classifiers for which concepts should be returned\n     */\n    classifiers(types) {\n        this.setClassifiers(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - KG classifiers for which concepts should be returned\n     */\n    setClassifiers (types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.TYPES, types);\n    }\n\n    /**\n     * @return {array[string]} KG classifiers for which concepts should be returned\n     */\n    getClassifiers () {\n        return this.getParameter(QueryParameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.types()\n     * query parameter (they map to different HTTP request parameters).\n     * @param {array[string]} objTypes - Item object type names\n     */\n    types(objTypes) {\n        this.setTypes(objTypes);\n        return this;\n    }\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.setTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @param {array[string]} objTypes - Item object type names\n     */\n    setTypes (objTypes) {\n        if(objTypes && objTypes.push === 'undefined')\n            objTypes = [objTypes];\n        this.setParameter(QueryParameters.FOR_TYPES, objTypes);\n    }\n\n    /**\n     * Get the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.getTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @return {array[string]} Item object type names\n     */\n    getTypes () {\n        return this.getParameter(QueryParameters.FOR_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this.query.page = page*1;\n    }\n\n    getPage() {\n        return this.query.page;\n    }\n\n    nextPage() {\n        this.setPage(this.query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this.query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this.query.size = size*1;\n    }\n\n    getPageSize() {\n        return this.query.size;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.query.sort = sort;\n    }\n\n    getSort() {\n        return this.query.sort;\n    }\n\n    getSortField() {\n        return this.query.sort.split(',')[0];\n    }\n\n    getSortOrder() {\n        return this.query.sort.split(',')[1] === 'asc';\n    }\n\n    /**\n     * @return {array} list of key-value pairs of sort options\n     */\n    getSortOptions() {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = this.defaultQuery;\n    }\n}\n\nexport default KGQuery;\n","\nimport Q from 'q';\nimport BaseService from './base';\nimport QueryParameters from '../shared/parameters';\n\n\nclass KGService extends BaseService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/recommender';\n    }\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving recommended concepts as search results\n     */\n    suggest (query, options) {\n        let url = this.baseUrl + '/suggest';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.suggest() - Error suggesting concepts: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving concept types as search results\n     */\n    types (query, options) {\n        let url = this.baseUrl + '/types';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.types() - Error searching types: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving concept sources as search results\n     */\n    sources (query, options) {\n        let url = this.baseUrl + '/sources';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.sources() - Error searching sources: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n\n    /**\n     * internal method used by exposed methods\n     */\n    _search (url, query, options) {\n        return Q.resolve( true )\n        .then( () => {\n\n            if(query && typeof(query.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                query = query.getQuery();\n            }\n\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query, options:options\n            });\n            return this.execute(opts);\n        });\n    }\n\n\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts);\n    }\n\n}\n\nexport default KGService;\n","\n\n\nexport default  {\n    PURPOSE             : 'purposes',\n    FUNCTION            : 'functions',\n    TOPIC_PRIMARY       : 'primaryTopics',\n    TOPIC_SECONDARY     : 'secondaryTopics',\n    SUBJECT_PRIMARY     : 'primarySubjects',\n    SUBJECT_SECONDARY   : 'secondarySubjects',\n    COMMUNITY           : 'communities',\n    AUDIENCE            : 'audiences',\n    PLACE               : 'places',\n    CATEGORY            : 'categories'\n};\n","\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport LayerService from './layer';\nimport ServiceService from './service';\nimport GalleryService from './gallery';\nimport CommunityService from './community';\nimport DatasetService from './dataset';\nimport MapService from './map';\n\n/**\n * @param {any} arg - string type or object with type property\n * @param {string} baseUrl - base endpoint of GeoPlatform API\n * @return {ItemService}\n */\nconst ServiceFactory = function(arg, baseUrl, httpClient) {\n    let type = (typeof(arg) === 'string') ?\n        arg : (arg && arg.type ? arg.type : null);\n    if(!type) throw new Error(\"Must provide a type or object with a type specified\");\n    if(!baseUrl) throw new Error(\"Must provide a base url\");\n    if(!httpClient) throw new Error(\"Must provide an http client to use to make requests\");\n    switch(type) {\n        case ItemTypes.LAYER:   return new LayerService(  baseUrl, httpClient);\n        case ItemTypes.SERVICE: return new ServiceService(baseUrl, httpClient);\n        case ItemTypes.MAP:     return new MapService(    baseUrl, httpClient);\n        case ItemTypes.GALLERY: return new GalleryService(baseUrl, httpClient);\n        case ItemTypes.COMMUNITY: return new CommunityService(baseUrl, httpClient);\n        case ItemTypes.DATASET: return new DatasetService(baseUrl, httpClient);\n        default:                return new ItemService(   baseUrl, httpClient);\n    }\n};\n\nexport default ServiceFactory;\n","export default {\n\n    //ualUrl: '...',\n    //appId: '...',\n\n    configure: function(options) {\n        Object.assign(this, options);\n    }\n};\n"],"names":["HttpClientBase","options","setTimeout","timeout","setAuthToken","token","arg","Error","opts","JQueryHttpClient","method","url","json","dataType","params","data","processData","contentType","headers","Authorization","o","hasOwnProperty","jQuery","d","Q","defer","success","resolve","error","xhr","status","message","reject","ajax","promise","NGHttpClient","angular","$http","useXDomain","injector","get","then","response","catch","NodeHttpClient","qs","file","fs","require","formData","value","createReadStream","path","filename","originalFilename","Object","assign","body","auth","deferred","request","checkAndHandleError","e","props","code","connect","statusCode","babelHelpers.typeof","sidx","indexOf","eidx","item","substring","uri","pathname","JSON","parse","err","DATASET","SERVICE","LAYER","MAP","GALLERY","CONTACT","ORGANIZATION","COMMUNITY","CONCEPT","CONCEPT_SCHEME","STANDARD","BaseService","httpClient","setUrl","client","httpMethods","baseUrl","apiBase","milliseconds","prefixMsg","title","msg","ItemProperties","ID","key","forType","URI","TYPE","CREATED","MODIFIED","LAST_MODIFIED_BY","IDENTIFIERS","multi","CREATED_BY","LABEL","RESOURCE_TYPES","type","TITLE","DESCRIPTION","ALTERNATE_TITLES","KEYWORDS","GEOGRAPHIC_EXTENT","TEMPORAL_EXTENT","STATISTICS","LANDING_PAGE","STATUS","VISIBILITY","THEMES","PUBLISHERS","CONTACTS","CONTRIBUTORS","DISTRIBUTIONS","CLASSIFIERS","ACCESS_RIGHTS","RELATED_RESOURCES","USED_BY","PURPOSE","HREF","SERVICE_TYPE","DATASETS","LAYER_TYPE","LAYER_NAME","LEGEND","SERVICES","SUPPORTED_FORMATS","MIN_SCALE","MAX_SCALE","ItemProps","AssetProps","concat","ServiceProps","LayerProps","MapProps","BASE_LAYER","MAP_LAYERS","THUMBNAIL","ANNOTATIONS","GalleryProps","GALLERY_ITEMS","ConceptProps","ContactProps","FULL_NAME","ORGANIZATION_NAME","POSITION_TITLE","EMAIL","TELEPHONE","ADDRESS","OrgProps","NAME","PARENT_ORGANIZATION","ItemTypes","PropertiesFor","slice","mapArray","arr","fn","len","length","res","i","BaseModel","_data","property","undefined","newValue","isItem","push","toItem","v","stringify","isObj","current","removeObject","removeValue","id","k","idx","each","p","splice","set","obj","itemFactory","getFactory","result","console","log","ItemFactory","parentJson","isMulti","map","toJson","parseDateLong","date","getTime","isNullUnDef","isUnDef","ItemModel","default","setUri","setIdentifiers","addTo","removeFrom","setAlternateTitles","setCreatedBy","setLabel","setDescription","setKeywords","setLandingPage","setStatus","setVisibility","setPurpose","setThemes","setPublishers","setContacts","setContributors","setResourceTypes","setDistributions","setClassifiers","setUsedBy","setAccessRights","setRelatedResources","setExtent","str","split","minx","trim","miny","maxx","maxy","extent","getExtent","setTemporalExtent","val","startDate","endDate","temporal","getTemporalExtent","getType","getLabel","propertyToJson","DatasetModel","setServices","ServiceModel","setHref","setServiceType","setDatasets","LEGEND_PROPS","URL","CONTENT","MEDIA_TYPE","WIDTH","HEIGHT","VALUES","LayerModel","setLayerType","setLayerName","setLegend","setFormats","setMinScale","setMaxScale","min","max","prop","legend","getLegend","items","LayerStateProperties","LAYER_ID","OPACITY","MapModel","layers","getLayers","setLayers","setThumbnail","setBaseLayer","states","toLayerState","state","layerId","layer","filter","ls","setAnnotations","fromLayerState","object","getId","layer_id","opacity","visibility","GalleryItemProperties","ASSET_ID","ASSET","ASSET_TYPE","GalleryModel","getItems","setItems","toGalleryItem","assetId","newPosition","fromGalleryItem","asset","CommunityModel","ADDRESS_STREET","ADDRESS_CITY","ADDRESS_STATE","ADDRESS_ZIP","ADDRESS_COUNTRY","ContactModel","setFullName","setOrgName","setPosition","setEmail","setPhone","setAddress","setStreet","address","getAddress","setCity","setState","setZipCode","setCountry","OrganizationModel","setName","setParentOrganization","ConceptModel","setScheme","ConceptSchemeModel","factory","SearchResults","totalResults","results","ItemService","buildRequest","execute","_onError","itemObj","patch","getQuery","format","isFile","ro","createRequestOpts","DatasetService","MapService","LayerService","req","keys","missing","find","srs","bbox","height","width","info_format","x","y","j","TYPES","QUERY","CONTRIBUTED_BY","CREATOR","SVC_TYPES","THEMES_ID","THEMES_LABEL","THEMES_URI","PUBLISHERS_LABEL","PUBLISHERS_URI","USED_BY_ID","USED_BY_LABEL","USED_BY_URI","SCHEMES_ID","SCHEMES_LABEL","SCHEMES_URI","EXTENT","MODIFIED_BEFORE","MODIFIED_AFTER","BEGINS","ENDS","RESOURCE_TYPE","FOR_TYPES","SERVICE_TYPES","CONCEPT_SCHEMES","FIELDS_DEFAULT","FACETS_DEFAULT","QueryFacets","SORT_OPTIONS_DEFAULT","label","Query","defaultQuery","page","size","total","sort","fields","includeFacets","query","join","name","setParameter","getParameter","text","setQ","QueryParameters","types","setTypes","user","themes","parameter","param","publishers","PUBLISHERS_ID","ids","schemes","setSchemes","SCHEMES","setServiceTypes","vis","beforeOrAfter","setModified","dir","oppProp","toBboxString","setBeginDate","Date","setEndDate","begin","end","setBetween","begins","ends","names","setFacets","facets","getFacets","setFields","setPage","isNaN","setPageSize","order","setSort","ServiceService","service","svc","QueryFactory","resourceTypes","pageSize","GalleryService","galleryId","itemId","CommunityService","UtilsService","KGQuery","objTypes","KGService","_search","FUNCTION","TOPIC_PRIMARY","TOPIC_SECONDARY","SUBJECT_PRIMARY","SUBJECT_SECONDARY","AUDIENCE","PLACE","CATEGORY","ServiceFactory","configure"],"mappings":"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"}