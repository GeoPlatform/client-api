{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://@geoplatform/client/node/http/node.ts","ng://@geoplatform/client/node/services/proxies/base.ts","ng://@geoplatform/client/node/services/proxies/item.ts","ng://@geoplatform/client/node/services/proxies/service.ts","ng://@geoplatform/client/node/services/proxies/layer.ts","ng://@geoplatform/client/node/services/proxies/dataset.ts","ng://@geoplatform/client/node/services/proxies/map.ts","ng://@geoplatform/client/node/services/proxies/gallery.ts","ng://@geoplatform/client/node/services/proxies/utils.ts","ng://@geoplatform/client/node/services/proxies/kg.ts","ng://@geoplatform/client/node/services/proxies/agol.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","NodeHttpClient","options","_super","call","this","__","constructor","prototype","create","tslib_1.__extends","createRequestOpts","opts","method","url","json","timeout","params","qs","file","fs","require","Error","formData","value","createReadStream","path","filename","originalFilename","assign","data","body","headers","token","auth","bearer","cookie","getCookie","Cookie","authCookieName","o","execute","_this","request","Promise","resolve","reject","error","response","checkAndHandleError","then","catch","e","props","message","status","code","connect","statusCode","sidx","indexOf","eidx","item","substring","uri","pathname","JSON","parse","err","GPHttpClient","ServiceProxy","bindRoutes","router","routes","paths","auths","forEach","route","key","overrides","needsAuth","logger","debug","req","res","next","promise","stringify","svc","getService","onExecute","result","onResponse","onError","finally","onFinish","finishFn","getClient","accessToken","jwt","warn","getAuthCookie","length","Config","client","svcClass","serviceClass","ItemService","ualUrl","service","setTimeout","setLogger","cookies","parseCookies","console","log","str","split","pair","sepIdx","substr","trim","val","slice","undefined","decodeURIComponent","Routes","query","Query","search","get","id","save","remove","end","patch","clone","execFn","export","format","mimeType","disposition","set","setHeader","send","getUri","fields","input","files","import","associations","versions","version","types","about","harvest","liveTest","statistics","style","styleId","styles","describe","validate","locate","location","parseFile","capabilities","store","KGQuery","suggest","sources","searchItems","searchGroups","searchOrgs","getItem","getGroup","getOrg","express","Router","AgolService","DatasetService","GalleryService","pathBaseDefault","KGService","LayerService","MapService","ServiceService","UtilsService"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nimport { GPHttpClient } from '@geoplatform/client';\n\n\nclass NodeHttpClient extends GPHttpClient {\n\n    /**\n     * @param options.timeout\n     * @param options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options ?: { [key:string] : any }) {\n        super(options);\n    }\n\n    /**\n     * @param options - request configuration\n     * @return request object\n     */\n    createRequestOpts(options : { [key:string] : any }) : any {\n\n        let opts : {[key:string]: any} = {\n            method: options.method,\n            url: options.url,\n            json: false !== options.json,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.params) {\n            opts.qs = options.params;\n        }\n\n        if(options.file) {\n            const fs = require('fs');\n            if(!fs) throw new Error(\"Module 'fs' not available\");\n            opts.formData = {\n                file: {\n                    value:  fs.createReadStream(options.file.path),\n                    options: {\n                        filename: options.file.originalFilename\n                    }\n                }\n            };\n            Object.assign(opts.formData, options.data||{});\n\n        } else if(options.data) {\n            if(options.formData) {\n                opts.formData = options.data;\n            } else {\n                opts.body = options.data;\n            }\n        }\n\n        if(options.headers) {\n            opts.headers = options.headers;\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.auth = { 'bearer': token };\n            }\n        }\n        let cookie = this.getCookie();\n        if(cookie) {\n            opts.headers = opts.headers || {};\n            opts.headers.Cookie = this.authCookieName + '=' + cookie;\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        // console.log(JSON.stringify(opts));\n\n        return opts;\n    }\n\n\n\n    /**\n     *\n     */\n    execute(options : any) : Promise<any> {\n\n        const request = require('request');\n        // require('request-debug')(request);\n        if(!request) {\n            throw new Error(\"Module 'request' not available\");\n        }\n\n        return new Promise<any>( (resolve, reject) => {\n            request(options, (error : any, response : any, body : any) => {\n                this.checkAndHandleError(error, response)\n                .then( () =>  {\n                    if(options.json === false) resolve( response );\n                    else resolve( body );\n                })\n                .catch( e => reject(e) );\n            });\n        });\n\n    }\n\n\n    /**\n     *\n     */\n    checkAndHandleError (error : any, response : any) : Promise<any> {\n\n        let props : { [key:string]: any } = {\n            message: null,\n            error: null,    //error type\n            status: 200\n        };\n\n        if(error) {\n            // Logger.debug(\"Error generated by request library: \" + error.code);\n\n            if(error.code === 'ETIMEDOUT' || error.code === 'ESOCKETTIMEDOUT') {\n\n                props.status = 500;\n                props.error = \"Connection Timeout\";\n                props.message = \"The response from the service took too long to read\";\n\n                if(error.connect === true) {\n                    props.message = \"Unable to establish a connection to the service\";\n                }\n\n            } else {\n                return Promise.reject(error);\n            }\n\n        } else if(response.statusCode < 200 || response.statusCode > 204) {\n\n            // Logger.debug('Error returned by remote endpoint (' + response.statusCode + ')');\n            // Logger.debug(JSON.stringify(response));\n\n            props.status = response.statusCode;\n\n            if(response.body && typeof(response.body) === 'object') {\n                props = response.body;\n                props.status = props.status || response.statusCode;\n                props.message = props.message || \"An error occurred communicating with service\";\n\n                if(response.statusCode === 409) {\n                    let sidx = response.body.message.indexOf(\" \");\n                    let eidx = response.body.message.indexOf(' already exists');\n                    if(sidx >= 0 && eidx > sidx) {\n                        props.item = response.body.message.substring(sidx+1, eidx);\n                    }\n                }\n\n            } else {\n\n                switch(response.statusCode) {\n                    case 404 :\n                        props.error = \"Not Found\";\n                        props.message = response.request.uri.pathname + \" cannot be found\";\n                        break;\n                    case 401 :\n                        props.error = \"Unauthenticated\";\n                        props.message = \"You are not authenticated\";\n                        break;\n                    case 403 :\n                        props.error = \"Unauthorized\";\n                        props.message = \"You are not authorized to access \" + response.request.uri.pathname;\n                        break;\n                    case 409 :\n                        props.error = \"Conflict\";\n                        props.message = \"Item already exists\";\n\n                        // pattern received is: { ..., message: 'Resource <identifier> already exists', ... }\n                        try {\n                            let json = JSON.parse(response.body);\n                            let sidx = json.message.indexOf(\" \");\n                            let eidx = json.message.indexOf(' already exists');\n                            if(sidx >= 0 && eidx > sidx) {\n                                props.item = json.message.substring(sidx+1, eidx);\n                            }\n                        } catch( e ) {\n                            props.message += '.  Unable to extract existing identifier from service response';\n                        }\n                        break;\n\n                    default:\n\n                        try {\n                            let json = JSON.parse(response.body);\n                            props = json;\n                            props.status = response.statusCode;\n                            // Logger.debug(\"PARSED ERROR: \" + JSON.stringify(props));\n\n                        } catch (e) {\n                            props.error = \"Server Error\";\n                            props.message = response.body;\n                            // Logger.debug(\"DEFAULTED ERROR: \" + JSON.stringify(props));\n                        }\n                }\n\n            }\n\n        }\n\n        if( props.status < 200 || props.status > 204 ) {\n\n            props.error = props.error || \"Server Error\";\n            props.status = props.status || response.statusCode;\n            props.message = props.message || \"An error occurred communicating with service\";\n\n            let err = new Error(props.message);\n            Object.assign(err, props);\n\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err);\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + JSON.stringify(err));\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err.message);\n            return Promise.reject(err);\n        }\n\n        return Promise.resolve(null);\n    }\n\n}\n\n\nexport default NodeHttpClient;\n","\n\nimport NodeHttpClient from '../../http/node';\nimport { Config, ItemService } from '@geoplatform/client';\n\nconst GP_AUTH_COOKIE = 'gpoauth-a';\n\nconst ServiceProxy = {\n\n    /**\n     * @param {Router} router - ExpressJS router instance\n     * @param {array[object]} routes - list of routes to map to the router\n     * @param {object} options - additional configuration needed\n     */\n    bindRoutes: function(router : any, routes : any[], options ?: any) {\n\n        options = options || {};\n        let paths = options.paths || {};\n        let auths = options.auth || {};\n\n        routes.forEach( route => {\n\n            if(paths[route.key] === false) return;  //disabled endpoint\n            if(!paths[route.key] && !route.path) return; //something is wrong with route\n\n            //newer route override...\n            // {\n            //   'create': {\n            //     'path': 'custom/path',\n            //     'auth': true,\n            //     'onResponse': function(result, res, next) { }\n            //   }\n            // }\n            let overrides = options[route.key] || {};\n\n            //look for overriden paths in either new override structure or older key:path format\n            let path = '/' + ( overrides.path || paths[route.key] || route.path );\n            //look for authentication override in either new structure or older format\n            let needsAuth = overrides.auth || auths[route.key] || route.auth;\n\n            if(options.logger) {\n                options.logger.debug(`Binding Service Route [${route.method}] ${path}`)\n            }\n            router[route.method]( path, (req : any, res : any, next : Function) => {\n\n                let promise = null;\n                if(typeof(route.onExecute) !== 'function') {\n                    promise = Promise.resolve( null );\n                } else {\n                    if(options.logger) {\n                        options.logger.debug(`Executing Service Route [${route.method}] ${path}`)\n                        options.logger.debug(JSON.stringify(req.params));\n                        options.logger.debug(\"-------------------------\");\n                    }\n                    let svc = this.getService(req, needsAuth, options);\n\n                    try {\n                        promise = route.onExecute(svc, req);\n                    } catch( e ) {\n                        promise = Promise.reject(e);\n                    }\n                }\n\n                promise.then( ( result : any ) => {\n                    let onResponse = overrides.onResponse || route.onResponse;\n                    if(onResponse) onResponse(result, res, next);\n                    else res.json(result);\n                })\n                .catch( (err : Error) => {\n                    if(overrides.onError) overrides.onError(err);\n                    if(options.onError) options.onError(route.key, err);\n                    next(err);\n                })\n                .finally( () => {\n\n                    //if route has a finish function defined, invoke it\n                    if(overrides.onFinish) {\n                        overrides.onFinish(req, res);\n                    }\n\n                    //if proxy has an overall finish function defined, invoke it\n                    let finishFn = options.onFinish;\n                    if(finishFn) finishFn(route.key, req, res);\n                });\n            })\n        });\n\n    },\n\n    /**\n    * @param {HttpRequest} req - incoming http request being proxied\n    * @param {boolean} needsAuth - flag indicating if the request must provide an authentication token\n    * @param {object} options - additional configuration options\n    * @return {HttpClient} client to use to make requests to GeoPlatform API endpoint\n    */\n    getClient: function(req : any, needsAuth : boolean, options ?: any) {\n\n        let token = req.accessToken || null;\n        if(needsAuth && options && options.logger) {\n            if(!token) {\n                options.logger.warn(\"ServiceProxy.getClient() - No Access Token was provided on incoming request header!\");\n            } else if(!!options.debug) {\n                options.logger.debug(`ServiceProxy.getClient() - Token: ${token}`);\n                options.logger.debug(`ServiceProxy.getClient() - JWT: ${req.jwt}`);\n            }\n        }\n\n        //check the incoming proxied request for cookies that should be forwarded along\n        let cookie = this.getAuthCookie(req);\n        // console.log(\"COOKIE IS \" + cookie);\n        if(cookie && !cookie.length) cookie = null;\n\n        // if(options && options.logger) {\n        //     options.logger.debug(\"Proxying Request Cookie: \" + cookie);\n        //     options.logger.debug(\" \");\n        // } else {\n        //     console.log(\"Proxying Request Cookie: \" + cookie);\n        // }\n\n\n        return new NodeHttpClient({\n            timeout: Config.timeout,\n            token: needsAuth ? token : null,\n            cookie: needsAuth ? cookie : null\n        });\n    },\n\n\n    /**\n     * @param {HttpRequest} req - incoming http request being proxied\n     * @param {boolean} needsAuth - flag indicating if request requires authorization token\n     * @param {object} options - additional configuration options\n     */\n    getService: function(req : any, needsAuth : boolean, options ?: any) {\n        let client = this.getClient(req, needsAuth, options);\n        let svcClass = options.serviceClass || ItemService;\n        // console.log(\"Proxying to \" + Config.ualUrl);\n        if(options.logger) {\n            options.logger.debug(`Proxying to ${Config.ualUrl}`);\n            // options.logger.debug(\"Using service class: \" + svcClass);\n        }\n        let service = new svcClass(Config.ualUrl, client);\n        service.setTimeout(Config.timeout || 30000);\n        if(options.logger) {\n            service.setLogger(options.logger);\n        }\n        return service;\n    },\n\n    getAuthCookie: function(req: any) : string {\n        if(!req) return null;\n        if(req.cookies) {   //parsed by cookieParser already\n            // console.log(\"COOKIES PARSED ... \");\n            // console.log(\"COOKIES ARE...\");\n            // console.log(JSON.stringify(req.cookies));\n            // console.log(\" \");\n            // console.log(\"AUTH COOKIE IS \" + req.cookies[GP_AUTH_COOKIE]);\n            return req.cookies[GP_AUTH_COOKIE];\n        } else if(req.headers.cookie) {\n            // console.log(\"COOKIES NEED PARSING\");\n            try {\n                let cookies = this.parseCookies(req.headers.cookie);\n                return cookies[GP_AUTH_COOKIE];\n            } catch( e ) {\n                console.log(\"ERROR parsing cookies: \" + e.message);\n                return null;\n            }\n        }\n    },\n\n    parseCookies: function parse(str : string) {\n        if (!str || typeof str !== 'string' || !str.length) return null;\n\n        let result = {}\n        let expr = /; */;\n        let pairs = str.split(expr);\n\n        pairs.forEach( pair => {\n            let sepIdx = pair.indexOf('=');\n\n            if (sepIdx < 0) return; //ignore non- 'key=value' values\n\n            let key = pair.substr(0, sepIdx).trim();\n            let val = pair.substr(++sepIdx, pair.length).trim();\n\n            // quoted values\n            if ('\"' == val[0]) val = val.slice(1, -1);\n\n            // only assign once\n            if (undefined == result[key]) {\n                let value = val;\n                try {\n                    value = decodeURIComponent(val);\n                } catch (e) { }\n                result[key] = value;\n            }\n        });\n\n        return result;\n    }\n\n\n\n\n};\n\nexport default ServiceProxy;\n","\nimport { Query, ItemService } from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'items',\n        auth: false,\n        onExecute: function(svc : ItemService, req : any) {\n            let query = new Query(req.query);\n            return svc.search(query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'items/:id',\n        auth: false,\n        onExecute: function(svc : ItemService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'items',\n        auth: true,\n        onExecute: function(svc : ItemService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'items/:id',\n        auth: true,\n        onExecute: function(svc : ItemService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'items/:id',\n        auth: true,\n        onExecute: function(svc : ItemService, req : any) {\n            return svc.remove(req.params.id);\n        },\n        onResponse: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'items/:id',\n        auth: true,\n        onExecute: function(svc : ItemService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'clone',\n        method: 'post',\n        path: 'items/:id/clone',\n        auth: true,\n        onExecute: function(svc, req) { return svc.clone(req.params.id, req.body); }\n    },\n    {\n        key: 'clone',\n        method: 'post',\n        path: 'items/:id/clone',\n        auth: true,\n        execFn: function(svc, req) { return svc.clone(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'items/:id/export',\n        auth: false,\n        onExecute: function(svc : ItemService, req : any) {\n            return svc.export(req.params.id, req.query.format); },\n        onResponse: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'uri',\n        method: 'post',\n        path: 'items/uri',\n        auth: false,\n        onExecute: function(svc : ItemService, req : any) {\n            return svc.getUri(req.body);\n        },\n        onResponse: function(result : any, res : any) {\n            res.json({ uri: result });\n        }\n    },\n    {\n        key: 'exists',\n        method: 'post',\n        path: 'items/exists',\n        auth: false,\n        onExecute: function(svc : ItemService, req : any) {\n            return svc.getUri(req.body)\n            .then( uri => {\n                let fields = ['serviceType','services','scheme','themes','publishers','keywords'];\n                let query : Query = new Query().uri(uri).fields(fields);\n                return svc.search(query);\n            });\n        }\n    },\n    {\n        key: 'import',\n        method: 'post',\n        path: 'items/import',\n        auth: true,\n        onExecute: function(svc : ItemService, req : any) {\n            let input = req.body.url || req.files.file;\n            return svc.import(input, req.query.format);\n        }\n    },\n    {\n        key: 'associations',\n        method: 'get',\n        path: 'items/:id/associations',\n        auth: false,\n        onExecute: function(svc : ItemService, req : any) {\n            return svc.associations(req.params.id, req.query); }\n    },\n    {\n        key: 'versions',\n        method: 'get',\n        path: 'items/:id/versions',\n        auth: false,\n        onExecute: function(svc : ItemService, req : any) {\n            return svc.versions(req.params.id, req.query); }\n    },\n    {\n        key: 'getVersion',\n        method: 'get',\n        path: 'items/:id/versions/:version',\n        auth: false,\n        onExecute: function(svc : ItemService, req : any) {\n            return svc.get(req.params.id, { version: req.params.version });\n        }\n    }\n\n    // TODO findMultiple\n];\n\n/**\n *\n */\nfunction bindRoutes(router : any, options ?: any) {\n    //bind common endpoints\n    options.pathBaseDefault = \"items\";\n    options.serviceClass = ItemService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n}\n\n\n\n\n/**\n * ItemServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction ItemServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"ItemServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"ItemServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    bindRoutes(router, options);\n\n    return router;\n}\n\nexport default ItemServiceProxy;\n","\n\nimport {ServiceService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'services',\n        auth: false,\n        onExecute: function(svc: ServiceService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'services/:id',\n        auth: false,\n        onExecute: function(svc : ServiceService, req : any ) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'services',\n        auth: true,\n        onExecute: function(svc : ServiceService, req : any ) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'services/:id',\n        auth: true,\n        onExecute: function(svc : ServiceService, req : any ) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'services/:id',\n        auth: true,\n        onExecute: function(svc : ServiceService, req : any ) {\n            return svc.remove(req.params.id);\n        },\n        onResponse: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'services/:id',\n        auth: true,\n        onExecute: function(svc : ServiceService, req : any ) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'services/:id/export',\n        auth: false,\n        onExecute: function(svc : ServiceService, req : any ) {\n            return svc.export(req.params.id, req.query.format);\n        },\n        onResponse: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key: 'types',\n        method: 'get',\n        path: 'serviceTypes',\n        auth: false,\n        onExecute: function(svc : ServiceService) {\n            return svc.types();\n        }\n    },\n    {\n        key: 'import',\n        method: 'post',\n        path: 'services/import',\n        auth: true,\n        onExecute: function(svc : ServiceService, req : any ) {\n            return svc.import(req.body);\n        }\n    },\n    {\n        key: 'about',\n        method: 'get',\n        path: 'services/:id/about',\n        auth: false,\n        onExecute: function(svc : ServiceService, req : any ) {\n            return svc.about(req.params.id);\n        }\n    },\n    {\n        key: 'harvest',\n        method: 'get',\n        path: 'services/:id/harvest',\n        auth: false,\n        onExecute: function(svc : ServiceService, req : any ) {\n            return svc.harvest(req.params.id);\n        }\n    },\n    {\n        key: 'test',\n        method: 'get',\n        path: 'services/:id/test',\n        auth: false,\n        onExecute: function(svc : ServiceService, req : any ) {\n            return svc.liveTest(req.params.id);\n        }\n    },\n    {\n        key: 'statistics',\n        method: 'get',\n        path: 'services/:id/statistics',\n        auth: false,\n        onExecute: function(svc : ServiceService, req : any ) {\n            return svc.statistics(req.params.id);\n        }\n    }\n];\n\n\n\n\n/**\n *\n */\nfunction ServiceServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"ServiceServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"ServiceServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = ServiceService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default ServiceServiceProxy;\n","\n\nimport {LayerService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\n\n\nconst Routes = [\n    {\n        key   : 'search',\n        method: 'get',\n        path  : 'layers',\n        auth  : false,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key   : 'get',\n        method: 'get',\n        path  : 'layers/:id',\n        auth  : false,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key   : 'create',\n        method: 'post',\n        path  : 'layers',\n        auth  : true,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key   : 'update',\n        method: 'put',\n        path  : 'layers/:id',\n        auth  : true,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key   : 'delete',\n        method: 'delete',\n        path  : 'layers/:id',\n        auth  : true,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.remove(req.params.id);\n        },\n        onResponse: function(\n            // @ts-ignore\n            result : any,\n            res : any) { res.status(204).end(); }\n    },\n    {\n        key   : 'patch',\n        method: 'patch',\n        path  : 'layers/:id',\n        auth  : true,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key   : 'export',\n        method: 'get',\n        path  : 'layers/:id/export',\n        auth  : false,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.export(req.params.id, req.query.format); }\n            ,\n        onResponse: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    },\n    {\n        key   : 'style',\n        method: 'get',\n        path  : 'layers/:id/style',\n        auth  : false,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.style(req.params.id);\n        }\n    },\n    {\n        key   : 'styleById',\n        method: 'get',\n        path  : 'layers/:id/styles/:styleId',\n        auth  : false,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.style(req.params.id, req.params.styleId);\n        }\n    },\n    {\n        key   : 'styles',\n        method: 'get',\n        path  : 'layers/:id/styles',\n        auth  : false,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.styles(req.params.id);\n        }\n    },\n    {\n        key   : 'describe',\n        method: 'post',\n        path  : 'layers/:id/describe',\n        auth  : false,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.describe(req.params.id, req.body);\n        }\n    },\n    {\n        key   : 'validate',\n        method: 'post',\n        path  : 'layers/:id/validate',\n        auth  : false,\n        onExecute: function(svc : LayerService, req : any) {\n            return svc.validate(req.params.id, req.body);\n        }\n    }\n];\n\n\n\n/**\n *\n */\nfunction LayerServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"LayerServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"LayerServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = LayerService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default LayerServiceProxy;\n","\n\nimport {DatasetService} from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'datasets',\n        auth: false,\n        onExecute: function(svc : DatasetService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'datasets/:id',\n        auth: false,\n        onExecute: function(svc : DatasetService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'datasets',\n        auth: true,\n        onExecute: function(svc : DatasetService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'datasets/:id',\n        auth: true,\n        onExecute: function(svc : DatasetService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'datasets/:id',\n        auth: true,\n        onExecute: function(svc : DatasetService, req : any) {\n            return svc.remove(req.params.id);\n        },\n        onResponse: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'datasets/:id',\n        auth: true,\n        onExecute: function(svc : DatasetService, req : any) {\n            return svc.patch(req.params.id, req.body); }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'datasets/:id/export',\n        auth: false,\n        onExecute: function(svc : DatasetService, req : any) {\n            return svc.export(req.params.id, req.query.format);\n        },\n        onResponse: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n\n/**\n * DatasetServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction DatasetServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"DatasetServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"DatasetServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = DatasetService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default DatasetServiceProxy;\n","\n\nimport {MapService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'maps',\n        auth: false,\n        onExecute: function(svc : MapService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'maps/:id',\n        auth: false,\n        onExecute: function(svc : MapService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'maps',\n        auth: true,\n        onExecute: function(svc : MapService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'maps/:id',\n        auth: true,\n        onExecute: function(svc : MapService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'maps/:id',\n        auth: true,\n        onExecute: function(svc : MapService, req : any) {\n            return svc.remove(req.params.id); }\n            ,\n        onResponse: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'maps/:id',\n        auth: true,\n        onExecute: function(svc : MapService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'maps/:id/export',\n        auth: false,\n        onExecute: function(svc : MapService, req : any) {\n            return svc.export(req.params.id, req.query.format); }\n            ,\n        onResponse: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n/**\n * MapServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction MapServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"MapServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"MapServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = MapService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default MapServiceProxy;\n","\n\nimport {GalleryService} from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\nconst Routes = [\n    {\n        key: 'search',\n        method: 'get',\n        path: 'galleries',\n        auth: false,\n        onExecute: function(svc : GalleryService, req : any) {\n            return svc.search(req.query);\n        }\n    },\n    {\n        key: 'get',\n        method: 'get',\n        path: 'galleries/:id',\n        auth: false,\n        onExecute: function(svc : GalleryService, req : any) {\n            return svc.get(req.params.id);\n        }\n    },\n    {\n        key: 'create',\n        method: 'post',\n        path: 'galleries',\n        auth: true,\n        onExecute: function(svc : GalleryService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'update',\n        method: 'put',\n        path: 'galleries/:id',\n        auth: true,\n        onExecute: function(svc : GalleryService, req : any) {\n            return svc.save(req.body);\n        }\n    },\n    {\n        key: 'delete',\n        method: 'delete',\n        path: 'galleries/:id',\n        auth: true,\n        onExecute: function(svc : GalleryService, req : any) {\n            return svc.remove(req.params.id);\n        },\n        onResponse: function(\n            // @ts-ignore\n            result : any,\n            res : any) {\n            res.status(204).end();\n        }\n    },\n    {\n        key: 'patch',\n        method: 'patch',\n        path: 'galleries/:id',\n        auth: true,\n        onExecute: function(svc : GalleryService, req : any) {\n            return svc.patch(req.params.id, req.body);\n        }\n    },\n    {\n        key: 'export',\n        method: 'get',\n        path: 'galleries/:id/export',\n        auth: false,\n        onExecute: function(svc : GalleryService, req : any) {\n            return svc.export(req.params.id, req.query.format);\n        },\n        onResponse: function(result : any, res : any) {\n            let mimeType = result.headers['content-type'];\n            let disposition = result.headers['content-disposition'];\n            res.set(\"Content-Type\", mimeType);\n            res.setHeader('Content-disposition', disposition);\n            res.send(result.body);\n        }\n    }\n];\n\n/**\n * GalleryServiceProxy\n *\n * see examples/node/item-proxy for an in-depth example\n */\nfunction GalleryServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"GalleryServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"GalleryServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = GalleryService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default GalleryServiceProxy;\n","\nimport {UtilsService} from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\n\nconst Routes = [\n    {\n        key   : 'locate',\n        method: 'get',\n        path  : 'utils/locate',\n        auth  : false,\n        onExecute: function(svc : UtilsService, req : any) {\n            return svc.locate(req.query.location);\n        }\n    },\n    {\n        key   : 'parseFile',\n        method: 'post',\n        path  : 'utils/parse',\n        auth  : false,\n        onExecute: function(svc : UtilsService, req : any) {\n            return svc.parseFile(req.files.file, req.body.format);\n        }\n    },\n    {\n        key   : 'capabilities',\n        method: 'get',\n        path  : 'utils/capabilities',\n        auth  : false,\n        onExecute: function(svc : UtilsService, req : any) {\n            return svc.capabilities(null, req.query);\n        }\n    },\n    {\n        key   : 'capabilitiesProperty',\n        method: 'get',\n        path  : 'utils/capabilities/:id',\n        auth  : false,\n        onExecute: function(svc : UtilsService, req : any) {\n            return svc.capabilities(req.params.id, req.query);\n        }\n    },\n    {\n        key   : 'store',\n        method: 'post',\n        path  : 'store',\n        auth  : true,\n        onExecute: function(svc : UtilsService, req : any) {\n            return svc.store(req.files.file, req.body.format);\n        }\n    }\n];\n\n\n\n/**\n *\n */\nfunction UtilsServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"UtilsServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"UtilsServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = UtilsService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default UtilsServiceProxy;\n","\nimport { KGService, KGQuery } from \"@geoplatform/client\";\nimport ServiceProxy from \"./base\";\n\n\nconst Routes = [\n    {\n        key   : 'suggest',\n        method: 'get',\n        path  : 'recommender/suggest',\n        auth  : false,\n        onExecute: function(svc : KGService, req : any) {\n            let query = new KGQuery(req.query);\n            return svc.suggest(query);\n        }\n    },\n    {\n        key   : 'types',\n        method: 'get',\n        path  : 'recommender/types',\n        auth  : false,\n        onExecute: function(svc : KGService, req : any) {\n            let query = new KGQuery(req.query);\n            return svc.types(query);\n        }\n    },\n    {\n        key   : 'sources',\n        method: 'get',\n        path  : 'recommender/sources',\n        auth  : false,\n        onExecute: function(svc : KGService, req : any) {\n            let query = new KGQuery(req.query);\n            return svc.sources(query);\n        }\n    }\n];\n\n\n\n/**\n *\n */\nfunction KGServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"KGServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"KGServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = KGService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default KGServiceProxy;\n","\n\nimport { AgolService } from \"@geoplatform/client\";\nimport ServiceProxy from './base';\n\n\nconst Routes = [\n    {\n        key: 'searchItems',\n        method: 'get',\n        path: 'agol/items',\n        auth: false,\n        onExecute: function(svc : AgolService, req : any) {\n            return svc.searchItems(req.query);\n        }\n    },\n    {\n        key: 'searchGroups',\n        method: 'get',\n        path: 'agol/groups',\n        auth: false,\n        onExecute: function(svc : AgolService, req : any) {\n            return svc.searchGroups(req.query);\n        }\n    },\n    {\n        key: 'searchOrgs',\n        method: 'get',\n        path: 'agol/orgs',\n        auth: false,\n        onExecute: function(svc : AgolService, req : any) {\n            return svc.searchOrgs(req.query);\n        }\n    },\n    {\n        key: 'getItem',\n        method: 'get',\n        path: 'agol/items/:id',\n        auth: false,\n        onExecute: function(svc : AgolService, req : any) {\n            return svc.getItem(req.params.id);\n        }\n    },\n    {\n        key: 'getGroup',\n        method: 'get',\n        path: 'agol/groups/:id',\n        auth: false,\n        onExecute: function(svc : AgolService, req : any) {\n            return svc.getGroup(req.params.id);\n        }\n    },\n    {\n        key: 'getOrg',\n        method: 'get',\n        path: 'agol/orgs/:id',\n        auth: false,\n        onExecute: function(svc : AgolService, req : any) {\n            return svc.getOrg(req.params.id);\n        }\n    }\n];\n\n\n\n/**\n *\n */\nfunction AgolServiceProxy( options ?: any ) {\n\n    if(typeof(options) === 'undefined') {\n        options = {};\n    };\n\n    let router = options.router;\n    if(!options.router) {\n        let express = require('express');\n        if(!express) {\n            throw new Error(\"AgolServiceProxy() - Must provide\" +\n                \"'options.router' or include express as a dependency\");\n        }\n        router = express.Router();\n    }\n\n    if(!router) throw new Error(\"AgolServiceProxy() - \" +\n        \"Unable to create proxy route, missing router\");\n\n    options.serviceClass = AgolService;\n    ServiceProxy.bindRoutes(router, Routes, options);\n\n    return router;\n}\n\nexport default AgolServiceProxy;\n"]}