{"version":3,"file":"geoplatform.client.js","sources":["../../src/http/jq.js","../../src/http/ng.js","../../src/http/node.js","../../src/shared/types.js","../../src/services/item.js","../../src/services/dataset.js","../../src/services/map.js","../../src/services/layer.js","../../src/services/service.js","../../src/services/gallery.js","../../src/services/utils.js","../../src/services/agol.js","../../src/shared/parameters.js","../../src/shared/kg-query.js","../../src/services/kg.js","../../src/shared/classifiers.js","../../src/shared/facets.js","../../src/shared/query.js","../../src/shared/query-factory.js","../../src/services/factory.js","../../src/shared/config.js"],"sourcesContent":["\nimport Q from 'q';\n\nclass JQueryHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options) {\n        options = options || {};\n        this.setTimeout(options.timeout||10000);\n        this.setAuthToken(options.token);\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true)\n            opts.dataType = 'json';\n\n        if(options.params) {\n            opts.data = options.params;\n            opts.processData = true;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n            opts.processData = options.processData || false;\n            opts.contentType = 'application/json';\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n\n    execute(opts) {\n\n        if(typeof(jQuery) === 'undefined') {\n            throw new Error(\"jQuery is not available. Ensure it is included in your application\");\n        }\n        let d = Q.defer();\n        opts.success = function(data) { d.resolve(data); };\n        opts.error = function(xhr, status, message) { d.reject(new Error(message)); };\n        jQuery.ajax(opts);\n        return d.promise;\n    }\n\n}\n\nexport default JQueryHttpClient;\n","\nimport Q from 'q';\n\nclass NGHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     * @param {Object} options.$http - angular $http service instance\n     */\n    constructor(options) {\n        if(typeof(angular) === 'undefined')\n            throw new Error(\"Angular not defined\");\n\n        options = options || {};\n        this.setTimeout(options.timeout||10000);\n        this.setAuthToken(options.token);\n\n        if(options.$http)\n            this.$http = options.$http;\n\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.json === true)\n            opts.dataType = 'json';\n\n        if(options.params) {\n            opts.params = options.params;\n        }\n\n        if(options.data) {\n            opts.data = options.data;\n        }\n\n        //set authorization token if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.headers = opts.headers || {};\n                opts.headers.Authorization = 'Bearer ' + token;\n                opts.useXDomain = true;\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        return opts;\n    }\n\n    execute(opts) {\n\n        if(typeof(angular) === 'undefined')\n            throw new Error(\"Angular is not defined, ensure you have included it as a dependency in your application\");\n\n        let $http = this.$http || angular.injector(['ng']).get('$http');\n        return Q.resolve( $http )\n        .then($http => {\n            if(typeof($http) === 'undefined')\n                throw new Error(\"Angular $http not resolved\");\n\n            // console.log(opts);\n            return $http(opts);\n        })\n        .then(response=>response.data)\n        .catch(response=>Q.reject(response.data));\n    }\n\n}\n\nexport default NGHttpClient;\n","\nimport Q from 'q';\n\nclass NodeHttpClient {\n\n    /**\n     * @param {integer} options.timeout\n     * @param {string} options.token - the bearer token or a function to retrieve it\n     */\n    constructor(options) {\n        options = options || {};\n        this.setTimeout(options.timeout||10000);\n        this.setAuthToken(options.token);\n    }\n\n    setTimeout(timeout) {\n        this.timeout = timeout;\n    }\n\n    /**\n     * @param {string|Function} arg - specify the bearer token or a function to retrieve it\n     */\n    setAuthToken(arg) {\n        if(arg && typeof(arg) === 'string')\n            this.token = function() { return arg; };\n        else if(arg && typeof(arg) === 'function')\n            this.token = arg;\n        //else do nothing\n    }\n\n    createRequestOpts(options) {\n\n        let opts = {\n            method: options.method,\n            url: options.url,\n            json: false !== options.json,\n            timeout: options.timeout || this.timeout\n        };\n\n        if(options.params) {\n            opts.qs = options.params;\n        }\n\n        if(options.file) {\n            const fs = require('fs');\n            if(!fs) throw new Error(\"Module 'fs' not available\");\n            opts.formData = {\n                file: {\n                    value:  fs.createReadStream(options.file.path),\n                    options: {\n                        filename: options.file.originalFilename\n                    }\n                }\n            };\n            Object.assign(opts.formData, options.data||{});\n\n        } else if(options.data) {\n            if(options.formData) {\n                opts.formData = options.data;\n            } else {\n                opts.body = options.data;\n            }\n        }\n\n        //set authorization header if one was provided\n        if(this.token) {\n            let token = this.token();\n            if(token) {\n                opts.auth = { 'bearer': token };\n            }\n        }\n\n        //copy over user-supplied options\n        if(options.options) {\n            for(let o in options.options) {\n                if(options.options.hasOwnProperty(o)) {\n                    opts[o] = options.options[o];\n                }\n            }\n        }\n\n        // console.log(JSON.stringify(opts));\n\n        return opts;\n    }\n\n\n\n    /**\n     *\n     */\n    execute(options) {\n        let deferred = Q.defer();\n\n        const request = require('request');\n        if(!request) {\n            throw new Error(\"Module 'request' not available\");\n        }\n        // require('request-debug')(request);\n\n        request(options, (error, response, body) => {\n            this.checkAndHandleError(error, response)\n            .then( () =>  {\n                if(options.json === false)\n                    deferred.resolve( response );\n                else\n                    deferred.resolve( body );\n            })\n            .catch( e => deferred.reject(e) );\n        });\n        return deferred.promise;\n    }\n\n\n    /**\n     *\n     */\n    checkAndHandleError (error, response) {\n\n        let props = {\n            message: null,\n            error: null,    //error type\n            status: 200\n        };\n\n        if(error) {\n            // Logger.debug(\"Error generated by request library: \" + error.code);\n\n            if(error.code === 'ETIMEDOUT' || error.code === 'ESOCKETTIMEDOUT') {\n\n                props.status = 500;\n                props.error = \"Connection Timeout\";\n                props.message = \"The response from the service took too long to read\";\n\n                if(error.connect === true) {\n                    props.message = \"Unable to establish a connection to the service\";\n                }\n\n            } else {\n                return Q.reject(error);\n            }\n\n        } else if(response.statusCode < 200 || response.statusCode > 204) {\n\n            // Logger.debug('Error returned by remote endpoint (' + response.statusCode + ')');\n            // Logger.debug(JSON.stringify(response));\n\n            props.status = response.statusCode;\n\n            if(response.body && typeof(response.body) === 'object') {\n                props = response.body;\n                props.status = props.status || response.statusCode;\n                props.message = props.message || \"An error occurred communicating with service\";\n\n                if(response.statusCode === 409) {\n                    let sidx = response.body.message.indexOf(\" \");\n                    let eidx = response.body.message.indexOf(' already exists');\n                    if(sidx >= 0 && eidx > sidx) {\n                        props.item = response.body.message.substring(sidx+1, eidx);\n                    }\n                }\n\n            } else {\n\n                switch(response.statusCode) {\n                    case 404 :\n                        props.error = \"Not Found\";\n                        props.message = response.request.uri.pathname + \" cannot be found\";\n                        break;\n                    case 401 :\n                        props.error = \"Unauthenticated\";\n                        props.message = \"You are not authenticated\";\n                        break;\n                    case 403 :\n                        props.error = \"Unauthorized\";\n                        props.message = \"You are not authorized to access \" + response.request.uri.pathname;\n                        break;\n                    case 409 :\n                        props.error = \"Conflict\";\n                        props.message = \"Item already exists\";\n\n                        // pattern received is: { ..., message: 'Resource <identifier> already exists', ... }\n                        try {\n                            let json = JSON.parse(response.body);\n                            let sidx = json.message.indexOf(\" \");\n                            let eidx = json.message.indexOf(' already exists');\n                            if(sidx >= 0 && eidx > sidx) {\n                                props.item = json.message.substring(sidx+1, eidx);\n                            }\n                        } catch( e ) {\n                            message += '.  Unable to extract existing identifier from service response';\n                        }\n                        break;\n\n                    default:\n\n                        try {\n                            let json = JSON.parse(response.body);\n                            props = json;\n                            props.status = response.statusCode;\n                            // Logger.debug(\"PARSED ERROR: \" + JSON.stringify(props));\n\n                        } catch (e) {\n                            props.error = \"Server Error\";\n                            props.message = response.body;\n                            // Logger.debug(\"DEFAULTED ERROR: \" + JSON.stringify(props));\n                        }\n                }\n\n            }\n\n        }\n\n        if( props.status < 200 || props.status > 204 ) {\n\n            props.error = props.error || \"Server Error\";\n            props.status = props.status || response.statusCode;\n            props.message = props.message || \"An error occurred communicating with service\";\n\n            let err = new Error(props.message);\n            Object.assign(err, props);\n\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err);\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + JSON.stringify(err));\n            // Logger.debug(\"UTILS.checkAndHandleError : \" + err.message);\n            return Q.reject(err);\n        }\n\n        return Q.resolve();\n    }\n\n}\n\n\nexport default NodeHttpClient;\n","\n\nexport default {\n    DATASET         : \"dcat:Dataset\",\n    SERVICE         : \"regp:Service\",\n    LAYER           : \"Layer\",\n    MAP             : \"Map\",\n    GALLERY         : \"Gallery\",\n    ORGANIZATION    : \"org:Organization\",\n    COMMUNITY       : 'Community',\n    CONCEPT         : \"skos:Concept\",\n    CONCEPT_SCHEME  : \"skos:ConceptScheme\",\n    STANDARD        : 'dct:Standard'\n};\n","\nimport Q from 'q';\n\n\n/**\n * ItemService\n * service for working with the GeoPlatform API to\n * retrieve and manipulate items.\n *\n * Ex Searching Items\n *      let params = { q: 'test' };\n *      itemService.search(params).then(response=>{\n *          console.log(response.results.length + \" of \" + response.totalResults);\n *      }).catch(e=>{...});\n *\n * Ex Fetch Item:\n *      itemService.get(itemId).then(item=>{...}).catch(e=>{...});\n *\n * Ex Saving Item:\n *      itemService.save(item).then(item=>{...}).catch(e=>{...});\n *\n * Ex Deleting Item:\n *      itemService.remove(itemId).then(()=>{...}).catch(e=>{...});\n *\n * Ex Patching Item:\n *      itemService.patch(itemId,patch).then(item=>{...}).catch(e=>{...});\n *\n */\nclass ItemService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = 10000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/items';\n    }\n\n\n    /**\n     * @param {string} id - identifier of item to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    get (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.get() - Error fetching item ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {Object} itemObj - item to create or update\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    save (itemObj, options) {\n\n        return Q.resolve( itemObj )\n        .then( item => {\n\n            let method = 'POST',\n                url = this.baseUrl;\n            if(item.id) {\n                method = \"PUT\";\n                url += '/' + item.id;\n            } else {\n                //if item is being created and has no URI already defined\n                // attempt to create one using the API's method for doing so\n                // and then attempt the actual item creation\n                if(!item.uri) {\n                    return this.getUri(item, options)\n                    .then( uri => {\n                        item.uri = uri;\n                        let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n                        return this.execute(opts);\n                    });\n                }\n            }\n\n            let opts = this.buildRequest({method:method, url:url, data:item, options:options});\n            return this.execute(opts);\n\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.save() - Error saving item: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of item to delete\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving true if successful or an error\n     */\n    remove (id, options) {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:\"DELETE\", url: url, options: options\n            });\n            return this.execute(opts);\n        })\n        .then(response => true)\n        .catch(e => {\n            let err = new Error(`ItemService.remove() - Error deleting item ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of item to patch\n     * @param {Object} patch - HTTP-PATCH compliant set of properties to patch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    patch (id, patch, options) {\n\n        return Q.resolve( this.baseUrl + '/' + id )\n        .then( url => {\n            let opts = this.buildRequest({\n                method: \"PATCH\", url: url, data: patch, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.patch() - Error patching item ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or GeoPlatform.Query instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    search (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl, params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ItemService.search() - Error searching items: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     *\n     * @param {string} arg - URL to metadata document or File to upload\n     * @param {string} format - metadata format of specified document\n     * @return {Promise} resolving GeoPlatform Item\n     */\n    import (arg, format, options) {\n\n        return Q.resolve( true )\n        .then( () => {\n            if(arg===null || arg === undefined) {\n                throw new Error(\"Must provide a valid URL or File\");\n            }\n            let isFile = typeof(arg) !== 'string';\n            let ro = {\n                method:\"POST\",\n                url: this.apiBase + '/api/import',\n                processData: true,  //for jQuery\n                formData: true,     //for Node (RequestJS)\n                options: options\n            };\n            if(isFile) {\n                ro.file = arg;\n                ro.data = { format: format };\n            } else {\n                ro.formData = false;    //must be false for data to not be multi-part formdata\n                ro.data = { url: arg, format: format };\n            }\n            let opts = this.buildRequest(ro);\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`ItemService.import() - Error importing item: ${e.message}`);\n            if(e.status === 409 || ~e.message.indexOf('Item already exists')) err.status = 409;\n            if(e.item) err.item = e.item;\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {string} id - identifier of the item to export\n     * @param {format} format - string mime type to export\n     * @return {Promise} resolving HTTP response object for enabling attachment downloading\n     */\n    export (id, format, options) {\n\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + id + '/export';\n            let opts = this.buildRequest({\n                method: \"GET\", url: url,\n                params: {format:format},\n                json: false,\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`ItemService.export() - Error exporting item: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} object - GP object definition to generate a URI for\n     * @param {Object} options - optional request options\n     * @return {Promise} resolving string URI\n     */\n    getUri (object, options) {\n\n        return Q.resolve( object )\n        .then( obj => {\n            if(!obj || !obj.type)\n                throw new Error(\"Must provide an object with a type property\");\n            let url = this.apiBase + '/api/utils/uri';\n            let opts = this.buildRequest({\n                method: \"POST\", url: url, data: obj, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch( e => {\n            let err = new Error(`ItemService.getUri() - Error getting URI for item: ${e.message}`);\n            return Q.reject(err);\n        });\n\n    }\n\n\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout;\n\n        let opts = this.createRequestOpts(options);\n\n        return opts;\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts);\n    }\n\n}\n\nexport default ItemService;\n","\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass DatasetService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/datasets';\n    }\n\n\n}\n\nexport default DatasetService;\n","\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass MapService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/maps';\n    }\n\n\n}\n\nexport default MapService;\n","\n\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass LayerService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/layers';\n    }\n\n    /**\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving style JSON object\n     */\n    style (options) {\n        return Q.resolve( true )\n        .then( () => {\n\n            let url = this.baseUrl + '/' + id + '/style';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`LayerService.style() - Error fetching style: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} req identifying extent, x, y\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving feature JSON object\n     */\n    describe( id, req, options ) {\n\n        return Q.resolve( req )\n        .then( (req) => {\n\n            if(!req) {\n                throw new Error(\"Must provide describe parameters to use\");\n            }\n\n            let keys = ['bbox', 'height', 'width', 'x', 'y'];\n            let missing = keys.find(key => !req[key]);\n            if(missing) {\n                throw new Error(`Must specify ${missing} in describe req`);\n            }\n\n            let params = {\n                srs         : 'EPSG:4326',\n                bbox        : req.bbox,\n                height      : req.height,\n                width       : req.width,\n                info_format : 'text/xml',\n                x           : req.x,\n                y           : req.y,\n                i           : req.x, //WMS 1.3.0\n                j           : req.y  //WMS 1.3.0\n            };\n\n            let url = this.baseUrl + '/' + id + '/describe';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`LayerService.describe() -\n                Error describing layer feature: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - GeoPlatform Layer identifier\n     * @param {Object} params describing layer request to validate\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving empty if successful or a message if failed\n     */\n    validate(id, params, options) {\n\n        return Q.resolve( params )\n        .then( params => {\n\n            if(!params) {\n                throw new Error(\"Must provide parameters to use in layer validation\");\n            }\n\n            let url = this.baseUrl + '/' + id + '/validate';\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`LayerService.describe() -\n                Error describing layer feature: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default LayerService;\n","\n\nimport Q from 'q';\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Service service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate service objects.\n *\n * @see ItemService\n */\n\nclass ServiceService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/services';\n    }\n\n\n    /**\n     * Fetch metadata from the specified GeoPlatform Service's\n     * web-accessible implementation using either GetCapabilities\n     * or ESRI documentInfo.\n     * @param {Object} service - GeoPlatform Service object\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving service metadata\n     */\n    about( service, options ) {\n\n        return Q.resolve( service )\n        .then( svc => {\n            if(!svc)\n                throw new Error(\"Must provide service to get metadata about\");\n            let opts = this.buildRequest({\n                method:'POST', url:this.baseUrl + '/about', data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.about() -\n                Error describing service: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service types\n     */\n    types (options) {\n\n        let query = new Query()\n        .types(ItemTypes.STANDARD)\n        .resourceTypes('ServiceType')\n        .pageSize(50)\n        .getQuery();\n\n        return Q.resolve( query )\n        .then( (params) => {\n            let url = this.apiBase + '/api/items';\n            let opts = this.buildRequest({\n                method:'GET', url:url, params:params, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response => response.results)\n        .catch(e => {\n            let err = new Error(`ServiceService.types() -\n                Error fetching service types: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} service - GP Service definition\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving imported service\n     */\n    import (service, options) {\n\n        return Q.resolve( service )\n        .then( svc => {\n            let url = this.baseUrl + '/import';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data:svc, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.import() -\n                Error importing service: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {string} id - identifier of GP service to harvest layers for\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service layers\n     */\n    harvest (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/harvest';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.harvest() -\n                Error harvesting layers from service: ${e.message}`);\n            return Q.reject(err);\n        });\n\n    }\n\n    /**\n     * @param {string} id - identifier of GP service to live test\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service statistics\n     */\n    liveTest (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/test';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.liveTest() -\n                Error testing service: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {string} id - identifier of GP service to fetch statistics about\n     * @param {Object} options - optional set of request options to apply to request\n     * @return {Promise} resolving service statistics\n     */\n    statistics (id, options) {\n        return Q.resolve( id )\n        .then( id => {\n            let url = this.baseUrl + '/' + id + '/statistics';\n            let opts = this.buildRequest({\n                method:'GET', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`ServiceService.statistics() -\n                Error getting service statistics: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default ServiceService;\n","\nimport Q from 'q';\nimport ItemService from './item';\n\n/**\n * GeoPlatform Map service\n * service for working with the GeoPlatform API to\n * retrieve and manipulate map objects.\n *\n * @see GeoPlatform.ItemService\n */\n\nclass GalleryService extends ItemService {\n\n    constructor(url, httpClient) {\n        super(url, httpClient);\n    }\n\n    setUrl(baseUrl) {\n        super.setUrl(baseUrl);\n        this.baseUrl = baseUrl + '/api/galleries';\n    }\n\n    addItem (galleryId, itemObj, options) {\n        return Q.resolve( true )\n        .then( () => {\n            let url = this.baseUrl + '/' + galleryId + '/items';\n            let opts = this.buildRequest({\n                method:'POST', url:url, data: itemObj, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(\"GalleryService.addItem() - Error adding item: \" + e.message);\n            return Q.reject(err);\n        });\n    }\n\n    removeItem( galleryId, itemId, options) {\n        return Q.resolve( this.baseUrl + '/' + galleryId + '/items/' + itemId )\n        .then( url => {\n            let opts = this.buildRequest({\n                method:'DELETE', url:url, options:options\n            });\n            return this.execute(opts);\n        })\n        .then(response=>true)\n        .catch(e => {\n            let err = new Error(\"GalleryService.addItem() - Error adding item: \" + e.message);\n            return Q.reject(err);\n        });\n    }\n\n}\n\nexport default GalleryService;\n","\n\nimport Q from 'q';\n\nclass UtilsService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = 10000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.baseUrl = baseUrl;\n    }\n\n\n    /**\n     * @param {string} property - optional capa property to specifically request\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving capabilities object\n     */\n    capabilities (property, query, options) {\n\n        let url = this.baseUrl + '/api/capabilities';\n        if(property)\n            url += '/' + property;\n\n        return Q.resolve( url )\n        .then( (url) => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query||{}, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`UtilsService.capabilities() - Error getting capabilities: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {File} file\n     * @param {string} format\n     * @param {Object} options\n     * @return {Promise}\n     */\n    parseFile (file, format, options) {\n\n        var url = this.baseUrl + '/api/utils/parse';\n\n        return Q.resolve( url )\n        .then( url => {\n\n            let opts = this.buildRequest({\n                method:\"POST\",  url:url,\n                data: { format: format },\n                file: file,\n                formData: true,   //NodeJS (RequestJS)\n                options: options\n            });\n            return this.execute(opts);\n        })\n        .then( response => response )\n        .catch(e => {\n            let err = new Error(`UtilsService.parseFile() - Error parsing file: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts);\n    }\n\n}\n\nexport default UtilsService;\n","\n\nimport Q from 'q';\nimport ItemTypes from '../shared/types';\n\n\nclass AgolQuery {\n\n    constructor() {\n        this._query = {\n            page: 0,\n            size: 10\n        };\n    }\n\n    getQuery() {\n        let result = {};\n        for(let prop in this._query) {\n            let value = this._query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n    // ---------------------------------------\n\n    q(value) { this.setQ(value); return this; }\n    setQ(value) { this._query.q = value; }\n    getQ() { return this._query.q; }\n\n    // ---------------------------------------\n\n    types(value) { this.setTypes(value); return this; }\n    setTypes(value) {\n        if(value && typeof(value.push) !== 'undefined')\n            value = value.join(',');\n        this._query.types = value;\n    }\n    getTypes() { return this._query.types; }\n\n    // ---------------------------------------\n\n    groups(value) { this.setGroups(value); return this; }\n    setGroups(value) {\n        if(value && typeof(value.push) !== 'undefined')\n            value = value.join(',');\n        this._query.groups = value;\n    }\n    getGroups() { return this._query.groups; }\n\n    // ---------------------------------------\n\n    orgs(value) { this.setOrgs(value); return this; }\n    setOrgs(value) {\n        if(value && typeof(value.push) !== 'undefined')\n            value = value.join(',');\n        this._query.orgs = value;\n    }\n    getOrgs() { return this._query.orgs; }\n\n    // ---------------------------------------\n\n    extent(value) { this.setExtent(value); return this; }\n    setExtent(value) { this._query.bbox = value; }\n    getExtent() { return this._query.bbox; }\n\n    // ---------------------------------------\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) { this.setSort(sort, order); return this; }\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this._query.sort = sort;\n    }\n    getSort() { return this._query.sort; }\n    getSortField() { return this._query.sort.split(',')[0]; }\n    getSortOrder() { return this._query.sort.split(',')[1] === 'asc'; }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this._query.page = page*1;\n    }\n\n    getPage() {\n        return this._query.page;\n    }\n\n    nextPage() {\n        this.setPage(this._query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this._query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this._query.size = size*1;\n    }\n\n    getPageSize() {\n        return this._query.size;\n    }\n\n}\n\n\n\n\nclass AgolService {\n\n\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = 10000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.baseUrl = baseUrl + '/api/agol/';\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL ORGS METHODS\n\n\n    /**\n     * @param {string} id - identifier of AGOL organization to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    getOrg (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/orgs/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getOrg() - Error fetching org ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or Query instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    searchOrgs (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl + '/orgs', params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchOrgs() - Error searching orgs: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL GROUPS METHODS\n\n\n    /**\n     * @param {string} id - identifier of AGOL group to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    getGroup (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/groups/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getGroup() - Error fetching group ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or AgolQuery instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    searchGroups (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl + '/groups', params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchGroups() - Error searching groups: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n    // -----------------------------------------------------------------------\n    // AGOL ITEMS METHODS\n\n    /**\n     * @param {string} id - identifier of AGOL item to fetch\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving Item object or an error\n     */\n    getItem (id, options) {\n\n        return Q.resolve( id )\n        .then( id => {\n            let opts = this.buildRequest({\n                method:\"GET\", url:this.baseUrl + '/items/' + id, options:options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.getItem() - Error fetching item ${id}: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} arg - either JS object of query parameters or AgolQuery instance\n     * @param {Object} options - optional set of request options to apply to xhr request\n     * @return {Promise} resolving search results\n     */\n    searchItems (arg, options) {\n\n        return Q.resolve( arg )\n        .then( params => {\n\n            if(params && typeof(params.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                params = params.getQuery();\n            }\n            let opts = this.buildRequest({\n                method:\"GET\", url: this.baseUrl + '/items', params: params, options: options\n            });\n            return this.execute(opts);\n        })\n        .catch(e => {\n            let err = new Error(`AgolService.searchItems() - Error searching items: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /* --------------------------- */\n\n    getAgolId (obj) {\n        if(!obj) return null;\n\n        if(!obj.type) return null;\n\n        if(ItemTypes.ORGANIZATION === obj.type || 'Group' === obj.type) {\n            return obj.id;\n        }\n\n        if(!obj.identifiers || !obj.identifiers.length) return null;\n        let ids = obj.identifiers.filter(id => ~id.indexOf('agol:'));\n        if(!ids.length) return null;\n        return ids[0].replace('agol:','');\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts);\n    }\n\n}\n\nexport {\n    AgolService as default,\n    AgolService,\n    AgolQuery\n};\n","\n\nexport default {\n    TYPES            : 'type',\n    QUERY            : 'q',\n    KEYWORDS         : 'keyword',\n    URI              : 'uri',\n    CREATED_BY       : 'createdBy',\n    CONTRIBUTED_BY   : 'contributedBy',\n    CREATOR          : 'creator.id',\n    SVC_TYPES        : 'serviceType.id',\n    THEMES_ID        : 'theme.id',\n    THEMES_LABEL     : 'theme.label',\n    THEMES_URI       : 'theme.uri',\n    PUBLISHERS       : 'publisher.id',\n    PUBLISHERS_LABEL : 'publisher.label',\n    PUBLISHERS_URI   : 'publisher.uri',\n    USED_BY_ID       : 'usedBy.id',\n    USED_BY_LABEL    : 'usedBy.label',\n    USED_BY_URI      : 'usedBy.uri',\n    SCHEMES_ID       : 'scheme.id',\n    SCHEMES_LABEL    : 'scheme.label',\n    SCHEMES_URI      : 'scheme.uri',\n    VISIBILITY       : 'visibility',\n    EXTENT           : 'extent',\n    MODIFIED_BEFORE  : 'modified.max',\n    MODIFIED_AFTER   : 'modified.min',\n    BEGINS           : 'startDate.min',\n    ENDS             : 'endDate.max',\n    RESOURCE_TYPE    : 'resourceType',\n\n    //recommender service-specific\n    FOR_TYPES        : 'for'\n};\n","\nimport QueryParameters from './parameters';\n\nconst SORT_OPTIONS_DEFAULT = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nclass KGQuery {\n\n    constructor() {\n\n        this.defaultQuery = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n        this.query = {\n            page: 0,\n            size: 10,\n            sort: \"modified,desc\"\n        };\n\n    }\n\n\n\n    getQuery() {\n        let result = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    parameter(name, value) {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    setParameter (name, value) {\n        if(value === null || value === undefined)\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    getParameter (key) {\n        return this.getParameter(key);\n    }\n\n    applyParameters (obj) { \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    q(text) {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setQ (text) {\n        this.setParameter(QueryParameters.QUERY, text);\n    }\n\n    getQ() {\n        return this.getParameter(QueryParameters.QUERY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {array[string]} types - KG classifiers for which concepts should be returned\n     */\n    classifiers(types) {\n        this.setClassifiers(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - KG classifiers for which concepts should be returned\n     */\n    setClassifiers (types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.TYPES, types);\n    }\n\n    /**\n     * @return {array[string]} KG classifiers for which concepts should be returned\n     */\n    getClassifiers () {\n        return this.getParameter(QueryParameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.types()\n     * query parameter (they map to different HTTP request parameters).\n     * @param {array[string]} objTypes - Item object type names\n     */\n    types(objTypes) {\n        this.setTypes(objTypes);\n        return this;\n    }\n\n    /**\n     * Specify the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.setTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @param {array[string]} objTypes - Item object type names\n     */\n    setTypes (objTypes) {\n        if(objTypes && objTypes.push === 'undefined')\n            objTypes = [objTypes];\n        this.setParameter(QueryParameters.FOR_TYPES, objTypes);\n    }\n\n    /**\n     * Get the Item object model type name(s) for which\n     * recommended concepts should be returned. Note: this\n     * query parameter is not the same as the GeoPlatform.Query.getTypes()\n     * query parameter (they map to different HTTP request parameters).\n     * @return {array[string]} Item object type names\n     */\n    getTypes () {\n        return this.getParameter(QueryParameters.FOR_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this.query.page = page*1;\n    }\n\n    getPage() {\n        return this.query.page;\n    }\n\n    nextPage() {\n        this.setPage(this.query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this.query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this.query.size = size*1;\n    }\n\n    getPageSize() {\n        return this.query.size;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.query.sort = sort;\n    }\n\n    getSort() {\n        return this.query.sort;\n    }\n\n    getSortField() {\n        return this.query.sort.split(',')[0];\n    }\n\n    getSortOrder() {\n        return this.query.sort.split(',')[1] === 'asc';\n    }\n\n    /**\n     * @return {array} list of key-value pairs of sort options\n     */\n    getSortOptions() {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = this.defaultQuery;\n    }\n}\n\nexport default KGQuery;\n","\nimport Q from 'q';\nimport QueryParameters from '../shared/parameters';\n\n\nclass KGService {\n\n    constructor(url, httpClient) {\n        this.setUrl(url);\n        this.client = httpClient;\n        this.timeout = 10000;\n        this.httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"];\n    }\n\n    setUrl(baseUrl) {\n        this.apiBase = baseUrl;\n        this.baseUrl = baseUrl + '/api/recommender';\n    }\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving recommended concepts as search results\n     */\n    suggest (query, options) {\n        let url = this.baseUrl + '/suggest';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.suggest() - Error suggesting concepts: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving concept types as search results\n     */\n    types (query, options) {\n        let url = this.baseUrl + '/types';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.types() - Error searching types: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n    /**\n     * @param {Object} query - optional query parameters to include with request\n     * @param {Object} options - optional config to send with http request\n     * @return {Promise} resolving concept sources as search results\n     */\n    sources (query, options) {\n        let url = this.baseUrl + '/sources';\n        return this._search(url, query, options)\n        .catch(e => {\n            let err = new Error(`KGService.sources() - Error searching sources: ${e.message}`);\n            return Q.reject(err);\n        });\n    }\n\n\n\n\n\n    /* ----------------------------------------------------------- */\n\n\n    /**\n     * internal method used by exposed methods\n     */\n    _search (url, query, options) {\n        return Q.resolve( true )\n        .then( () => {\n\n            if(query && typeof(query.getQuery) !== 'undefined') {\n                //if passed a GeoPlatform.Query object,\n                // convert to parameters object\n                query = query.getQuery();\n            }\n\n            let opts = this.buildRequest({\n                method:\"GET\", url:url, params:query, options:options\n            });\n            return this.execute(opts);\n        });\n    }\n\n\n\n    /**\n     * @param {string} method - one of \"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"\n     * @param {string} url - destination of xhr request\n     * @param {Object} params - object to be sent with request as query parameters\n     * @param {Object} data - object to be sent with request as body\n     * @param {Object} options - optional object defining request options\n     * @return {Object} request options for xhr\n     */\n    buildRequest (options) {\n\n        if(this.httpMethods.indexOf(options.method)<0)\n            throw new Error(`Unsupported HTTP method ${options.method}`);\n\n        if(!options.url)\n            throw new Error(`Must specify a URL for HTTP requests`);\n\n        options.timeout = this.timeout;\n\n        return this.createRequestOpts(options);\n    }\n\n    createRequestOpts(options) {\n        return this.client.createRequestOpts(options);\n    }\n\n    execute(opts) {\n        return this.client.execute(opts);\n    }\n\n}\n\nexport default KGService;\n","\n\n\nexport default  {\n    PURPOSE             : 'purposes',\n    FUNCTION            : 'functions',\n    TOPIC_PRIMARY       : 'primaryTopics',\n    TOPIC_SECONDARY     : 'secondaryTopics',\n    SUBJECT_PRIMARY     : 'primarySubjects',\n    SUBJECT_SECONDARY   : 'secondarySubjects',\n    COMMUNITY           : 'communities',\n    AUDIENCE            : 'audiences',\n    PLACE               : 'places',\n    CATEGORY            : 'categories'\n};\n","\n\n\nexport default {\n    TYPES           : 'types',\n    THEMES          : 'themes',\n    PUBLISHERS      : 'publishers',\n    SERVICE_TYPES   : 'serviceTypes',\n    CONCEPT_SCHEMES : 'schemes',\n    VISIBILITY      : 'visibility',\n    CREATED_BY      : 'createdBy',\n    USED_BY         : 'usedBy.id'\n};\n","\nimport QueryParameters from './parameters';\nimport QueryFacets from './facets';\n\n\nconst FIELDS_DEFAULT = [\n    'created','modified','createdBy','publishers','themes','description'\n];\n\nconst FACETS_DEFAULT = [\n    QueryFacets.TYPES,\n    QueryFacets.PUBLISHERS,\n    QueryFacets.SERVICE_TYPES,\n    QueryFacets.CONCEPT_SCHEMES,\n    QueryFacets.VISIBILITY,\n    QueryFacets.CREATED_BY\n];\n\nconst SORT_OPTIONS_DEFAULT = [\n    { value:\"label,asc\",       label: \"Name (A-Z)\"              },\n    { value:\"label,desc\",      label: \"Name (Z-A)\"              },\n    { value:\"type,asc\",        label: \"Type (A-Z)\"              },\n    { value:\"type,desc\",       label: \"Type (Z-A)\"              },\n    { value:\"modified,desc\",   label: \"Most recently modified\"  },\n    { value:\"modified,asc\",    label: \"Least recently modified\" },\n    { value:\"_score,desc\",     label: \"Relevance\"               }\n];\n\n\nclass Query {\n\n    constructor() {\n\n        this.defaultQuery = {\n            page: 0,\n            size: 10,\n            total: 0,\n            sort: \"modified,desc\",\n            fields: FIELDS_DEFAULT.slice(0),\n            includeFacets: FACETS_DEFAULT.slice(0)\n        };\n\n        this.query = {\n            page: 0,\n            size: 10,\n            total: 0,\n            sort: \"modified,desc\",\n            fields: FIELDS_DEFAULT.slice(0),\n            includeFacets: FACETS_DEFAULT.slice(0)\n        };\n\n    }\n\n\n\n    getQuery() {\n        let result = {};\n        for(let prop in this.query) {\n            let value = this.query[prop];\n            if(value !== null && typeof(value.push) !== 'undefined') {\n                value = value.join(',');\n            }\n            result[prop] = value;\n        }\n        return result;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    parameter(name, value) {\n        this.setParameter(name, value);\n        return this;\n    }\n\n    setParameter (name, value) {\n        if(value === null || value === undefined)\n            delete this.query[name];\n        else\n            this.query[name] = value;\n    }\n\n    getParameter (key) {\n        return this.getParameter(key);\n    }\n\n    applyParameters (obj) { \n        for(var p in obj) {\n            if(obj.hasOwnProperty(p)) {\n                this.setParameter(p, obj[p]);\n            }\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    q(text) {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setQ (text) {\n        this.setParameter(QueryParameters.QUERY, text);\n    }\n\n    getQ() {\n        return this.getParameter(QueryParameters.QUERY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    keywords(text) {\n        this.setQ(text);\n        return this;\n    }\n\n    /**\n     * @param {string} text - free text query\n     */\n    setKeywords (text) {\n        if(text && typeof(text.push) !== 'undefined')\n            text = text.join(',');\n        this.setParameter(QueryParameters.KEYWORDS, text);\n    }\n\n    getKeywords() {\n        return this.getParameter(QueryParameters.KEYWORDS);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    uri (uri) {\n        this.setUri(uri);\n        return this;\n    }\n\n    setUri(uri) {\n        this.setParameter(QueryParameters.URI, uri);\n    }\n\n    getUri() {\n        return this.getParameter(QueryParameters.URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    types(types) {\n        this.setTypes(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - name of class(es) to request\n     */\n    setTypes (types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.TYPES, types);\n    }\n\n    getTypes () {\n        return this.getParameter(QueryParameters.TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    createdBy(user) {\n        this.setCreatedBy(user);\n        return this;\n    }\n\n    /**\n     * @param {string} user - username\n     * @param {boolean} fireUpdate -\n     */\n    setCreatedBy (user) {\n        this.setParameter(QueryParameters.CREATED_BY, user);\n    }\n\n    getCreatedBy () {\n        return this.getParameter(QueryParameters.CREATED_BY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.THEMES_LABEL or QueryParameters.THEMES_URI\n     * respectively.\n     * @param {array[string]} themes - string or array of strings containing theme constraint\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    themes(themes, parameter) {\n        this.setThemes(themes, parameter);\n        return this;\n    }\n\n\n    /**\n     * Specify a Theme or set of Themes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.THEMES_LABEL or QueryParameters.THEMES_URI\n     * respectively.\n     * @param {array[string]} themes - theme or themes to constrain by\n     */\n    setThemes (themes, parameter) {\n        if(themes && themes.push === 'undefined')\n            themes = [themes];\n\n        //clear existing\n        this.setParameter(QueryParameters.THEMES_ID, null);\n        this.setParameter(QueryParameters.THEMES_LABEL, null);\n        this.setParameter(QueryParameters.THEMES_URI, null);\n\n        let param = parameter || QueryParameters.THEMES_ID;\n        this.setParameter(param, themes);\n    }\n\n    getThemes () {\n        return this.getParameter(QueryParameters.THEMES_ID) ||\n            this.getParameter(QueryParameters.THEMES_LABEL) ||\n            this.getParameter(QueryParameters.THEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.PUBLISHERS_LABEL or QueryParameters.PUBLISHERS_URI\n     * respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    publishers(publishers, parameter) {\n        this.setPublishers(publishers, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Publisher or set of Publishers to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.PUBLISHERS_LABEL or QueryParameters.PUBLISHERS_URI\n     * respectively.\n     * @param {array[string]} publishers - publishing orgs to constrain by\n     */\n    setPublishers (publishers, parameter) {\n        if(publishers && publishers.push === 'undefined')\n            publishers = [publishers];\n\n        //clear existing\n        this.setParameter(QueryParameters.PUBLISHERS_ID, null);\n        this.setParameter(QueryParameters.PUBLISHERS_LABEL, null);\n        this.setParameter(QueryParameters.PUBLISHERS_URI, null);\n\n        let param = parameter || QueryParameters.PUBLISHERS_ID;\n        this.setParameter(param, publishers);\n    }\n\n    getPublishers () {\n        return this.getParameter(QueryParameters.PUBLISHERS_ID) ||\n            this.getParameter(QueryParameters.PUBLISHERS_LABEL) ||\n            this.getParameter(QueryParameters.PUBLISHERS_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.USED_BY_LABEL or QueryParameters.USED_BY_URI\n     * respectively.\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    usedBy(ids, parameter) {\n        this.setUsedBy(ids, parameter);\n        return this;\n    }\n\n    /**\n     * Specify the identifier of an Agent (Community, Group, etc) that\n     * uses items you wish to find in search results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.USED_BY_LABEL or QueryParameters.USED_BY_URI\n     * respectively.\n     * @param {array[string]} ids - publishing orgs to constrain by\n     */\n    setUsedBy (ids, parameter) {\n        if(ids && ids.push === 'undefined')\n            ids = [ids];\n\n        //clear existing\n        this.setParameter(QueryParameters.USED_BY_ID, null);\n        this.setParameter(QueryParameters.USED_BY_LABEL, null);\n        this.setParameter(QueryParameters.USED_BY_URI, null);\n\n        let param = parameter || QueryParameters.USED_BY_ID;\n        this.setParameter(param, ids);\n    }\n\n    getUsedBy () {\n        return this.getParameter(QueryParameters.USED_BY_ID) ||\n            this.getParameter(QueryParameters.USED_BY_LABEL) ||\n            this.getParameter(QueryParameters.USED_BY_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.SCHEMES_LABEL or QueryParameters.SCHEMES_URI\n     * respectively.\n     * @param {array[string]} schemes - schemes to constrain by\n     * @param {string} parameter - optional, to indicate the parameter to use\n     * @return {Query}\n     */\n    schemes(schemes, parameter) {\n        this.setSchemes(schemes, parameter);\n        return this;\n    }\n\n    /**\n     * Specify a Concept Scheme or set of Concept Schemes to constrain results. By\n     * default, values are assumed to be theme identifiers. If using\n     * theme labels or theme uris, specify the optional second parameter\n     * to be either QueryParameters.SCHEMES_LABEL or QueryParameters.SCHEMES_URI\n     * respectively.\n     * @param {array[string]} schemes - schemes to constrain by\n     * @param {string} parameter - optional, to indicate the parameter to use\n     */\n    setSchemes (schemes, parameter) {\n        if(schemes && schemes.push === 'undefined')\n            schemes = [schemes];\n\n        //clear existing\n        this.setParameter(QueryParameters.SCHEMES_ID, null);\n        this.setParameter(QueryParameters.SCHEMES_LABEL, null);\n        this.setParameter(QueryParameters.SCHEMES_URI, null);\n\n        let param = parameter || QueryParameters.SCHEMES_ID;\n        this.setParameter(param, schemes);\n    }\n\n    getSchemes() {\n        return this.getParameter(QueryParameters.SCHEMES) ||\n            this.getParameter(QueryParameters.SCHEMES_LABEL) ||\n            this.getParameter(QueryParameters.SCHEMES_URI);\n    }\n\n\n    // -----------------------------------------------------------\n\n    /**\n     *\n     */\n    serviceTypes(types) {\n        this.setServiceTypes(types);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} types - ids\n     */\n    setServiceTypes (types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.SERVICE_TYPES, types);\n    }\n\n    getServiceTypes () {\n        return this.getParameter(QueryParameters.SERVICE_TYPES);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    visibility(vis) {\n        this.setVisibility(vis);\n        return this;\n    }\n\n    /**\n     * @param {string} visibility - one of 'public' or 'private'\n     * @param {boolean} fireUpdate\n     */\n    setVisibility (visibility) {\n        this.setParameter(QueryParameters.VISIBILITY, visibility);\n    }\n\n    getVisibility () {\n        this.getParameter(QueryParameters.VISIBILITY);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    modified(date, beforeOrAfter) {\n        this.setModified(date, beforeOrAfter);\n        return this;\n    }\n\n    /**\n     * @param {Date} date - date to compare against\n     * @param {boolean} beforeOrAfter - flag specifying which boundary condition (true = before, false = after)\n     * @param {boolean} fireUpdate - flag specifying whether to trigger update automatically\n     */\n    setModified (date, beforeOrAfter) {\n\n        //if no date was supplied, consider it \"unset\" for both properties\n        if(!date) {\n            this.setParameter(QueryParameters.MODIFIED_BEFORE, null);\n            this.setParameter(QueryParameters.MODIFIED_AFTER, null);\n            return;\n        }\n\n        let dir = beforeOrAfter && (beforeOrAfter === true || beforeOrAfter === \"true\");\n        let prop = dir ? QueryParameters.MODIFIED_BEFORE : QueryParameters.MODIFIED_AFTER;       //property being set\n        let oppProp = dir ? QueryParameters.MODIFIED_AFTER : QueryParameters.MODIFIED_BEFORE;    //unset opposite property\n        let arg = (date && date.getTime) ? date.getTime() : date;\n\n        this.setParameter(oppProp, null);\n        this.setParameter(prop, arg);\n    }\n\n    getModified () {\n        return  this.getParameter(QueryParameters.MODIFIED_BEFORE) ||\n                this.getParameter(QueryParameters.MODIFIED_AFTER);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    extent(bbox) {\n        this.setExtent(bbox);\n        return this;\n    }\n\n    /**\n     * @param {string} bboxStr - form of \"minx,miny,maxx,maxy\"\n     */\n    setExtent (bbox) {\n        if(bbox && typeof(bbox.toBboxString) !== 'undefined')\n            bbox = bbox.toBboxString();\n        this.setParameter(QueryParameters.EXTENT, bbox);\n    }\n\n    /**\n     * @return {string} bbox string or null if not set\n     */\n    getExtent () {\n        return this.getParameter(QueryParameters.EXTENT);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    begins(date) {\n        this.setBeginDate(date);\n        return this;\n    }\n\n    setBeginDate (date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(QueryParameters.BEGINS, date);\n    }\n\n    getBeginDate () {\n        let date = this.getParameter(this.parameter.BEGINS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    ends(date) {\n        this.setEndDate(date);\n        return this;\n    }\n\n    setEndDate (date) {\n        if(date && date instanceof Date)\n            date = date.getTime();\n        this.setParameter(QueryParameters.ENDS, date);\n    }\n\n    getEndDate () {\n        let date = this.getParameter(this.parameter.ENDS);\n        if(date) date = new Date(date);\n        return date;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    between(begin, end) {\n        this.setBetween(begin, end);\n        return this;\n    }\n\n    setBetween(begin, end) {\n        this.begins(begin);\n        this.ends(end);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    resourceTypes(types) {\n        this.setResourceTypes(types);\n        return this;\n    }\n\n    setResourceTypes(types) {\n        if(types && types.push === 'undefined')\n            types = [types];\n        this.setParameter(QueryParameters.RESOURCE_TYPE, types);\n    }\n\n    getResourceTypes() {\n        return this.getParameter(QueryParameters.RESOURCE_TYPE);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    facets(names) {\n        this.setFacets(names);\n        return this;\n    }\n\n    /*\n     * @param {array[string]} names - names of facets\n     */\n    setFacets (names) {\n        this.query.includeFacets = names;\n    }\n\n    getFacets() {\n        return this.query.includeFacets;\n    }\n\n    /**\n     * @param {string} name - name of facet to add\n     */\n    addFacet(name) {\n        let facets = (this.getFacets()||[]).push(name);\n        this.setFacets(facets);\n    }\n\n    /**\n     * @param {string} name - name of facet to remove\n     */\n    removeFacet(name) {\n        let facets = this.getFacets() || [];\n        let idx = facets.indexOf(name);\n        if(idx>=0) {\n            facets.splice(idx, 1);\n            this.setFacets(facets);\n        }\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    fields(fields) {\n        this.setFields(fields);\n        return this;\n    }\n\n    /**\n     * @param {array[string]} fields - list of field names to request for each search result\n     */\n    setFields (fields) {\n        if(fields && typeof(fields.push) === 'undefined')\n            fields = [fields];\n        this.query.fields = fields;\n    }\n\n    getFields() {\n        return this.query.fields;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} page - page of results to fetch\n     */\n    page (page) {\n        this.setPage(page);\n        return this;\n    }\n\n    setPage(page) {\n        if(isNaN(page) || page*1<0) return;\n        this.query.page = page*1;\n    }\n\n    getPage() {\n        return this.query.page;\n    }\n\n    nextPage() {\n        this.setPage(this.query.page+1);\n    }\n\n    previousPage() {\n        this.setPage(this.query.page-1);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {int} size - page size to request\n     */\n    pageSize (size) {\n        this.setPageSize(size);\n        return this;\n    }\n\n    setPageSize (size) {\n        if(isNaN(size) || size*1<0) return;\n        this.query.size = size*1;\n    }\n\n    getPageSize() {\n        return this.query.size;\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n    sort (sort, order) {\n        this.setSort(sort, order);\n        return this;\n    }\n\n    /**\n     * @param {string} sort - form of <field>,<dir> or just field name\n     * @param {string} order - optional, either 'asc' or 'desc'\n     */\n     setSort(sort, order) {\n         order = (order && (order !== 'asc' || order !== 'desc')) ? 'desc' : order;\n         if(sort && sort.indexOf(',')<0)\n            sort = sort + ',' + order;\n         this.query.sort = sort;\n    }\n\n    getSort() {\n        return this.query.sort;\n    }\n\n    getSortField() {\n        return this.query.sort.split(',')[0];\n    }\n\n    getSortOrder() {\n        return this.query.sort.split(',')[1] === 'asc';\n    }\n\n    /**\n     * @return {array} list of key-value pairs of sort options\n     */\n    getSortOptions() {\n        return SORT_OPTIONS_DEFAULT.slice(0);\n    }\n\n\n    // -----------------------------------------------------------\n\n\n    /**\n     *\n     */\n    clear () {\n        this.query = this.defaultQuery;\n    }\n}\n\nexport default Query;\n","\nimport Query from './query';\n\nexport default function() {\n    return new Query();\n}\n","\nimport ItemTypes from '../shared/types';\nimport ItemService from './item';\nimport LayerService from './layer';\nimport ServiceService from './service';\nimport GalleryService from './gallery';\nimport DatasetService from './dataset';\nimport MapService from './map';\n\n/**\n * @param {any} arg - string type or object with type property\n * @param {string} baseUrl - base endpoint of GeoPlatform API\n * @return {ItemService}\n */\nconst ServiceFactory = function(arg, baseUrl, httpClient) {\n    let type = (typeof(arg) === 'string') ?\n        arg : (arg && arg.type ? arg.type : null);\n    if(!type) throw new Error(\"Must provide a type or object with a type specified\");\n    if(!baseUrl) throw new Error(\"Must provide a base url\");\n    if(!httpClient) throw new Error(\"Must provide an http client to use to make requests\");\n    switch(type) {\n        case ItemTypes.LAYER:   return new LayerService(  baseUrl, httpClient);\n        case ItemTypes.SERVICE: return new ServiceService(baseUrl, httpClient);\n        case ItemTypes.MAP:     return new MapService(    baseUrl, httpClient);\n        case ItemTypes.GALLERY: return new GalleryService(baseUrl, httpClient);\n        case ItemTypes.DATASET: return new DatasetService(baseUrl, httpClient);\n        default:                return new ItemService(   baseUrl, httpClient);\n    }\n};\n\nexport default ServiceFactory;\n","export default {\n\n    //ualUrl: '...',\n    //appId: '...',\n\n    configure: function(options) {\n        Object.assign(this, options);\n    }\n};\n"],"names":["JQueryHttpClient","options","setTimeout","timeout","setAuthToken","token","arg","opts","method","url","json","dataType","params","data","processData","contentType","headers","Authorization","o","hasOwnProperty","jQuery","Error","d","Q","defer","success","resolve","error","xhr","status","message","reject","ajax","promise","NGHttpClient","angular","$http","useXDomain","injector","get","then","response","catch","NodeHttpClient","qs","file","fs","require","formData","value","createReadStream","path","filename","originalFilename","Object","assign","body","auth","deferred","request","checkAndHandleError","e","props","code","connect","statusCode","babelHelpers.typeof","sidx","indexOf","eidx","item","substring","uri","pathname","JSON","parse","err","DATASET","SERVICE","LAYER","MAP","GALLERY","ORGANIZATION","COMMUNITY","CONCEPT","CONCEPT_SCHEME","STANDARD","ItemService","httpClient","setUrl","client","httpMethods","baseUrl","apiBase","id","buildRequest","execute","itemObj","getUri","patch","getQuery","format","undefined","isFile","ro","object","obj","type","createRequestOpts","DatasetService","MapService","LayerService","req","keys","missing","find","key","srs","bbox","height","width","info_format","x","y","i","j","ServiceService","service","svc","query","Query","types","ItemTypes","resourceTypes","pageSize","results","GalleryService","galleryId","itemId","UtilsService","property","AgolQuery","_query","page","size","result","prop","push","join","setQ","q","setTypes","setGroups","groups","setOrgs","orgs","setExtent","sort","order","setSort","split","setPage","isNaN","setPageSize","AgolService","identifiers","length","ids","filter","replace","TYPES","QUERY","KEYWORDS","URI","CREATED_BY","CONTRIBUTED_BY","CREATOR","SVC_TYPES","THEMES_ID","THEMES_LABEL","THEMES_URI","PUBLISHERS","PUBLISHERS_LABEL","PUBLISHERS_URI","USED_BY_ID","USED_BY_LABEL","USED_BY_URI","SCHEMES_ID","SCHEMES_LABEL","SCHEMES_URI","VISIBILITY","EXTENT","MODIFIED_BEFORE","MODIFIED_AFTER","BEGINS","ENDS","RESOURCE_TYPE","FOR_TYPES","SORT_OPTIONS_DEFAULT","label","KGQuery","defaultQuery","name","setParameter","getParameter","p","text","QueryParameters","setClassifiers","objTypes","slice","KGService","_search","PURPOSE","FUNCTION","TOPIC_PRIMARY","TOPIC_SECONDARY","SUBJECT_PRIMARY","SUBJECT_SECONDARY","AUDIENCE","PLACE","CATEGORY","THEMES","SERVICE_TYPES","CONCEPT_SCHEMES","USED_BY","FIELDS_DEFAULT","FACETS_DEFAULT","QueryFacets","total","fields","includeFacets","setUri","user","setCreatedBy","themes","parameter","setThemes","param","publishers","setPublishers","PUBLISHERS_ID","setUsedBy","schemes","setSchemes","SCHEMES","setServiceTypes","vis","setVisibility","visibility","date","beforeOrAfter","setModified","dir","oppProp","getTime","toBboxString","setBeginDate","Date","setEndDate","begin","end","setBetween","begins","ends","setResourceTypes","names","setFacets","facets","getFacets","idx","splice","setFields","ServiceFactory","configure"],"mappings":"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"}